<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NationalInstruments.ModularInstruments.NIFgen.Fx40</name>
    </assembly>
    <members>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.BusType">
            <summary>
            The bus type of the signal generator.
            </summary>
            <lastupdated>2/21/2017 3:24:50 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.BusType.Invalid">
            <summary>
            An invalid bus type.
            </summary>
            <lastupdated>2/21/2017 3:25:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.BusType.AT">
            <summary>
            The AT bus type.
            </summary>
            <lastupdated>2/21/2017 3:25:36 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.BusType.Pci">
            <summary>
            The PCI bus type.
            </summary>
            <lastupdated>2/21/2017 3:26:29 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.BusType.Pxi">
            <summary>
            The PXI bus type.
            </summary>
            <lastupdated>2/21/2017 3:26:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.BusType.Vxi">
            <summary>
            The VXI bus type.
            </summary>
            <lastupdated>2/21/2017 3:27:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.BusType.PCCard">
            <summary>
            The PC card or PCMCIA bus type.
            </summary>
            <lastupdated>2/21/2017 3:26:16 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.BusType.Pxie">
            <summary>
            The PXI Express bus type.
            </summary>
            <lastupdated>2/21/2017 3:26:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.ByteOrder">
            <summary>
            The significance of the byte in the smallest address.
            </summary>
            <lastupdated>3/13/2017 10:40:05 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.ByteOrder.LittleEndian">
            <summary>
            The least significant byte is stored in the smallest address.
            </summary>
            <lastupdated>3/13/2017 10:40:11 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.ByteOrder.BigEndian">
            <summary>
            The most significant byte is stored in the smallest address.
            </summary>
            <lastupdated>3/13/2017 10:40:08 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.ClockMode">
            <summary>
            The sample clock mode for the signal generator.
            </summary>
            <lastupdated>2/21/2017 3:28:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.ClockMode.HighResolution">
            <summary>
            Generates the sample rate using the high-resolution clock source.
            </summary>
            <lastupdated>2/21/2017 3:29:45 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.ClockMode.DivideDown">
            <summary>
            Generates the sample rate by dividing the source frequency.
            </summary>
            <lastupdated>2/21/2017 3:29:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.ClockMode.Automatic">
            <summary>
            NI-Fgen driver software selects between the divide-down and high-resolution modes.
            </summary>
            <lastupdated>2/21/2017 3:29:07 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.DelayUnits">
            <summary>
            The units of time for a delay.
            </summary>
            <lastupdated>3/10/2017 12:32:04 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.DelayUnits.SampleClockPeriods">
            <summary>
            The delay in sample clock periods.
            </summary>
            <lastupdated>2/21/2017 3:30:16 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.DelayUnits.Seconds">
            <summary>
            The delay in seconds.
            </summary>
            <lastupdated>2/21/2017 3:30:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.DigitalEdge">
            <summary>
            The active edge for trigger.
            </summary>
            <lastupdated>2/21/2017 3:30:40 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.DigitalEdge.Rising">
            <summary>
            Represents a signal transition from low level to high level.
            </summary>
            <lastupdated>3/13/2017 10:40:19 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.DigitalEdge.Falling">
            <summary>
            Represents a signal transition from high level to low level.
            </summary>
            <lastupdated>3/13/2017 10:40:14 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence">
            <summary>
            Provides functionality for configuring, defining, and clearing an arbitrary sequence.
            </summary>
            <remarks>
            Use this class to create and configure arbitrary sequences. An arbitrary sequence is a sequence of
            waveforms you would like the signal generator to generate. You can use this class to define what waveforms
            you would like to be generated in the sequence, as well as how many times you would like each waveform to generate.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Sequence"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>1/5/2017 1:46:38 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.LengthMax">
            <summary>
            Gets the maximum number of arbitrary waveforms the signal generator allows in a sequence.
            </summary>
            <value>
            The maximum number of arbitrary waveforms the signal generator allows in a sequence.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.LengthMax" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 1:14:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.LengthMin">
            <summary>
            Gets the minimum number of arbitrary waveforms the signal generator allows in a sequence.
            </summary>
            <value>
            The minimum number of arbitrary waveforms the signal generator allows in a sequence.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.LengthMin" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 1:13:38 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.LoopCountMax">
            <summary>
            Gets the maximum number of times the signal generator can repeat a waveform in a sequence.
            </summary>
            <value>
            The maximum number of times the signal generator can repeat a waveform in a sequence.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.LoopCountMax" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 1:14:11 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.NumberSequencesMax">
            <summary>
            Gets the maximum number of arbitrary sequences the signal generator allows.
            </summary>
            <value>
            The maximum number of arbitrary sequences the signal generator allows.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.NumberSequencesMax" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 1:13:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Ivi#Fgen#IIviFgenArbitrarySequence#DepthMax">
            <summary>
            Gets the maximum sequence depth - that is, the number of times a sequence can include
            other sequences recursively. A depth of zero indicates the generator supports
            waveforms only. A depth of 1 indicates a generator supports sequences of waveforms,
            but not sequences of sequences. A depth of 2 or greater indicates that the generator
            supports sequences of sequences.
            </summary>
            <exclude/>
            <lastupdated>1/4/2017 3:10:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Clear(System.Int32)">
            <summary>
            Removes a previously created arbitrary sequence from the signal generator memory and invalidates the sequence handle.
            </summary>
            <param name="handle">The handle of the arbitrary sequence to clear.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Clear(System.Int32)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">The value for <paramref name="handle"/> is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">
            The value <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/> is not
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/5/2017 2:12:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Configure(System.String,System.Int32,System.Double,System.Double)">
            <summary>
            Configures the signal generator properties that affect arbitrary sequence generation.
            </summary>
            <param name="channelName"> The channel name to be used.</param>
            <param name="handle">The handle of the arbitrary sequence to configure.</param>
            <param name="gain">The factor by which the signal generator scales the arbitrary waveforms in the sequence.</param>
            <param name="offset">The value the signal generator adds to the arbitrary waveform data.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Configure(System.String,System.Int32,System.Double,System.Double)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="handle"/> is invalid.
            <para>- or - </para>
            The value for <paramref name="gain"/> is invalid.
            <para>- or - </para>
            The value for <paramref name="offset"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. 
            <para> - or - </para>
            The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/> is not
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/5/2017 2:25:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Create(System.Int32[],System.Int32[])">
            <summary>
            Creates an arbitrary sequence from an array of waveform handles and an array of corresponding loop counts.
            </summary>
            <param name="waveformHandle">The array of waveform handles from which you want to create a new arbitrary sequence.</param>
            <param name="loopCount">The array of loop counts that you want to use to create a new arbitrary sequence.</param>
            <returns>A handle that identifies the sequence.</returns>
            <remarks>
            An arbitrary sequence consists of multiple waveforms. For each waveform, you can specify the number of times that the signal generator produces the waveform
            before proceeding to the next waveform. The number of times to repeat a specific waveform is called the loop count.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Create(System.Int32[],System.Int32[])" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The lengths of <paramref name="waveformHandle"/> and <paramref name="loopCount"/> do not match.
            <para>- or - </para>
            The value for <paramref name="waveformHandle"/> is invalid.
            <para>- or - </para>
            The value for <paramref name="loopCount"/> is invalid.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="waveformHandle"/> is null.
            <para>- or - </para>
            The <paramref name="loopCount"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/> is not
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/5/2017 2:39:42 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Create(System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[]@)">
            <summary>
            Creates an arbitrary sequence from an array of waveform handles and an array of corresponding loop counts and returns a handle that identifies the sequence.</summary>
            <param name="waveformHandle">The array of waveform handles from which you want to create a new arbitrary sequence.</param>
            <param name="loopCount">The array of loop counts that you want to use to create a new arbitrary sequence.</param>
            <param name="sampleCounts">
            The array of sample counts that you want to use to create a new arbitrary waveform. These values indicate the subset, in 
            samples, of the given waveform to generate. Each element must be larger than the minimum waveform size, a multiple of the waveform quantum, and no larger
            than the number of samples in the corresponding waveform.
            </param>
            <param name="markers">
            The array of marker locations where you want a marker to be generated in the sequence. The marker location must be less than the size of the
            waveform the marker is in. Use -1 to specify no marker.
            </param>
            <param name="coercedMarkers">
            Upon return, contains the values of all given markers that are coerced (rounded) to the nearest marker quantum. 
            <note type="note">
            Not all devices coerce markers.
            </note>
            </param>
            <returns>A handle that identifies the sequence.</returns>
            <remarks>
            An arbitrary sequence consists of multiple waveforms. For each waveform, you can specify the number of times that the signal generator produces the waveform
            before proceeding to the next waveform. The number of times to repeat a specific waveform is called the loop count.
            </remarks>
            <exception cref="T:System.ObjectDisposedException"><see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.Create(System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[]@)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The lengths of <paramref name="waveformHandle"/> and <paramref name="loopCount"/> do not match.<para>- or - </para>
            The lengths of <paramref name="waveformHandle"/> and <paramref name="sampleCounts"/> do not match.<para>- or - </para>
            The lengths of <paramref name="waveformHandle"/> and <paramref name="markers"/> do not match.<para>- or - </para>
            The value for <paramref name="waveformHandle"/> is invalid.<para>- or - </para>
            The value for <paramref name="loopCount"/> is invalid.<para>- or - </para>
            The value for <paramref name="sampleCounts"/> is invalid. <para>- or - </para>
            The value for <paramref name="markers"/> is invalid.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="waveformHandle"/> is null.<para>- or - </para>
            The <paramref name="loopCount"/> is null. <para>- or - </para>
            The <paramref name="sampleCounts"/> is null. <para>- or - </para>
            The <paramref name="markers"/> is null. <para>- or - </para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is not
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 1:16:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.GetHandle(System.String)">
            <summary>
            Gets the arbitrary sequence handle for the channel specified.
            </summary>
            <param name="channelName">The channel name of the desired arbitrary sequence handle to return.</param>
            <returns>The arbitrary sequence handle for the channel specified.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.GetHandle(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or - </para>
            The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/5/2017 2:43:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.SetHandle(System.String,System.Int32)">
            <summary>
            Sets the arbitrary sequence handle for the channel specified.
            </summary>
            <param name="channelName">The channel to set the arbitrary sequence handle for.</param>
            <param name="handle">The handle that identifies the arbitrary sequence.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence.SetHandle(System.String,System.Int32)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or - </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/5/2017 2:44:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.AnalogPath">
            <summary>
            The analog signal path.
            </summary>
            <lastupdated>2/21/2017 3:22:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Main">
            <summary>
            The main path. 
            </summary>
            <lastupdated>2/21/2017 3:23:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Direct">
            <summary>
            The direct path.
            </summary>
            <lastupdated>2/21/2017 3:22:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.FixedLowGain">
            <summary>
            The main path with low gain amplifier.
            </summary>
            <lastupdated>2/21/2017 3:23:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.FixedHighGain">
            <summary>
            The main path with high gain amplifier.
            </summary>
            <lastupdated>2/21/2017 3:23:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger">
            <summary>
            Provides methods to configure script triggers for digital edge triggering.
            </summary>
            <remarks>
            Use this class to configure the edge and source for a digital edge script trigger
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.DigitalEdge"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/21/2017 10:25:50 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.Configure(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.DigitalEdge)">
            <summary>
            Configures the script trigger for digital edge triggering.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <param name="source">
            The trigger source for the digital edge script trigger that the signal generator uses.
            </param>
            <param name="edge">
            The edge to detect for the digital edge script trigger.
            </param>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is null.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is empty.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="edge"/> was invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.Configure(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.DigitalEdge)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 10:26:37 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.GetEdge(System.String)">
            <summary>
            Gets the edge to detect for the digital edge script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <returns>
            The edge to detect for the digital edge script trigger.
            </returns>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The digital edge for script triggers in <paramref name="triggerId"/> was set to different values.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.GetEdge(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:39:00 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.SetEdge(System.String,NationalInstruments.ModularInstruments.NIFgen.DigitalEdge)">
            <summary>
            Sets the edge to detect for the digital edge script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <param name="edge">
            The edge to detect for the digital edge script trigger.
            </param>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="edge"/> is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.SetEdge(System.String,NationalInstruments.ModularInstruments.NIFgen.DigitalEdge)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:35:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.GetSource(System.String)">
            <summary>
            Gets the source terminal for the digital edge script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <returns>
            The source terminal for the digital edge script trigger.
            </returns>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The source terminal for script triggers in <paramref name="triggerId"/> was set to different values.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.GetSource(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:39:20 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.SetSource(System.String,System.String)">
            <summary>
            Sets the source terminal for the digital edge script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <param name="source">
            The trigger source for the digital edge script trigger that the signal generator uses.
            </param>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.SetSource(System.String,System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:39:56 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent">
            <summary>
            Provides functionality for configuring data marker events.
            </summary>
            <remarks>
            A data marker is an event that the signal generator generates in relation to the data bits of a waveform that is generated. Up to 
            four bits can be configured to export any valid destination on the signal generator. Refer to <see href="javascript:LaunchFgenConcept('events_data_markers.html');">Data Marker Events</see> 
                 in the
                <format type="italics">NI Signal Generators Help</format> for more information.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.DataMarker"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/17/2017 3:05:00 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.GetDataBitNumber(System.String)">
            <summary>
            Gets the bit number assigned to the data marker event.
            </summary>
            <param name="dataMarkerName">The data marker event name.</param>
            <returns>The bit number assigned to the data marker event.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.GetDataBitNumber(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The data bit number values are not the same between the data marker events specified by <paramref name="dataMarkerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="dataMarkerName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 3:11:13 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.SetDataBitNumber(System.String,System.Int32)">
            <summary>
            Sets the bit number to assign to the data marker event.
            </summary>
            <param name="dataMarkerName">The data marker event name.</param>
            <param name="dataBitNumber">The bit number to assign to the data marker event.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.SetDataBitNumber(System.String,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="dataBitNumber"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="dataMarkerName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 3:12:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.GetActiveLevel(System.String)">
            <summary>
            Gets the output polarity of the data marker event.
            </summary>
            <param name="dataMarkerName">The data marker event name.</param>
            <returns>The output polarity of the data marker event.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.GetActiveLevel(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The level polarity values are not the same between the data marker events specified by <paramref name="dataMarkerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="dataMarkerName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 3:07:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.SetActiveLevel(System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)">
            <summary>
            Sets the output polarity of the data marker event.
            </summary>
            <param name="dataMarkerName">The data marker event name.</param>
            <param name="levelPolarity">The output polarity of the data marker event.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.SetActiveLevel(System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="levelPolarity"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="dataMarkerName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 3:12:11 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.GetOutputTerminal(System.String)">
            <summary>
            Gets the destination terminal for the data marker event.
            </summary>
            <param name="dataMarkerName">The data marker event name.</param>
            <returns>The destination terminal for the data marker event.</returns>
            <remarks>
            NI recommends using a data sample rate of less than 200 MS/s for data markers routed to RTSI. Faster sample rates
            may lead to unwanted behavior.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.GetOutputTerminal(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The output terminal values are not the same between the data marker events specified by <paramref name="dataMarkerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="dataMarkerName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The destination terminal to be routed could not be found on the device.
            <para>
            - or -
            </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 3:11:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.SetOutputTerminal(System.String,System.String)">
            <summary>
            Sets the destination terminal for the data marker event.
            </summary>
            <param name="dataMarkerName">The data marker event name.</param>
            <param name="outputTerminal">The destination terminal for the data marker event.</param>
            <remarks>
            NI recommends using a data sample rate of less than 200 MS/s for data markers routed to RTSI. Faster sample rates
            may lead to unwanted behavior.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent.SetOutputTerminal(System.String,System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="dataMarkerName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 3:12:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger">
            <summary>
            Provides methods and properties to configure the digital edge start trigger.
            </summary>
            <remarks>
            Use this class to configure the edge and source for a digital edge start trigger.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.DigitalEdge"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/21/2017 11:40:26 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger.Edge">
            <summary>
            Gets or sets the active edge for the digital edge start trigger.
            </summary>
            <value>
            The active edge for the digital edge start trigger. The default value is <see cref="F:NationalInstruments.ModularInstruments.NIFgen.DigitalEdge.Rising"/>.
            </value>
            <remarks>
            This property is used only when  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.TriggerType" crefType="PartiallyQualified"/>  is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerType.DigitalEdge" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger.Edge" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger.Source">
            <summary>
            Gets or sets the source terminal for the digital edge start trigger.
            </summary>
            <value>
            The source terminal for the digital edge start trigger.
            </value>
            <remarks>
            <para>
            This property is used only when  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.TriggerType" crefType="PartiallyQualified"/> 
             is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerType.DigitalEdge" crefType="PartiallyQualified"/>. 
            <para>You can specify any valid source terminal for 
            this property. Source terminals can be specified in two ways. If your device is named <format type="monospace">Dev1</format> and your terminal is <format type="monospace">PFI0</format>, then the terminal can be specified 
            as a fully qualified terminal name, "<format type="monospace">/Dev1/PFI0</format>". You can also specify the terminal using <format type="monospace">PFI 0</format>. 
            For a list of the terminals available on your device, 
            refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.</para>
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger.Source" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:44:57 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger.Configure(System.String,NationalInstruments.ModularInstruments.NIFgen.DigitalEdge)">
            <summary>
            Configures the start trigger for digital edge triggering. 
            </summary>
            <param name="source">
            The source terminal for the digital edge start trigger.
            </param>
            <param name="edge">
            The active edge for the digital edge start trigger.
            </param>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="edge"/> is invalid.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger.Configure(System.String,NationalInstruments.ModularInstruments.NIFgen.DigitalEdge)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:38:29 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger">
            <summary>
            Provides methods to configure digital level script triggers.
            </summary>
            <remarks>
            Use this class to configure the level and source for a digital level script trigger.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.DigitalLevel"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/21/2017 11:46:14 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.Configure(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)">
            <summary>
            Configures the script trigger for digital level triggering. 
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <param name="source">
            The trigger source for the digital level script trigger.
            </param>
            <param name="level">
            The active level to detect for the digital level start trigger.
            </param>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is required. Null or empty strings are not valid for <paramref name="triggerId"/>.
            <para>
            - or -
            </para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="level"/> is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger.Configure(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.DigitalEdge)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:43:18 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.GetSource(System.String)">
            <summary>
            Gets the source terminal for the digital level script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <returns>
            The source terminal for the digital level script trigger.
            </returns>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>
            - or -
            </para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The source terminal for script triggers in <paramref name="triggerId"/> was set to different values.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.GetSource(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:47:28 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.SetSource(System.String,System.String)">
            <summary>
            Sets the source terminal for the digital level script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <param name="source">
            The trigger source for the digital level script trigger.
            </param>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>
            - or -
            </para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.SetSource(System.String,System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:48:19 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.GetActiveLevel(System.String)">
            <summary>
            Gets the active level to detect for the digital level script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <returns>
            The active level to detect for the digital script trigger.
            </returns>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>
            - or -
            </para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The active level for script triggers in <paramref name="triggerId"/> is set to different values.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.GetActiveLevel(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:44:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.SetActiveLevel(System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)">
            <summary>
            Sets the active level to detect for the digital level script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <param name="level">
            The active level to detect for the digital level start trigger.
            </param>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>
            - or -
            </para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="level"/> is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger.SetActiveLevel(System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:44:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent">
            <summary>
            Provides properties used to configure and monitor Done events.
            </summary>
            <remarks>
            Use this class to configure and monitor Done events. A "Done" event 
            is a signal sent by the signal generator indicating that waveform 
            generation is complete. A Done event can be a level or pulse signal.
            Use this class to configure the signal and determine its destination
            terminal.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Done"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 2:45:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.ActiveLevel">
            <summary>
            Gets or sets the output polarity of the Done event.
            </summary>
            <value>
            The output polarity of the Done event.
            </value>
            <remarks>
            A "Done" event is a signal sent by the signal generator indicating that waveform generation is complete. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.ActiveLevel" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.Delay">
            <summary>
            Gets or sets the amount by which to delay a done event with respect to the end of the analog output of the signal generator.
            </summary>
            <value>
            The amount to delay a done event with respect to the end of the analog output of the signal generator. The default value is 0.
            </value>
            <remarks>
            <para>A "Done" event is a signal sent by the signal generator indicating that waveform generation is complete. </para>
            A positive delay value indicates that the done event occurs after the analog data output, while a negative delay value indicates that the
            done event occurs before the analog data output. Using the default value (0) aligns the done event with the analog output.
            You can specify the units of the delay value by setting the 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.DelayUnits" crefType="PartiallyQualified"/> property.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.Delay" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The value set is out of the legal range.
            <para>
            - or -
            </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 1:26:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.DelayUnits">
            <summary>
            Gets or sets the units used for <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.Delay" crefType="PartiallyQualified"/>.
            </summary>
            <value>
            The units used for <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.Delay" crefType="PartiallyQualified"/>.
            The default value is <see cref="F:NationalInstruments.ModularInstruments.NIFgen.DelayUnits.Seconds"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.DelayUnits" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:39 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.IsLatched">
            <summary>
            Gets a value indicating whether the Done event is latched.
            </summary>
            <value>
            <see langword="true"/> if the Done event is latched; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            A "Done" event is a signal sent by the signal generator indicating that waveform generation is complete. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.IsLatched" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:06:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.OutputBehavior">
            <summary>
            Gets or sets the behavior of the Done event signal on the output terminal.
            </summary>
            <value>
            The behavior of the Done event signal on the output terminal.
            </value>
            <remarks>
            <para>
            A "Done" event is a signal sent by the signal generator indicating that waveform generation is complete. 
            </para>
            The valid values for this property are <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Pulse" crefType="PartiallyQualified"/> and
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Level" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.OutputBehavior" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.OutputTerminal">
            <summary>
            Gets or sets the destination terminal for the Done event.
            </summary>
            <value>
            The destination terminal for the Done event.
            </value>
            <remarks>
            <para>
            A "Done" event is a signal sent by the signal generator indicating that waveform generation is complete. 
            </para>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            <note type="note">
            For ranges of objects, specify a number immediately before and after every colon ("<format type="monospace">:</format>") in the input string. Or, if a name is specified after
            the colon, it must be identical to the name specified immediately before the colon. Colons are not allowed within the names of the individual objects.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.OutputTerminal" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.FormatException">
            The syntax for a range of objects in the input string is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:09:20 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulsePolarity">
            <summary>
            Gets or sets the output polarity of the Done event.
            </summary>
            <value>
            The output polarity of the Done event.
            </value>
            <remarks>
            A "Done" event is a signal sent by the signal generator indicating that waveform generation is complete. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulsePolarity" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:43 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulseWidth">
            <summary>
            Gets or sets the pulse width value for the Done event.
            </summary>
            <value>
            The pulse width value for the Done event.
            </value>
            <remarks>
            <para>
            A "Done" event is a signal sent by the signal generator indicating that waveform generation is complete. 
            </para>
            You can specify the units of the pulse width by setting 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulseWidthUnits" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulseWidth" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:45 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulseWidthUnits">
            <summary>
            Gets or sets the units used for 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulseWidth" crefType="PartiallyQualified"/>.
            </summary>
            <value>
            The units used for <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulseWidth" crefType="PartiallyQualified"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent.PulseWidthUnits" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer">
            <summary>
            Provides properties to configure data transfer settings.
            </summary>
            <remarks>
            Use this class to configure how samples will be downloaded to onboard memory.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.DataTransfer"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>1/5/2017 2:48:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.BlockSize">
            <summary>
            Gets or sets the number of samples to download at a time to onboard memory.
            </summary>
            <value>
            The number of samples to download at a time to onboard memory.
            </value>
            <remarks>
            This property is useful when the total data to be transferred to onboard memory is large.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.BlockSize" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.FileTransferBlockSize">
            <summary>
            Gets or sets the maximum number of samples to transfer at one time from the device to host memory.
            </summary>
            <value>
            The maximum number of samples to transfer at one time from the device to host memory.
            </value>
            <remarks>
            This property is used in conjunction with the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformDoubleFromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/>
            and
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformInt16FromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/>.
            If the requested value is not evenly divisible by the required increment, 
            this property is coerced up to the next 64-sample increment (or a 32-sample increment for complex samples).
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.FileTransferBlockSize" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.MaximumBandwidth">
            <summary>
            Gets or sets the maximum amount of bus bandwidth to use for data transfers.
            </summary>
            <value>
            The maximum amount of bus bandwidth to use for data transfers.
            </value>
            <remarks>
            The signal generator limits data transfer speeds on the PCI Express bus to the value 
            you specify for this property. Set this property to optimize bus bandwidth usage 
            for multi-device streaming applications by preventing the signal generator 
            from consuming all the available bandwidth on a PCI Express link 
            when waveforms are being written to the onboard memory of the device.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.FileTransferBlockSize" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.MaximumInFlightReads">
            <summary>
            Gets or sets the maximum number of concurrent PCI Express read requests the signal generator can issue.
            </summary>
            <value>
            The maximum number of concurrent PCI Express read requests the signal generator can issue. The default value is the highest value the signal generator supports. 
            </value>
            <remarks>
            <para>
            When transferring data from computer memory to device onboard memory across the PCI Express bus, 
            the signal generator can issue multiple memory reads at the same time. 
            In general, the larger the number of read requests, the more efficiently the device uses the bus. 
            This efficiency is caused by the multiple read requests that keep data flowing, 
            even in a PCI Express topology that has high latency due to PCI Express switches in the data path. 
            Most NI devices can issue a large number of read requests, typically 8 or 16. 
            By default, this property is set to the highest value the signal generator supports.
            </para>
            <para>
            If other devices in your system cannot tolerate long data latencies, 
            it may be helpful to decrease the number of in-flight read requests the signal generator issues. 
            This change helps to reduce the amount of data the signal generator reads at one time.
             <note type="note">
            You cannot change this property while the device is generating a waveform. 
            If you want to change the device configuration, call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/>  
            or wait for the generation to complete.
            </note></para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.FileTransferBlockSize" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.PreferredPacketSize">
            <summary>
            Gets or sets the preferred size of the data field in a PCI Express read request packet.
            </summary>
            <value>
            The preferred size of the data field in a PCI Express read request packet. The default value is the largest packet size allowed by the system. 
            </value>
            <remarks>
            In general, the larger the packet size, the more efficiently the device uses the bus. 
            By default, NI signal generators use the largest packet size allowed by the system. 
            However, because of different system implementations, some systems may perform better 
            with smaller packet sizes.
            <para>
            Recommended values for this property are powers of two between 64 and 512.
            <note type="note">
            In some cases, the signal generator generates packets smaller than 
            the preferred size you set with this property.
            </note>
            <note type="note">
            You cannot change this property while the device is generating a waveform. 
            If you want to change the device configuration, call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/>  
            or wait for the generation to complete.
            </note></para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer.FileTransferBlockSize" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity">
            <summary>
            Provides properties and methods that contain and return information about the instrument and the NI-FGEN driver software.
            </summary>
            <remarks>
            <para>Use this class to get information about the instrument, such as the vendor, manufacturer, or revision.</para>
            <para>An instance of this class is created when  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> object is constructed. You can use 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Identity" crefType="PartiallyQualified"/>
            to access 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity"/> object. 
            <note type="tip">Example applications are located in the <format type="monospace"><entity value="lt"/><format type="italics">Public Documents</format><entity value="gt"/>\National Instruments\NI-Fgen\NI-FGEN Examples\DotNET 4.<format type="italics">x</format></format> directory
            or in the <format type="bold">Start</format> menu at <format type="bold">National Instruments<entity value="raquo"/>NI-FGEN<entity value="raquo"/>NI-FGEN Examples</format>.
            </note></para>
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Identity"/>.
            </para>
            </remarks>
            <threadsafety safety="safe"/>
            <lastupdated>3/10/2017 3:17:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.BusType">
            <summary>
            Gets the bus type of the signal generator.
            </summary>
            <value>
            The bus type of the signal generator.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.BusType" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:50:55 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.ChannelCount">
            <summary>
            Gets the number of channels on the signal generator currently in use.
            </summary>
            <value>
            The number of channels on the signal generator currently in use.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.ChannelCount" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:51:14 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.Description">
            <summary>
            Gets a string containing a description of the NI-FGEN driver software.
            </summary>
            <value>
            The description of the specific NI-FGEN driver software.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.Description" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:54:57 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.Identifier">
            <summary>
            Gets a string containing the case-sensitive unique identifier of the NI-FGEN driver software.
            </summary>
            <value>
            The case-sensitive unique identifier of the NI-FGEN driver software.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.Identifier" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 11:55:03 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.InstrumentFirmwareRevision">
            <summary>
            Gets a string containing the firmware revision information for the signal generator currently in use.
            </summary>
            <value>
            The firmware revision information for the signal generator currently in use. 
            This value depends on the signal generator the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session is connected to.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.InstrumentFirmwareRevision" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:55:11 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.InstrumentManufacturer">
            <summary>
            Gets a string containing the name of the manufacturer for the signal generator currently in use.
            </summary>
            <value>
            The manufacturer of the signal generator currently in use. 
            This value depends on the signal generator  the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session is connected to.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.InstrumentManufacturer" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:55:18 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.InstrumentModel">
            <summary>
            Gets a string containing the model number or name of the signal generator currently in use.
            </summary>
            <value>
            The model number or name of the signal generator currently in use. 
            This value depends on the signal generator the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session is connected to.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.InstrumentModel" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:55:27 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.MemorySize">
            <summary>
            Gets an integer that specifies the amount of memory (in bytes) on the signal generator.
            </summary>
            <value>
            The amount of memory (in bytes) on the signal generator.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.MemorySize" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:55:35 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.ModuleRevision">
            <summary>
            Gets a string that specifies the revision letter of the signal generator currently in use.
            </summary>
            <value>
            The revision letter of the signal generator currently in use.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.ModuleRevision" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:52:51 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.Revision">
            <summary>
            Gets a string containing any additional version information about the underlying NI-FGEN driver software.
            </summary>
            <value>
            Additional version information about the NI-FGEN driver software.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.Revision" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 2:26:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.SerialNumber">
            <summary>
            Gets a string that specifies the serial number of the signal generator currently in use.
            </summary>
            <value>
            The serial number of the signal generator currently in use.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.SerialNumber" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:53:08 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.SpecificationMajorVersion">
            <summary>
            Gets an integer that specifies the major version number of the class specification in accordance with which the <see cref="N:NationalInstruments.ModularInstruments.NIFgen"/> .NET class library was developed.
            </summary>
            <value>
            The major version number of the class specification in accordance with which  <see cref="N:NationalInstruments.ModularInstruments.NIFgen"/> .NET class library was developed. 
            The value is determined by the <see cref="N:NationalInstruments.ModularInstruments.NIFgen"/> .NET class library in use.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.SpecificationMajorVersion" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:53:49 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.SpecificationMinorVersion">
            <summary>
            Gets an integer that specifies the minor version number of the class specification in accordance with which  the <see cref="N:NationalInstruments.ModularInstruments.NIFgen"/> .NET class library was developed.
            </summary>
            <value>
            The minor version number of the class specification in accordance with which the <see cref="N:NationalInstruments.ModularInstruments.NIFgen"/> .NET class library was developed. 
            The value is determined by the <see cref="N:NationalInstruments.ModularInstruments.NIFgen"/> .NET class library in use.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.SpecificationMinorVersion" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:54:20 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.Vendor">
            <summary>
            Gets a string containing the name of the vendor that supplies the NI-FGEN driver software.
            </summary>
            <value>
            The vendor that supplies the NI-FGEN driver software. This value depends on the signal generator the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session is connected to.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.Vendor" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:54:44 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.GetGroupCapabilities">
            <summary>
            Returns an array of strings containing the names of the IVI class capability groups, or standard methods and properties, that the 
            NI-FGEN driver software implements.
            </summary>
            <returns>
            A list of names of IVI class capability groups that the 
            NI-FGEN driver software implements.
            </returns>
            <remarks>
            IVI class capability groups are defined in the IVI 3.1: Driver Architecture Specification. Refer to the <see href="http://www.ivifoundation.org">IVI Foundation website</see> for more information. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.GetGroupCapabilities" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 2:27:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.GetSupportedInstrumentModels">
            <summary>
            Returns an array of strings containing the names of the instrument models with which the NI-FGEN driver software is compatible.
            </summary>
            <returns>
            A list of the names of the instrument models with which the NI-FGEN driver software is compatible.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity.GetSupportedInstrumentModels" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 2:27:05 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation">
            <summary>
            Provides properties and methods that control the operation of the NI-FGEN driver software.
            </summary>
            <remarks>Use this class to oversee or change the operations for the NI-FGEN driver software. For example, use this class to see if the driver software is simulating, checking value ranges, or coercing records.
            <para>An instance of this class is created when an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> object is constructed. You can 
            use <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.DriverOperation" crefType="PartiallyQualified"/> to access the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation"/> object. 
            <note type="tip">Example applications are located in the <format type="monospace"><entity value="lt"/><format type="italics">Public Documents</format><entity value="gt"/>\National Instruments\NI-Fgen\NI-FGEN Examples\DotNET 4.<format type="italics">x</format></format> directory
            or in the <format type="bold">Start</format> menu at <format type="bold">National Instruments<entity value="raquo"/>NI-FGEN<entity value="raquo"/>NI-FGEN Examples</format>.
            </note>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.DriverOperation"/>.
            </para>
            </remarks>
            <threadsafety safety="safe"/>
            <lastupdated>3/10/2017 3:25:43 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.Cache">
            <summary>
            Gets or sets a value indicating whether to cache the values of properties.
            </summary>
            <value>
            <see langword="true"/> if caching is enabled;
            <see langword="false"/> if caching is disabled. The default value is <see langword="true"/>.
            </value>
            <remarks>
            If <see langword="true"/>, the underlying NI-FGEN driver will keep track of the current instrument settings to avoid sending redundant
            commands to the instrument. This can significantly increase execution speed.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.Cache" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:05:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.DriverSetup">
            <summary>
            Gets the string used to set the initial values for <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> properties.
            </summary>
            <value>
            The driver setup string is used to set the initial values for properties that are specific to <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/>. 
            This value is determined by the option string used to initialize  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session with the instrument.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.DriverSetup" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:05:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.IOResourceDescriptor">
            <summary>
            Gets a string containing the resource name used to identify the instrument.
            </summary>
            <value>
            The resource name used to identify the physical instrument. 
            This value is determined by the resource descriptor set in the IVI configuration store. 
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.IOResourceDescriptor" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:05:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.InterchangeCheck">
            <summary>
            Gets or sets a value indicating whether to perform interchangeability checking and raise interchangeability warnings.
            </summary>
            <value><see langword="true"/>, if interchangeability checking is enabled; otherwise, <see langword="false"/>. 
            The default value is <see langword="false"/>.
            </value>
            <remarks>
            Interchangeability warnings indicate that using your application with a different instrument might cause different behavior. Interchangeability 
            checking examines the properties in a capability group only if you specify a value for at least one property within that group. Interchangeability 
            warnings can occur when a property affects the behavior of the instrument and you have not set that property or the property has been invalidated 
            since you set it.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.InterchangeCheck" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:57:45 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.LogicalName">
            <summary>
            Gets a string containing the logical name that was specified when the NIFgen session object was constructed. 
            </summary>
            <value>
            The logical name specified when the  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/>  session object was constructed. 
            This value is determined by the resource name string used to initialize  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session with the instrument.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.LogicalName" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 11:58:23 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.QueryInstrumentStatus">
            <summary>
            Gets or sets a value indicating whether the NI-FGEN driver software queries the instrument status after each operation.</summary>
            <value>
            <see langword="true"/>, if the instrument driver software queries the instrument status after each operation;
            otherwise, <see langword="false"/>. 
            The default value is <see langword="true"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.QueryInstrumentStatus" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:05:54 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.RangeCheck">
            <summary>
            Gets or sets a value indicating whether to validate values and method parameters. 
            </summary>
            <value>
            <see langword="true"/>, if the instrument driver validates values and method parameters; otherwise, 
            <see langword="false"/>. 
            The default value is <see langword="true"/>.
            </value>
            <remarks>
            If enabled, in some cases, the NI-FGEN driver does extra validation of parameter values. 
            Range checking parameters is useful for debugging. After you validate your program, you can set this property to <see langword="false"/> 
            to disable range checking and maximize performance.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.RangeCheck" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:05:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.RecordCoercions">
            <summary>
            Gets or sets a value indicating whether the IVI engine keeps a list of the value coercions it makes for integer and real type properties.
            </summary>
            <value>
            <see langword="true"/>, if the IVI engine keeps a list of the value coercions; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.RecordCoercions" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:06:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.Simulate">
            <summary>
            Gets or sets a value indicating whether to simulate NI-FGEN driver software I/O operations.
            </summary>
            <value>
            <see langword="true"/> if the instrument driver software simulates I/O operations;
            <see langword="false"/> if the instrument driver software does not simulate I/O operations. 
            The default value is <see langword="false"/>. This value is determined by the option string used to initialize  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session with the instrument.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.Simulate" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SimulationStateException">
            Simulation state cannot be changed on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:06:05 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.InvalidateAllAttributes">
            <summary>
            Invalidates the cached values of all the properties for the session.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.InvalidateAllAttributes" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:06:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.ResetInterchangeCheck">
            <summary>
            Resets the interchangeability checking algorithms of the NI-FGEN driver software 
            so that methods and properties that executed prior to calling this 
            method have no effect on whether future calls to the driver 
            generate interchangeability warnings.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation.ResetInterchangeCheck" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:06:16 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility">
            <summary>
            Provides a basic set of driver utility operations.
            </summary>
            <remarks>
            Use this class to help with specific driver tasks like resetting, acquiring a lock, or doing a self-test.
            <para>An instance of this class is created when  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> object is constructed. You can 
            use <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Utility" crefType="PartiallyQualified"/> to access  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/> object. 
            <note type="tip">Example applications are located in the <format type="monospace"><entity value="lt"/><format type="italics">Public Documents</format><entity value="gt"/>\National Instruments\NI-Fgen\NI-FGEN Examples\DotNET 4.<format type="italics">x</format></format> directory
            or in the <format type="bold">Start</format> menu at <format type="bold">National Instruments<entity value="raquo"/>NI-FGEN<entity value="raquo"/>NI-FGEN Examples</format>.
            </note>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Utility"/>.
            </para>
            </remarks>
            <threadsafety safety="safe"/>
            <lastupdated>3/10/2017 3:29:48 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.HardwareState">
            <summary>
            Gets a value indicating the hardware state of the signal generator currently in use.
            </summary>
            <value>
            The hardware state of the signal generator currently in use.
            </value>
            <remarks>
            Hardware states do not necessarily correspond to session states.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.HardwareState" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:30:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.IsSelfCalibrationSupported">
            <summary>
            Gets a value indicating whether self-calibration is supported by the signal generator currently in use.
            </summary>
            <value>
            <see langword="true"/>, if self-calibration is supported; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.IsSelfCalibrationSupported" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.IsSelfCalibrationSupported" crefType="PartiallyQualified"/>
            was called on a simulated session.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:06:26 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.LastSelfCalibrationDateTime">
            <summary>
            Gets a value indicating the date and time of the last successful self-calibration for the signal generator currently in use.
            </summary>
            <value>
            The date and time of the last successful self-calibration for the signal generator currently in use.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.LastSelfCalibrationDateTime" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.LastSelfCalibrationDateTime" crefType="PartiallyQualified"/>
            was called on a simulated session.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 12:08:33 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.LastSelfCalibrationTemperature">
            <summary>
            Gets a value indicating the temperature of the last successful self-calibration of the signal generator currently in use.
            </summary>
            <value>
            The temperature of the last successful self-calibration of the signal generator currently in use.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.LastSelfCalibrationTemperature" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.LastSelfCalibrationTemperature" crefType="PartiallyQualified"/>
            was called on a simulated session.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:06:39 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Disable">
            <summary>
            Places the instrument in a state where it has no, or minimal, effect
            on the external system to which it is connected. This state is not necessarily
            a known state.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Disable" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 12:09:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ErrorQuery">
            <summary>
            Reads an error code and the associated message from the NI-FGEN driver software error queue.
            </summary>
            <returns>
            The error query result.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ErrorQuery" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:06:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Lock(Ivi.Driver.PrecisionTimeSpan)">
            <summary>
            Acquires a synchronization lock on this <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> object instance and all of its contained objects.  
            </summary>
            <param name="maxTime">
            The maximum amount of time to wait to acquire the lock.
            </param>
            <returns>
            A reference to the acquired lock.
            </returns>
            <remarks>
            The calling thread is blocked
            until either the lock is acquired or <paramref name="maxTime"/> expires.  If the lock is not acquired within the interval specified
            by <paramref name="maxTime"/>, an exception is returned.  This method is useful for gaining exclusive access to the driver instance
            across a series of methods calls.  You must call <see cref="M:Ivi.Driver.IIviDriverLock.Unlock" crefType="PartiallyQualified"/> on the returned lock to relinquish the
            lock and allow other threads to access this instance of the driver.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Lock(Ivi.Driver.PrecisionTimeSpan)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.MaxTimeExceededException">The lock is not acquired within the interval specified by <paramref name="maxTime"/>.</exception>
            <lastupdated>2/17/2017 12:06:54 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Lock">
            <summary>
            Acquires a synchronization lock on this <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> object instance and all of its contained objects.
            </summary>
            <returns>
            A reference to the acquired lock.
            </returns>
            <remarks>
            The calling thread is blocked
            indefinitely until the lock is acquired. Use this method to gain exclusive access to the driver
            instance across a series of methods calls.  You must call <see cref="M:Ivi.Driver.IIviDriverLock.Unlock" crefType="PartiallyQualified"/> on the returned lock to
            relinquish the lock and allow other threads to access this instance of the driver. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Lock" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <lastupdated>2/17/2017 12:06:50 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Reset">
            <summary>
            Resets the signal generator to a known state. 
            </summary>
            <remarks>
            This method aborts signal generation, resets all attributes to default values, and stops the export of all external signals and events.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Reset" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:06:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ResetDevice">
            <summary>
            Performs a hard reset on the device. Generation is stopped, all routes are released, external bidirectional terminals are no longer driven high or low, 
            FPGAs are reset, hardware is configured to its default state, and all session attributes are reset to their default states.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ResetWithDefaults" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 12:14:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ResetWithDefaults">
            <summary>
            Resets the signal generator to a known state, while also resetting properties and 
            settings to the initial values specified during the construction of  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ResetWithDefaults" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:07:05 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.SelfCalibrate">
            <summary>
            Performs a full internal self-calibration on the device.
            </summary>
            <remarks>
            If the calibration is successful, new calibration data and constants are stored in the onboard EEPROM.
            Refer to the calibration procedure of the signal generator for more information.<note type="note">
            This method does not apply to the NI 5401/5404/5411/5431.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.SelfTest" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported for a simulated device.
            <para>
            - or -
            </para>
            This method is not supported on this instrument model.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 12:17:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.SelfTest">
            <summary>
            Performs a self-test on the signal generator and returns the test result.
            </summary>
            <returns>
            The results of the self-test.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.SelfTest" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:07:11 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ImportAttributeConfigurationFile(System.String)">
            <summary>
            Imports a configuration to the session from the specified file.
            </summary>
            <remarks>
            You can export and import supported configurations only between NI-FGEN devices with identical bus types, model numbers, and channel counts, as well as the same number of initialized channels.
            <note type="note">You cannot call this method while the session is in the <see href="SigGenHelp.chm::/prog_nifgen_state_model.html">Running/Generating</see> state.</note>
            <para><format type="bold">Supported Configurations</format></para>
            You can export and import the following between NI-FGEN sessions:
            <list type="bullet">
            <item>Attribute configurations</item>
            <item>Arbitrary waveforms</item>
            </list>
            <para><format type="bold">Requirements for Exporting and Importing Arbitrary Waveforms</format></para>
            Arbitrary waveforms you export and import between sessions using this method must meet the following criteria:
            <list type="bullet">
            <item>All waveforms in the exporting session are created from files, other than HWS files, using the <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformInt16FromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/> or <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformDoubleFromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/> methods</item>
            <item>The full file path of the file containing the arbitrary waveform still exists upon import</item>
            <item>All waveforms are defined using handles rather than names</item>
            <item>All waveforms are complete; none are <see href="SigGenHelp.chm::/streaming.html">streamed</see> or incrementally written</item>
            </list>
            You can set the device mode with the FgenOutput.OutputMode property. For more information on arbitrary waveform mode, refer to <see href="SigGenHelp.chm::/Arb_Mode.html">Arbitrary Waveform Output Mode</see> and <see href="SigGenHelp.chm::/programming_arb_waveform.html">Configure Arbitrary Waveform Mode</see>.
            <para><format type="bold">Channel Mapping Behavior</format></para>
            When exporting and importing configurations between NI-FGEN sessions that were initialized with different channels, the configuration of the exporting channel is mapped to the importing channel.
            For example, if channel 0 is initialized for the exporting session and channel 1 is initialized for the importing session, the configuration exported from channel 0 is imported into channel 1.
            <note type="note">NI-FGEN will return an <see cref="T:Ivi.Driver.IviCDriverException"/> if the total number of channels initialized for the exporting session is not equal to the total number of channels initialized for the importing session.</note>
            </remarks>
            <param name="filePath">
            The absolute path to the file that contains the configuration to import.
            If you specify an empty or relative path, this method returns an <see cref="T:Ivi.Driver.IviCDriverException"/>.
            The default file extension is <c>.nifgenconfig</c>.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ImportAttributeConfigurationFile(System.String)" crefType="PartiallyQualified"/> method was called after the associated
             <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/>
             object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-Fgen driver returned an error.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The filePath was null.
            </exception>
            <lastupdated>06/18/2019 02:54:26 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ExportAttributeConfigurationFile(System.String)">
            <summary>
            Exports a session configuration to the specified file.
            </summary>
            <para/>
            <remarks>
            You can export and imported supported configurations only between NI-FGEN devices with identical bus types, model numbers, and channel counts, as well as the same number of initialized channels.
            This method verifies that the session configuration is valid. If the configuration is invalid, NI-FGEN returns an <see cref="T:Ivi.Driver.IviCDriverException"/>.
            <para><format type="bold">Supported Configurations</format></para>
            You can export and import the following between NI-FGEN sessions:
            <list type="bullet">
            <item>Attribute configurations</item>
            <item>Arbitrary waveforms</item>
            </list>
            <para><format type="bold">Requirements for Exporting and Importing Arbitrary Waveforms</format></para>
            Arbitrary waveforms you export and import between sessions using this method must meet the following criteria:
            <list type="bullet">
            <item>All waveforms in the exporting session are created from files, other than HWS files, using the <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformInt16FromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/> or <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformDoubleFromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/> methods</item>
            <item>The full file path of the file containing the arbitrary waveform still exists upon import</item>
            <item>All waveforms are defined using handles rather than names</item>
            <item>All waveforms are complete; none are <see href="SigGenHelp.chm::/streaming.html">streamed</see> or incrementally written</item>
            </list>
            You can set the device mode with the FgenOutput.OutputMode property. For more information on arbitrary waveform mode, refer to <see href="SigGenHelp.chm::/Arb_Mode.html">Arbitrary Waveform Output Mode</see> and <see href="SigGenHelp.chm::/programming_arb_waveform.html">Configure Arbitrary Waveform Mode</see>.
            <para><format type="bold">Channel Mapping Behavior</format></para>
            When exporting and importing configurations between NI-FGEN sessions that were initialized with different channels, the configuration of the exporting channel is mapped to the importing channel.
            For example, if channel 0 is initialized for the exporting session and channel 1 is initialized for the importing session, the configuration exported from channel 0 is imported into channel 1.
            <note type="note">NI-FGEN will return an <see cref="T:Ivi.Driver.IviCDriverException"/> if the total number of channels initialized for the exporting session is not equal to the total number of channels initialized for the importing session.</note>
            </remarks>
            <param name="filePath">
            The absolute path to a placeholder file you must create to contain the configuration you want to export.
            If you specify an empty or relative path, this method returns an <see cref="T:Ivi.Driver.IviCDriverException"/>.
            The default file extension is <c>.nifgenconfig</c>.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ExportAttributeConfigurationFile(System.String)" crefType="PartiallyQualified"/> method was called after the associated
             <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/>
             object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-Fgen driver returned an error.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The filePath was null.
            </exception>
            <lastupdated>06/18/2019 02:52:09 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ImportAttributeConfigurationBuffer(System.Byte[])">
            <summary>
            Imports a configuration to the session from the specified <see cref="T:System.Byte"/> array <paramref name="configuration"/>.
            </summary>
            <param name="configuration">
            The byte array that contains the configuration to import.
            </param>
            <remarks>
            You can export and import supported configurations only between NI-FGEN devices with identical bus types, model numbers, and channel counts, as well as the same number of initialized channels.
            <note type="note">You cannot call this method while the session is in the <see href="SigGenHelp.chm::/prog_nifgen_state_model.html">Running/Generating</see> state.</note>
            <para><format type="bold">Supported Configurations</format></para>
            You can export and import the following between NI-FGEN sessions:
            <list type="bullet">
            <item>Attribute configurations</item>
            <item>Arbitrary waveforms</item>
            </list>
            <para><format type="bold">Requirements for Exporting and Importing Arbitrary Waveforms</format></para>
            Arbitrary waveforms you export and import between sessions using this method must meet the following criteria:
            <list type="bullet">
            <item>All waveforms in the exporting session are created from files, other than HWS files, using the <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformInt16FromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/> or <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformDoubleFromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/> methods</item>
            <item>The full file path of the file containing the arbitrary waveform still exists upon import</item>
            <item>All waveforms are defined using handles rather than names</item>
            <item>All waveforms are complete; none are <see href="SigGenHelp.chm::/streaming.html">streamed</see> or incrementally written</item>
            </list>
            You can set the device mode with the FgenOutput.OutputMode property. For more information on arbitrary waveform mode, refer to <see href="SigGenHelp.chm::/Arb_Mode.html">Arbitrary Waveform Output Mode</see> and <see href="SigGenHelp.chm::/programming_arb_waveform.html">Configure Arbitrary Waveform Mode</see>.
            <para><format type="bold">Channel Mapping Behavior</format></para>
            When exporting and importing configurations between NI-FGEN sessions that were initialized with different channels, the configuration of the exporting channel is mapped to the importing channel.
            For example, if channel 0 is initialized for the exporting session and channel 1 is initialized for the importing session, the configuration exported from channel 0 is imported into channel 1.
            <note type="note">NI-FGEN will return an <see cref="T:Ivi.Driver.IviCDriverException"/> if the total number of channels initialized for the exporting session is not equal to the total number of channels initialized for the importing session.</note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ImportAttributeConfigurationBuffer(System.Byte[])" crefType="PartiallyQualified"/> method was called after the associated
             <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/>
             object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-Fgen driver returned an error.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The filePath was null.
            </exception>
            <lastupdated>06/18/2019 02:49:30 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ExportAttributeConfigurationBuffer">
            <summary>
            Exports a session configuration to a <see cref="T:System.Byte"/> array buffer.
            </summary>
            <para/>
            <remarks>
            You can export and import supported configurations only between NI-FGEN devices with identical bus types, model numbers, and channel counts, as well as the same number of initialized channels.
            This method verifies that the session configuration is valid. If the configuration is invalid, NI-FGEN returns an <see cref="T:Ivi.Driver.IviCDriverException"/>.
            <para><format type="bold">Supported Configurations</format></para>
            You can export and import the following between NI-FGEN sessions:
            <list type="bullet">
            <item>Attribute configurations</item>
            <item>Arbitrary waveforms</item>
            </list>
            <para><format type="bold">Requirements for Exporting and Importing Arbitrary Waveforms</format></para>
            Arbitrary waveforms you export and import between sessions using this method must meet the following criteria:
            <list type="bullet">
            <item>All waveforms in the exporting session are created from files, other than HWS files, using the <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformInt16FromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/> or <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformDoubleFromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)"/> methods</item>
            <item>The full file path of the file containing the arbitrary waveform still exists upon import</item>
            <item>All waveforms are defined using handles rather than names</item>
            <item>All waveforms are complete; none are <see href="SigGenHelp.chm::/streaming.html">streamed</see> or incrementally written</item>
            </list>
            You can set the device mode with the FgenOutput.OutputMode property. For more information on arbitrary waveform mode, refer to <see href="SigGenHelp.chm::/Arb_Mode.html">Arbitrary Waveform Output Mode</see> and <see href="SigGenHelp.chm::/programming_arb_waveform.html">Configure Arbitrary Waveform Mode</see>.
            <para><format type="bold">Channel Mapping Behavior</format></para>
            When exporting and importing configurations between NI-FGEN sessions that were initialized with different channels, the configuration of the exporting channel is mapped to the importing channel.
            For example, if channel 0 is initialized for the exporting session and channel 1 is initialized for the importing session, the configuration exported from channel 0 is imported into channel 1.
            <note type="note">NI-FGEN will return an <see cref="T:Ivi.Driver.IviCDriverException"/> if the total number of channels initialized for the exporting session is not equal to the total number of channels initialized for the importing session.</note>
            </remarks>
            <returns>
            Returns a <see cref="T:System.Byte"/> array that contains the exported configuration.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ExportAttributeConfigurationBuffer" crefType="PartiallyQualified"/> method was called after the associated
             <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/>
             object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-Fgen driver returned an error.
            </exception>
            <lastupdated>06/18/2019 02:46:46 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.Dispose">
            <summary>
            Disposes <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/> object.
            </summary>
            <lastupdated>3/13/2017 10:39:10 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenEvent">
            <summary>
            Provides properties used to configure NI-FGEN events.
            </summary>
            <remarks>
            Use this class to access sub-objects for marker, data marker, ready for start, started, and done events.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Event"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 1:19:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.ReadyForStart">
            <summary>
            Gets an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent"/> object containing 
            properties used to configure ready for start events.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent"/> object containing properties used to configure ready for start events.
            </value>
            <remarks>
            A ready for start event indicates that the signal generator is configured and ready to receive a start trigger.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.ReadyForStart" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 3:39:39 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Started">
            <summary>
            Gets an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent"/> object containing 
            properties used to configure and monitor started events.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent"/> object containing properties used to configure and monitor started events.
            </value>
            <remarks>
            A started event indicates that the signal generator has received a start trigger and is generating a waveform.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Started" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 3:39:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Done">
            <summary>
            Gets an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent"/> object containing 
            properties used to configure and monitor done events.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDoneEvent"/> object containing properties used to configure and monitor done events.
            </value>
            <remarks>
            A done event indicates that the generation of the previous waveform is complete.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Done" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 3:39:13 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.DataMarker">
            <summary>
            Gets an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent"/> object containing 
            methods used to configure data marker events.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDataMarkerEvent"/> object containing methods used to configure data marker events.
            </value>
            <remarks>
            A data marker is an event that the signal generator generates in relation to the data bits of a waveform that is generated. 
            Up to 4 of the 16 waveform data bits can be configured to export any valid destination on the signal generator.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.DataMarker" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 3:38:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Marker">
            <summary>
            Gets an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent"/> object containing 
            properties used to configure and monitor marker events.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent"/> object containing properties used to configure and monitor marker events.
            </value>
            <remarks>
            A marker is an event that the device generates in relation to a waveform that is generated.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Marker" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 3:39:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter">
            <summary>
            Provides methods for CIC (Cascaded Integrator Comb) filter functionality.
            </summary>
            <remarks>
            Use this class to enable and configure a CIC filter that will be 
            applied to the output of the signal generator.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.CicFilter"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/17/2017 2:40:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.GetEnabled(System.String)">
            <summary>
            Gets a value indicating whether the CIC filter is enabled.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            A value indicating whether the CIC filter is enabled.
            </returns>
            <remarks>
            You must set 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>
            and
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> to the same value.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.GetEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            The instrument under use does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or - </para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:51:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetEnabled(System.String,System.Boolean)">
            <summary>
            Sets a value indicating whether the CIC filter is enabled.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="enabled">
            <see langword="true"/> to enable the CIC filter; 
            <see langword="false"/> to disable the CIC filter.
            </param>
            <remarks>
            You must set 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>
            and
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> to the same value.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, the CIC filter cannot be enabled or disabled. <para>- or -</para> The instrument under use does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
             The value for <paramref name="channelName"/> is invalid. <para>- or -</para> The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:02:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.GetGain(System.String)">
            <summary>
            Gets the gain applied at the final stage of the CIC filter. 
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The gain applied at the final stage of the CIC filter. 
            </returns>
            <remarks>
            The CIC filter gain is commonly used to compensate for attenuation in the FIR filter. 
            When you call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetFilterType(System.String,NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType)" crefType="PartiallyQualified"/>
            with <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.Custom" crefType="PartiallyQualified"/>,
            NI-FGEN calculates the CIC gain to achieve unity gain between the FIR and CIC filters. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.GetGain(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            The instrument under use does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
             The value for <paramref name="channelName"/> is invalid.  <para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:46:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetGain(System.String,System.Double)">
            <summary>
            Sets the gain applied at the final stage of the CIC filter. 
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="gain">
            The gain applied at the final stage of the CIC filter. 
            </param>
            <remarks>
            The CIC filter gain is commonly used to compensate for attenuation in the FIR filter. 
            When you call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetFilterType(System.String,NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType)" crefType="PartiallyQualified"/>
            with <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.Custom" crefType="PartiallyQualified"/>,
            NI-FGEN calculates the CIC gain to achieve unity gain between the FIR and CIC filters. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetGain(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <paramref name="gain"/> is an invalid value.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            The instrument under use does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or -</para>The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:52:20 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.GetInterpolationFactor(System.String)">
            <summary>
            Gets the interpolation factor for the CIC filter.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The interpolation factor for the CIC filter.
            </returns>
            <remarks>
            If the user does not specify a CIC interpolation factor,
            NI-FGEN calculates the appropriate value based on the value returned by
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.GetInterpolationFactor(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            The instrument under use does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:47:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetInterpolationFactor(System.String,System.Double)">
            <summary>
            Sets the interpolation factor for the CIC filter.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="interpolationFactor">
            The interpolation factor for the CIC filter.
            </param>
            <remarks>
            If the user does not specify a CIC interpolation factor,
            NI-FGEN calculates the appropriate value based on the value returned by
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetInterpolationFactor(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for  <paramref name="interpolationFactor"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            The instrument under use does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:03:42 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier">
            <summary>
            Provides methods for carrier functionality.
            </summary>
            <remarks>
            This class allows you to enable and configure a carrier wave used to modulate
            the output of the signal generator.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.Carrier"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/7/2017 3:32:59 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetEnabled(System.String)">
            <summary>
            Gets a  value indicating whether the carrier is enabled.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            A value indicating whether the carrier is enabled.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier"/> is not supported.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:51:57 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.SetEnabled(System.String,System.Boolean)">
            <summary>
            Sets a value indicating whether the carrier is enabled.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="enabled">
            <see langword="true"/> to enable the carrier; <see langword="false"/> to disable the carrier.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier"/> is not supported.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 1:42:18 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetFrequency(System.String)">
            <summary>
            Gets the frequency of the generated carrier.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The frequency of the generated carrier.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetFrequency(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetFrequency(System.String)"/> is not supported.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:30:33 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.SetFrequency(System.String,System.Double)">
            <summary>
            Sets the frequency of the generated carrier.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="frequency">
            The frequency of the generated carrier.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier"/> frequency is not supported.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="frequency"/> is an invalid value.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:36:16 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetPhaseI(System.String)">
            <summary>
            Gets the I carrier phase, in degrees, at the first point of the generated signal.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The I carrier phase, in degrees, at the first point of the generated signal.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetPhaseI(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetPhaseI(System.String)"/> is not supported.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:33:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.SetPhaseI(System.String,System.Double)">
            <summary>
            Sets the I carrier phase, in degrees, at the first point of the generated signal.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="phase">
            The I carrier phase, in degrees, at the first point of the generated signal.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.SetPhaseI(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, I carrier phase is not supported.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="phase"/> is an invalid value.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:37:36 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetPhaseQ(System.String)">
            <summary>
            Gets the Q carrier phase, in degrees, at the first point of the generated signal.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The Q carrier phase, in degrees, at the first point of the generated signal.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetPhaseQ(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.GetPhaseQ(System.String)"/> is not supported.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:33:50 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.SetPhaseQ(System.String,System.Double)">
            <summary>
            Sets the Q carrier phase, in degrees, at the first point of the generated signal.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="phase">
            The Q carrier phase, in degrees, at the first point of the generated signal.
            </param>
            <remarks>
            Use this method only when 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetDataProcessingMode(System.String)" crefType="PartiallyQualified"/>
            returns
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCarrier.SetPhaseQ(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            On the instrument under use, Q carrier phase is not supported.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="phase"/> is an invalid value.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 1:44:09 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter">
            <summary>
            Provides methods for Finite Impulse Response (FIR) filter functionality.
            </summary>
            <remarks>
            Use this class to enable and configure an FIR filter that will be applied
            to the output of the signal generator. Use <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetFilterType(System.String,NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType)"/>
            to determine the type of FIR filter you would like to apply.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.FirFilter"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 3:57:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetEnabled(System.String)">
            <summary>
            Gets a value indicating whether  the FIR filter is enabled.
            </summary>
            <param name="firFilterName">
            The FIR filter name.
            </param>
            <returns>
            A  value indicating whether the FIR filter is enabled.
            </returns>
            <remarks>
            You must set the CIC Filter Enabled and the FIR Filter Enabled to the same value
            using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>
            and
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="firFilterName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="firFilterName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:44:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetEnabled(System.String,System.Boolean)">
            <summary>
            Sets a  value indicating whether the FIR filter is enabled.
            </summary>
            <param name="firFilterName">
            The FIR filter name.
            </param>
            <param name="enabled">
            <see langword="true"/> to enable FIR filter; <see langword="false"/> to disable FIR filter.
            </param>
            <remarks>
            You must set the CIC Filter Enabled and the FIR Filter Enabled to the same value
            using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>
            and
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The instrument does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="firFilterName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="firFilterName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:59:13 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetFilterType(System.String)">
            <summary>
            Gets the pulse-shaping filter type for the FIR filter. 
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The pulse-shaping filter type for the FIR filter. 
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetFilterType(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:15 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetFilterType(System.String,NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType)">
            <summary>
            Sets the pulse-shaping filter type for the FIR filter. 
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="firFilterType">
            The pulse-shaping filter type for the FIR filter. 
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetFilterType(System.String,NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="firFilterType"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="firFilterType"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            The instrument does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:51:10 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetInterpolationFactor(System.String)">
            <summary>
            Gets the interpolation factor for the FIR filter. 
            </summary>
            <param name="firFilterName">
            The FIR filter name.
            </param>
            <returns>
            The interpolation factor for the FIR filter. 
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetInterpolationFactor(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="firFilterName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="firFilterName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:26 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetInterpolationFactor(System.String,System.Double)">
            <summary>
            Sets the interpolation factor for the FIR filter. 
            </summary>
            <param name="firFilterName">
            The FIR filter name.
            </param>
            <param name="interpolationFactor">
            The interpolation factor for the FIR filter. 
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetInterpolationFactor(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The instrument does not support this method.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="firFilterName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="firFilterName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="interpolationFactor"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:51:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetFlatPassband(System.String)">
            <summary>
            Gets the passband value to use when calculating the FIR filter coefficients.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The passband value to use when calculating the FIR filter coefficients
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetFlatPassband(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:22 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetFlatPassband(System.String,System.Double)">
            <summary>
            Sets the passband value to use when calculating the FIR filter coefficients.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="passband">
            The passband value to use when calculating the FIR filter coefficients.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetFlatPassband(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="passband"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:46:54 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetGaussianBT(System.String)">
            <summary>
            Gets the BT value to use when calculating the pulse-shaping FIR filter coefficients.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The BT value to use when calculating the pulse-shaping FIR filter coefficients.
            </returns>
            <remarks>
            The BT value is the product of the -3 dB bandwidth and the symbol period (the inverse of the symbol rate, or baud rate). 
            This method is used only when the FIR filter type is set to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.Gaussian" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetGaussianBT(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 4:00:04 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetGaussianBT(System.String,System.Double)">
            <summary>
            Sets the bandwidth time (BT) value to use when calculating the pulse-shaping FIR filter coefficients.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="btValue">
            The BT value to use when calculating the pulse-shaping FIR filter coefficients.
            </param>
            <remarks>
            The BT value is the product of the -3 dB bandwidth and the symbol period (the inverse of the symbol rate, or baud rate). 
            This method is used only when the FIR filter type is set to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.Gaussian" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetGaussianBT(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="btValue"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:58:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetRaisedCosineAlpha(System.String)">
            <summary>
            Gets the alpha value to use when calculating the pulse-shaping FIR filter coefficients.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The alpha value to use when calculating the pulse-shaping FIR filter coefficients.
            </returns>
            <remarks>
            This method is used only when the FIR filter type is set to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.RaisedCosine" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetRaisedCosineAlpha(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:59:47 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetRaisedCosineAlpha(System.String,System.Double)">
            <summary>
            Sets the alpha value to use when calculating the pulse shaping FIR filter coefficients.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="alpha">
            The alpha value to use when calculating the pulse shaping FIR filter coefficients.
            </param>
            <remarks>
            This method is used only when the FIR filter type is set to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.RaisedCosine" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetRaisedCosineAlpha(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="alpha"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:55:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetRootRaisedCosineAlpha(System.String)">
            <summary>
            Gets the alpha value to use when calculating the pulse-shaping FIR filter coefficients.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The alpha value to use when calculating the pulse-shaping FIR filter coefficients.
            </returns>
            <remarks>
            This method is used only when the FIR filter type is set to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.RootRaisedCosine" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetRootRaisedCosineAlpha(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:59:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetRootRaisedCosineAlpha(System.String,System.Double)">
            <summary>
            Sets the alpha value to use when calculating the pulse-shaping FIR filter coefficients.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="alpha">
            The alpha value to use when calculating the pulse-shaping FIR filter coefficients.
            </param>
            <remarks>
            This method is used only when the FIR filter type is set to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.RootRaisedCosine" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetRootRaisedCosineAlpha(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="alpha"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:55:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.ConfigureCustomCoefficients(System.String,System.Double[])">
            <summary>
            Sets the FIR filter coefficients used by the onboard signal processing block. 
            </summary>
            <param name="channelName">
            The channel name for which you want to configure custom FIR filter coefficients.
            </param>
            <param name="coefficients">
            The FIR filter coefficients used by the onboard signal processing block. The coefficients should range between -1.00 and +1.00.
            <note>
            For the NI 5441, provide a symmetric array of 95 coefficients to this parameter. 
            </note>
            </param>
            <remarks>
            <para>
            The values are coerced to the closest settings achievable by the signal generator.
            </para>
            <para>
            Refer to the FIR filter topic for your device in the <see href="javascript:LaunchFgenConcept('NI_Sources_Help.html');">NI Signal Generators Help</see>  
            for more information about FIR filter coefficients. 
            <note type="note">
            This method is supported only for the NI 5441.
            </note>
            <note type="note">
            The signal generator must not be in the generating state when you call this method.
            </note></para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.ConfigureCustomCoefficients(System.String,System.Double[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            The method was called on a signal generator that does not support this feature.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The filter type is unknown.
            <para>- or -</para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:41:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetCoefficients(System.String)">
            <summary>
            Gets the FIR filter coefficients used by the onboard signal processing block.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The FIR filter coefficients used by the onboard signal processing block.
            </returns>
            <remarks>
            <para>
            These coefficients are determined by NI-FGEN and are based on the FIR filter type 
            and corresponding attribute (Alpha, Pass-band, BT), unless you are using the custom filter. 
            If you are using a custom filter, the coefficients returned are those set with 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.ConfigureCustomCoefficients(System.String,System.Double[])" crefType="PartiallyQualified"/>,
             coerced to the quantized values used by the device.
            </para>
            <para>
            Refer to the FIR filter topic for your device in the <see href="javascript:LaunchFgenConcept('NI_Sources_Help.html');">NI Signal Generators Help</see>
            for more information about FIR filter coefficients. 
            <note type="note">
            This method is supported only for the NI 5441.
            </note>
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetCoefficients(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The filter type is unknown.
            <para>- or -</para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 3:43:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent">
            <summary>
            Provides properties and methods to configure marker events.
            </summary>
            <remarks>
            A marker is an event that the device generates in relation to a waveform that is generated. The event is configured to occur at the
            time of a specific location or sample <format type="italics">n</format>  if the waveform generates on the CH 0 connector. If the waveform loops multiple times in a segment, the
            marker generates each time the waveform loops.
            Refer to <see href="javascript:LaunchFgenConcept('events_data_markers.html');">Data Marker Events</see> 
                 in the
                <format type="italics">NI Signal Generators Help</format> for more information.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Marker"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 11:49:33 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.AllMarkerEventsLatchedStatus">
            <summary>
            Gets or sets the bit field of the latched status of all marker events.
            </summary>
            <value>
            The bit field of the latched status of all marker events.
            </value>
            <remarks>
            Set this property to 0 to clear the latched status of all marker events.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.AllMarkerEventsLatchedStatus" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.AllMarkerEventsLatchedStatus" crefType="PartiallyQualified"/>
            was accessed while the task was not reserved, committed, or running.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:48 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.AllMarkerEventsLiveStatus">
            <summary>
            Gets the bit field of the live status of all marker events.
            </summary>
            <value>
            The bit field of the live status of all marker events.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.AllMarkerEventsLiveStatus" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.AllMarkerEventsLiveStatus" crefType="PartiallyQualified"/>
            was accessed while the task was not reserved, committed, or running.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:22:44 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetDelay(System.String)">
            <summary>
            Gets the amount of delay applied to a marker event with respect to the analog output of the signal generator.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The amount of delay applied to a marker event with respect to the analog output of the signal generator.</returns>
            <remarks>
            A positive delay value indicates that the marker event occurs after the analog data, while a negative delay value indicates that the marker
            event occurs before the analog data. The default value is zero, which aligns the marker event with the analog output.
            You can specify the units of the delay by calling the <seealso cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetDelayUnits(System.String,NationalInstruments.ModularInstruments.NIFgen.DelayUnits)"/> method.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetDelay(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The delay values are not the same between the marker events specified by <paramref name="markerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The value for the delay is outside of the legal range.
            <para>
            - or -
            </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:23:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetDelay(System.String,System.Double)">
            <summary>
            Sets the amount of delay applied to a marker event with respect to the analog output of the signal generator.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="delay">The amount of delay applied to a marker event with respect to the analog output of the signal generator.</param>
            <remarks>
            A positive delay value indicates that the marker event occurs after the analog data, while a negative delay value indicates that the marker
            event occurs before the analog data. The default value is zero, which aligns the marker event with the analog output.
            You can specify the units of the delay by calling the <seealso cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetDelayUnits(System.String,NationalInstruments.ModularInstruments.NIFgen.DelayUnits)"/> method.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetDelay(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:28:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetDelayUnits(System.String)">
            <summary>
            Gets the units used for the marker event delay.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The units used for the marker event delay.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetDelayUnits(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The delay units values are not the same between the marker events specified by <paramref name="markerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:23:52 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetDelayUnits(System.String,NationalInstruments.ModularInstruments.NIFgen.DelayUnits)">
            <summary>
            Sets the units used for the marker event delay.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="delayUnits">The units to use for the marker event delay.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetDelayUnits(System.String,NationalInstruments.ModularInstruments.NIFgen.DelayUnits)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="delayUnits"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:28:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetLatchedStatus(System.String)">
            <summary>
            Gets the latched status of the specified marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The latched status of the specified marker event.</returns>
            <remarks>
            Set the latched status to <see langword="true"/> to clear the latched status of the marker event.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetLatchedStatus(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The latched status was accessed while the task was not reserved, committed, or running.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:25:07 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetLatchedStatus(System.String,System.Boolean)">
            <summary>
            Sets the latched status of the specified marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="latchedStatus">The latched status of the specified marker event.</param>
            <remarks>
            Set the latched status to <see langword="true"/> to clear the latched status of the marker event.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetLatchedStatus(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="latchedStatus"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 12:00:48 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetLiveStatus(System.String)">
            <summary>
            Gets the live status of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The live status of the marker event. Returns <see langword="true"/> if the status is live; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetLiveStatus(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The live status was accessed while the task was not reserved, committed, or running.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:26:14 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetOutputBehavior(System.String)">
            <summary>
            Gets the output behavior for the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The output behavior for the marker event.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetOutputBehavior(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The output behavior values are not the same between the marker events specified by <paramref name="markerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:26:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetOutputBehavior(System.String,NationalInstruments.ModularInstruments.NIFgen.OutputBehavior)">
            <summary>
            Sets the output behavior for the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="outputBehavior">The output behavior for the marker event.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetOutputBehavior(System.String,NationalInstruments.ModularInstruments.NIFgen.OutputBehavior)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="outputBehavior"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:29:47 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetOutputTerminal(System.String)">
            <summary>
            Gets the destination terminal for the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The destination terminal for the marker event.</returns>
            <remarks>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetOutputTerminal(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The output terminal values are not the same between the marker events specified by <paramref name="markerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The destination terminal to be routed could not be found on the device.
            <para>
            - or -
            </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 9:56:42 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetOutputTerminal(System.String,System.String)">
            <summary>
            Sets the destination terminal for the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="outputTerminal">The destination terminal for the marker event.</param>
            <remarks>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetOutputTerminal(System.String,System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 9:56:51 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetPulsePolarity(System.String)">
            <summary>
            Gets the output polarity of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The output polarity of the marker event.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetPulsePolarity(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The pulse polarity values are not the same between the marker events specified by <paramref name="markerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:27:13 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetPulsePolarity(System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)">
            <summary>
            Sets the output polarity of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="pulsePolarity">The output polarity of the marker event.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetPulsePolarity(System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="pulsePolarity"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:30:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetPulseWidth(System.String)">
            <summary>
            Gets the pulse width value of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The pulse width value of the marker event.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetPulseWidth(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The pulse width values are not the same between the marker events specified by <paramref name="markerName"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value for the pulse width is outside of the legal range.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:09:18 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetPulseWidth(System.String,System.Double)">
            <summary>
            Sets the pulse width value of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="pulseWidth">The pulse width value of the marker event.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetPulseWidth(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="pulseWidth"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:30:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetPulseWidthUnits(System.String)">
            <summary>
            Gets the pulse width units of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The pulse width units of the marker event.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetPulseWidthUnits(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The pulse width units values are not the same between the marker events specified by <paramref name="markerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:28:20 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetPulseWidthUnits(System.String,NationalInstruments.ModularInstruments.NIFgen.PulseWidthUnits)">
            <summary>
            Sets the pulse width units of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="pulseWidthUnits">The pulse width units of the marker event.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetPulseWidthUnits(System.String,NationalInstruments.ModularInstruments.NIFgen.PulseWidthUnits)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="pulseWidthUnits"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:30:40 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetInitialState(System.String)">
            <summary>
            Gets the initial state of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <returns>The initial state of the marker event.</returns>
            <remarks>
            The initial state defines the state of the signal before a marker event
            whose output behavior is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Toggle"/> occurs.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.GetInitialState(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The initial state units' values are not the same between the marker events specified by <paramref name="markerName"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 11:55:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetInitialState(System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)">
            <summary>
            Sets the initial state of the marker event.
            </summary>
            <param name="markerName">The marker event to use.</param>
            <param name="initialState">The initial state of the marker event.</param>
            <remarks>
            The initial state defines the state of the signal before a marker event
            whose output behavior is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Toggle"/> occurs.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenMarkerEvent.SetInitialState(System.String,NationalInstruments.ModularInstruments.NIFgen.LogicLevel)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="initialState"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="markerName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="markerName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:29:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList">
            <summary>
            Provides properties and methods used for configuring frequencies and durations.
            </summary>
            <remarks>
            Use this class to create and configure frequency lists. A frequency list is a list of frequencies and durations
            for which to generate a standard waveform. You can use this class to create multiple frequency lists, and then
            use <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Handle"/> to configure which frequency
            list to generate.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.FrequencyList"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/7/2017 3:34:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.DurationQuantum">
            <summary>
            Gets the quantum of which all durations must be a multiple in a frequency list.
            </summary>
            <value>
            The quantum of which all durations must be a multiple in a frequency list.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.DurationQuantum" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This property is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:08:04 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.MaximumNumber">
            <summary>
            Gets the maximum number of frequency lists the signal generator allows.
            </summary>
            <value>
            The maximum number of frequency lists the signal generator allows.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.MaximumNumber" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This property is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:08:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Handle">
            <summary>
            Gets or sets which frequency list the signal generator produces.
            </summary>
            <value>
            The identifier of the frequency list that the signal generator produces.
            </value>
            <remarks>
            <note type="note">
            You cannot change this property while the device is generating a waveform.
            If you want to change the device configuration, call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="PartiallyQualified"/>
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Handle" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This property is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:08:09 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Create(NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double[],Ivi.Driver.PrecisionTimeSpan[])">
            <summary>
            Creates a frequency list from an array of <paramref name="frequencies"/> and an array of <paramref name="durations"/> for the specified waveform.
            </summary>
            <param name="waveform">
            The
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform"/>
            that you want the signal generator to produce.
            </param>
            <param name="frequencies">
            The array of frequencies to form the frequency list.
            Each <paramref name="frequencies"/> element has a corresponding <paramref name="durations"/> element that indicates
            how long that frequency is repeated.
            <note>
            <paramref name="frequencies"/> are in hertz.
            </note>
            </param>
            <param name="durations">
            The array of durations to form the frequency list.
            Each element in this array has a corresponding <paramref name="frequencies"/> element and indicates
            how long to generate the corresponding frequency.
            </param>
            <returns>
            The handle that identifies the new frequency list.
            </returns>
            <remarks>The lengths of the <paramref name="frequencies"/> and <paramref name="durations"/> arrays must be equal.
            <note>
            The signal generator must not be in the generating state when you call this method.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Create(NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double[],Ivi.Driver.PrecisionTimeSpan[])" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="frequencies"/> is null.
            <para>- or -</para>
            The value for <paramref name="durations"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for  <paramref name="waveform"/> is invalid.
            <para>- or -</para>
            The arrays <paramref name="frequencies"/> and <paramref name="durations"/> are not the same length.
            <para>- or -</para>
            The arrays <paramref name="frequencies"/> and <paramref name="durations"/> have zero elements.
            <para>- or -</para>
            The <paramref name="frequencies"/> array contains an invalid value.
            <para>- or -</para>
            The <paramref name="durations"/> array contains an invalid value.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This method is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 11:40:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Configure(System.String,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Configures the amplitude, DC offset, and start phase for the specified frequency list.
            </summary>
            <param name="channelName">
            The channel name for which you want to configure the frequency list.
            </param>
            <param name="frequencyListHandle">
            The handle of the frequency list that you want the signal generator to produce.
            You can create a frequency list using the
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Create(NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double[],Ivi.Driver.PrecisionTimeSpan[])" crefType="PartiallyQualified"/>
            method,
            which returns a handle that you use to identify the list.
            </param>
            <param name="amplitude">
            The amplitude of the standard waveform that you want the signal generator to produce.
            This value is the amplitude at the output terminal.
            The amplitude can also be set by calling
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetAmplitude(System.String,System.Double)" crefType="PartiallyQualified"/>.
            <note type="note">
            <paramref name="amplitude"/> is in peak-to-peak voltage.
            </note>
            </param>
            <param name="dcOffset">
            The DC offset of the standard waveform that you want the signal generator to produce.
            The value is the offset from ground to the center of the waveform you specify with the waveform parameter,
            observed at the output terminal.
            For example, to configure a waveform with an amplitude of 10.00 V to range from 0.00 V to +10.00 V,
            set <paramref name="dcOffset"/> to 5.00 V.
            The amplitude can also be set by calling
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetDCOffset(System.String,System.Double)" crefType="PartiallyQualified"/>.
            <note type="note">
            <paramref name="dcOffset"/> is in volts.
            </note>
            </param>
            <param name="startPhase">
            The horizontal offset of the standard waveform you want the signal generator to produce.
            The start phase can also be set by calling
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetStartPhase(System.String,System.Double)" crefType="PartiallyQualified"/>.
            A start phase of 180 degrees means output generation begins halfway through the waveform.
            A start phase of 360 degrees offsets the output by an entire waveform cycle,
            which is identical to a start phase of 0 degrees.
            <note type="note">
            Specify this parameter in degrees of one waveform cycle.
            </note>
            <note type="note">
            This parameter does not affect signal generator behavior when you set the waveform parameter to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.DC" crefType="PartiallyQualified"/>.
            </note>
            </param>
            <remarks>The amplitude, DC offset, and start phase are
            specified by <paramref name="frequencyListHandle"/>.
            These values can also be set by calling
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Handle" crefType="PartiallyQualified"/>,
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetAmplitude(System.String,System.Double)" crefType="PartiallyQualified"/>,
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetDCOffset(System.String,System.Double)" crefType="PartiallyQualified"/>,
            and
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetStartPhase(System.String,System.Double)" crefType="PartiallyQualified"/>.
            <note>
            The signal generator must not be in the Generating state when you call this method.
            </note>
            <note>
            You must set the
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/>
            before calling this method.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Configure(System.String,System.Int32,System.Double,System.Double,System.Double)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for  <paramref name="frequencyListHandle"/> is invalid.
            <para>- or -</para>
            The value for  <paramref name="dcOffset"/> is invalid.
            <para>- or -</para>
            The value for  <paramref name="startPhase"/> is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
             <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for
            <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This method is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:16:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Clear(System.Int32)">
            <summary>
            Removes a previously created frequency list from the signal generator memory and invalidates the frequency list handle.
            </summary>
            <param name="frequencyListHandle">
            <para>
            The handle of the frequency list you want the signal generator to remove. Specify a value of -1 to clear all frequency lists.
            </para>
            </param>
            <remarks>
            You can create multiple frequency lists using
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Create(NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double[],Ivi.Driver.PrecisionTimeSpan[])" crefType="PartiallyQualified"/>,
            which returns a handle that you use to identify each frequency list.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.Clear(System.Int32)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="frequencyListHandle"/> is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
             <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This method is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:15:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.GetMaximumDuration(System.String)">
            <summary>
            Gets the maximum duration of any one step in the frequency list.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The maximum duration of any one step in the frequency list.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.GetMaximumDuration(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This method is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:18:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.GetMinimumDuration(System.String)">
            <summary>
            Gets the minimum duration of any one step in a frequency list.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The minimum duration of any one step in a frequency list.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.GetMinimumDuration(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This method is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:19:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.GetMaximumLength(System.String)">
            <summary>
            Gets the maximum number of steps that can be in a frequency list.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The maximum number of steps that can be in a frequency list.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.GetMaximumLength(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
             The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This method is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:18:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.GetMinimumLength(System.String)">
            <summary>
            Gets the minimum number of frequency lists for the specified channel.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The minimum number of frequency lists for the specified channel.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList.GetMinimumLength(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This method is not supported on the signal generator in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:19:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing">
            <summary>
            Provides properties and methods for onboard signal processing functionality.
            </summary>
            <remarks>
            When using a multichannel signal generator, you must call <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ConfigureChannels(System.String)" crefType="PartiallyQualified"/>
            before enabling onboard signal processing.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.OnboardSignalProcessing"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 1:18:29 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.FirFilter">
            <summary>
            Gets an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter"/> object containing 
            methods for FIR filter functionality.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter"/> object containing 
            methods for FIR filter functionality.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.FirFilter" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/11/2017 10:21:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.CicFilter">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter"/> object containing 
            methods for CIC filter functionality.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter"/> object containing 
            methods for CIC filter functionality.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.CicFilter" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/11/2017 10:19:48 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.Carrier">
            <summary>
            Gets  the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter"/> object containing 
            methods for carrier functionality.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter"/> object containing 
            methods for carrier functionality.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.Carrier" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/11/2017 10:19:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.CompensateForFilterDelay">
            <summary>
            Gets or sets a value indicating whether OSP filter group delay will be adjusted when aligning analog outputs and events in OSP mode.
            </summary>
            <value>
            A value indicating whether OSP filter group delay will be adjusted when aligning analog outputs and events in OSP mode.
            </value>
            <remarks>
            If you set this property to <see langword="true"/>, event outputs align more closely with the analog output. 
            The analog output also aligns more closely between two devices synchronized using NI-TClk.
            <note>
            Group delay is the delay that occurs as a result of passing through an FIR filter. 
            At a low I/Q rate, the group delay can become so large that some devices 
            may not be able to align the events with the output. In this case, 
            you must increase the I/Q rate or disable this property.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.CompensateForFilterDelay" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:20:59 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.OverflowStatus">
            <summary>
            Gets or sets a bit field of the overflow status in any stage of the OSP block.
            </summary>
            <value>
            A bit field of the overflow status in any stage of the OSP block.
            </value>
            <remarks>
            Set this attribute to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.None" crefType="PartiallyQualified"/>
            to clear the current OSP overflow error reporting value.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.OverflowStatus" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value is an invalid value.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The task is not committed or the task is not running.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:29 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetDataProcessingMode(System.String)">
            <summary>
            Gets the way that data is processed by the OSP block.
            </summary>
            <param name="channelName">
            The channel name for which you want to get the data processing type by the OSP block.
            </param>
            <returns>
            The way that data is processed by the OSP block.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetDataProcessingMode(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:32 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)">
            <summary>
            Sets the way that data is processed by the OSP block.
            </summary>
            <param name="channelName">
            The channel name for which you want to get the data processing type by the OSP block.
            </param>
            <param name="dataProcessingMode">
            The way that data is processed by the OSP block.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value is an invalid value.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:36 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetEnabled(System.String)">
            <summary>
            Gets a value indicating whether the OSP block of the signal generator is enabled.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns><see langword="true"/> if the OSP block of the signal generator is enabled; <see langword="false"/> if the OSP block of the signal generator is disabled.
            </returns>
            <remarks>
            When the OSP block is disabled, all OSP-related properties are disabled 
            and have no effect on the generated signal.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:59:48 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetEnabled(System.String,System.Boolean)">
            <summary>
            Sets a value indicating whether the OSP block of the signal generator is enabled.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="enabled">
            <see langword="true"/> to enable OSP block of the signal generator; <see langword="false"/> to disable OSP block of the signal generator.
            </param>
            <remarks>
            When the OSP block is disabled, all OSP-related properties are disabled 
            and have no effect on the generated signal.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameRequiredException">
            The channels were not configured prior to enabling the OSP.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:08:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetFrequencyShift(System.String)">
            <summary>
            Gets the amount of frequency shift applied to the baseband signal.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The amount of frequency shift applied to the baseband signal.
            </returns>
            <remarks>
            When using the NI 5450/5451 with I/Q rates higher than 200 MS/s, 
            NI-FGEN restricts this attribute value to 0. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetFrequencyShift(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:23:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetFrequencyShift(System.String,System.Double)">
            <summary>
            Sets the amount of frequency shift applied to the baseband signal.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="frequencyShift">
            The amount of frequency shift applied to the baseband signal.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetFrequencyShift(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:40 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)">
            <summary>
            Gets the rate at which the user-provided waveform data is generated when
            onboard signal processing is enabled.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The rate at which the user-provided waveform data is generated when
            OSP enabled is set to <see langword="true"/>.
            </returns>
            <remarks>
            NI-FGEN sets 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SampleRate" crefType="PartiallyQualified"/> 
            for the signal generator to the product of the values of the return by 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/>, 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetInterpolationFactor(System.String)" crefType="PartiallyQualified"/>, 
            and 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.GetInterpolationFactor(System.String)" crefType="PartiallyQualified"/>.
            <para>
            When  
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> 
            is called with 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/>, 
            the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/> 
            returns the rate at which the signal generator processes real (I) data. 
            When the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> 
            is called with 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>, 
            the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/> 
            returns the rate at which the signal generator processes complex (I/Q) data. 
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:02:05 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetIQRate(System.String,System.Double)">
            <summary>
            Sets the rate at which the user-provided waveform data is generated when
            OSP enabled is set to <see langword="true"/>.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="rate">
            The rate at which the user-provided waveform data is generated when
            OSP enabled is set to <see langword="true"/>.
            </param>
            <remarks>
            NI-FGEN sets 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SampleRate" crefType="PartiallyQualified"/> 
            for the signal generator to the product of the values  returned by 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/>, 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetInterpolationFactor(System.String)" crefType="PartiallyQualified"/>, 
            and 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenCicFilter.GetInterpolationFactor(System.String)" crefType="PartiallyQualified"/>.
            <para>
            When the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> 
            is called with 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/>, 
            the 
            the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/> 
            returns the rate at which the signal generator processes real (I) data. 
            When the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> 
            is called with 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>, 
            the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/> 
            returns the rate at which the signal generator processes complex (I/Q) data. 
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetIQRate(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:10:59 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetMode(System.String)">
            <summary>
            Gets the generation mode of the OSP, which determines the type of data contained in the output signal.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The generation mode of the OSP, which determines the type of data contained in the output signal.
            </returns>
            <remarks>
            For more information about the OSP modes your device supports, 
            refer to <see href="javascript:LaunchFgenConcept('device-specific.html');">Devices</see> 
                 in the
                <format type="italics">NI Signal Generators Help</format>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetMode(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:03:44 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspMode)">
            <summary>
            Sets the generation mode of the OSP, which determines the type of data contained in the output signal.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="mode">
            The generation mode of the OSP, which determines the type of data contained in the output signal.
            </param>
            <remarks>
            For more information about the OSP modes your device supports, 
            refer to <see href="javascript:LaunchFgenConcept('device-specific.html');">Devices</see> 
                 in the
                <format type="italics">NI Signal Generators Help</format>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspMode)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="mode"/>  is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:14:09 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetOverflowErrorReporting(System.String)">
            <summary>
            Gets the error reporting when the OSP block detects an overflow in any of its stages. 
            Overflows lead to waveform clipping.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The error reporting mode when the OSP block detects an overflow in any of its stages.
            </returns>
            <remarks>
            You can use <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.OverflowStatus"/> 
            to query for overflow conditions regardless of whether onboard signal generator error reporting is disabled.
            The device continues to generate after an overflow regardless of value returned by 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetOverflowErrorReporting(System.String)" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetOverflowErrorReporting(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:06:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetOverflowErrorReporting(System.String,NationalInstruments.ModularInstruments.NIFgen.OspOverflowErrorReporting)">
            <summary>
            Sets the error reporting when the OSP block detects an overflow in any of its stages. 
            Overflows lead to waveform clipping.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="errorReporting">
            The error reporting mode when the OSP block detects an overflow in any of its stages.
            </param>
            <remarks>
            You can use the <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.OverflowStatus"/>
            to query for overflow conditions regardless of whether onboard signal generator error reporting is disabled.
            The device continues to generate after an overflow regardless of value returned by 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetOverflowErrorReporting(System.String)" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetOverflowErrorReporting(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:15:14 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetPrefilterGainI(System.String)">
            <summary>
            Gets the digital gain to apply to the I data stream before any filtering by the OSP block.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The digital gain to apply to the I data stream before any filtering by the OSP block.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetPrefilterGainI(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:56:44 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetPrefilterGainI(System.String,System.Double)">
            <summary>
            Sets the digital gain to apply to the I data stream before any filtering by the OSP block.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="gain">
            The digital gain to apply to the I data stream before any filtering by the OSP block.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetPrefilterGainI(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
             The value for  <paramref name="gain"/>  is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:57:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetPrefilterGainQ(System.String)">
            <summary>
            Gets the digital gain to apply to the Q data stream before any filtering by the OSP block.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The digital gain to apply to the Q data stream before any filtering by the OSP block.
            </returns>
            <remarks>
            This prefilter gain will only be applied to the Q data stream if you call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/>
            with 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetPrefilterGainQ(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:56:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetPrefilterGainQ(System.String,System.Double)">
            <summary>
            Sets the digital gain to apply to the Q data stream before any filtering by the OSP block.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="gain">
            The digital gain to apply to the Q data stream before any filtering by the OSP block.
            </param>
            <remarks>
            This prefilter gain will only be applied to the Q data stream if you call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/>
            with 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetPrefilterGainQ(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
             The value for <paramref name="gain"/>  is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:57:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetPrefilterOffsetI(System.String)">
            <summary>
            Gets the digital offset to apply to the I data stream. 
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The digital offset to apply to the I data stream. 
            </returns>
            <remarks>
            This offset is applied after the prefilter gain and before any filtering.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetPrefilterOffsetI(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:56:56 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetPrefilterOffsetI(System.String,System.Double)">
            <summary>
            Sets the digital offset to apply to the I data stream. 
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="offset">
            The digital offset to apply to the I data stream. 
            </param>
            <remarks>
            This offset is applied after the prefilter gain and before any filtering.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetPrefilterOffsetI(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
             The value for <paramref name="offset"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:57:29 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetPrefilterOffsetQ(System.String)">
            <summary>
            Gets the digital offset to apply to the Q data stream.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <returns>
            The digital offset to apply to the Q data stream.
            </returns>
            <remarks>
            <para>
            This offset is applied after the prefilter gain and before any filtering.
            </para>
            <para>
            This prefilter offset will only be applied to the Q data stream if you call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/>
            with 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.GetPrefilterOffsetQ(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:57:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetPrefilterOffsetQ(System.String,System.Double)">
            <summary>
            Sets the digital offset to apply to the Q data stream.
            </summary>
            <param name="channelName">
            The channel name.
            </param>
            <param name="offset">
            The digital offset to apply to the Q data stream.
            </param>
            <remarks>
            <para>
            This offset is applied after the prefilter gain and before any filtering.
            </para>
            <para>
            This prefilter offset will only be applied to the Q data stream if you call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/>
            with 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetPrefilterOffsetQ(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This operation is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
             The value for <paramref name="offset"/>  is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:57:39 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform">
            <summary>
            Provides methods to configure named waveforms.
            </summary>
            <remarks>
            <para>
            The waveform must have been created by a call to 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/>. By default, the subsequent call 
            to <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,System.Double[])" crefType="PartiallyQualified"/>
            continues writing data from the position of the last sample written. The write position and offset can be set using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.SetNextWritePosition(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition,System.Int32)" crefType="PartiallyQualified"/>. If streaming 
            is enabled, you can write more data than the allocated waveform size in onboard memory. Refer to <see href="javascript:LaunchFgenConcept('streaming.html');">Streaming</see> 
                 in the
                <format type="italics">NI Signal Generators Help</format> for more information on streaming data.
            </para>
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.NamedWaveform"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 1:18:18 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)">
            <summary>
            Sets the initial size of a named waveform so that it can be allocated in onboard memory before loading the associated data.
            </summary>
            <param name="channelName">
            The name of channel to be used for named waveform
            </param>
            <param name="waveformName">
            The name of waveform
            </param>
            <param name="numberOfSamples">
            The size of waveform in samples
            </param>
            <remarks>
            <para>
            After you allocate using <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/>, 
            call <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,System.Double[])" crefType="PartiallyQualified"/> 
            to load data in smaller blocks.
            </para>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveformName"/> was null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="waveformName"/> was invalid.
            <para>- or -</para>
            The value for <paramref name="numberOfSamples"/> was invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
             <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            <para> - or - </para>
            The waveform specified by <paramref name="waveformName"/> has been previously allocated.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:34:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Delete(System.String,System.String)">
            <summary>
            Deletes the specified named waveform from onboard memory. 
            </summary>
            <param name="channelName">
            The name of channel to be used for named waveform.
            </param>
            <param name="waveformName">
            The name of waveform.
            </param>
            <remarks>
            <para>
            The waveform specified by <paramref name="waveformName"/> must be allocated using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/> 
            on the channel specified by <paramref name="channelName"/>.
            </para>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveformName"/> was null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The waveform specified by <paramref name="waveformName"/> was not allocated with 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.SetNextWritePosition(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 1:34:50 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.SetNextWritePosition(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition,System.Int32)">
            <summary>
            Sets the position in the named waveform to which data was written at the next write.
            </summary>
            <param name="channelName">
            The name of the channel to be used for the named waveform.
            </param>
            <param name="waveformName">
            The name of the waveform.
            </param>
            <param name="relativeTo">
            The reference position in the waveform.
            </param>
            <param name="offset">
            The offset from the <paramref name="relativeTo"/> at which to start loading the data into the waveform.
            </param>
            <remarks>
            <para>
            The waveform specified by <paramref name="waveformName"/> must be allocated using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/> 
            on the channel specified by <paramref name="channelName"/>.
            </para>
            <para>
            This method allows you to write to arbitrary locations within the waveform. These settings apply only to the next write to the 
            waveform specified by the <paramref name="waveformName"/>. Subsequent writes to that waveform begin where the last write ended, 
            unless this method is called again. The <paramref name="waveformName"/> passed in must have been created by a call to 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/>. 
            </para>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveformName"/> was null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="waveformName"/> was invalid.
            <para>- or -</para>
            The value for <paramref name="relativeTo"/> was invalid.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.SetNextWritePosition(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:11:43 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,System.Double[])">
            <summary>
            Writes floating point data to the named waveform in onboard memory.
            </summary>
            <param name="channelName">
            The name of the channel to be used for the named waveform.
            </param>
            <param name="waveformName">
            The name of the waveform.
            </param>
            <param name="waveform">
            The array of floating point values you want to load into the waveform.
            </param>
            <remarks>
            <para>
            The waveform specified by <paramref name="waveformName"/> must be allocated using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/> 
            on the channel specified by <paramref name="channelName"/>.
            </para>
            <note>
            You must set <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/>  to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/> 
            using <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> to use this method.
            </note>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveformName"/> was null.
            <para>- or -</para>
            The value for <paramref name="waveform"/> was null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for  <paramref name="waveform"/> has no samples.
            <para>- or -</para>
            The value for <paramref name="waveform"/> has invalid number of samples.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value for  <paramref name="waveform"/> contains invalid samples.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            <para>- or -</para>
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> was not set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,System.Double[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:15:52 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,System.Int16[])">
            <summary>
            Writes 16-bit integer data to the named waveform in onboard memory.
            </summary>
            <param name="channelName">
            The name of the channel to be used for the named waveform.
            </param>
            <param name="waveformName">
            The name of the waveform.
            </param>
            <param name="waveform">
            The array of 16-bit integer values you want to load into the waveform.
            </param>
            <remarks>
            <para>
            The waveform specified by <paramref name="waveformName"/> must be allocated using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/> 
            on the channel specified by <paramref name="channelName"/>.
            </para>
            <note>
            You must set <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/> 
            using <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> to use this method.
            </note>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveformName"/> was null.
            <para>- or -</para>
            The value for  <paramref name="waveform"/> was null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for  <paramref name="waveform"/> has no samples.
            <para>- or -</para>
            The value for  <paramref name="waveform"/> has invalid number of samples.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value for  <paramref name="waveform"/> contains invalid samples.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            <para>-or -</para>
            The OSP Data Processing Mode was not set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,System.Int16[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:16:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,NationalInstruments.ComplexDouble[])">
            <summary>
            Writes a complex floating point value to the named waveform in onboard memory on devices with onboard signal processing enabled and the data processing mode set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex"/>.
            </summary>
            <param name="channelName">
            The name of the channel to be used for the named waveform.
            </param>
            <param name="waveformName">
            The name of the waveform.
            </param>
            <param name="waveform">
            The array of complex floating point values you want to load into the waveform.
            </param>
            <remarks>
            <para>
            The waveform specified by <paramref name="waveformName"/> must be allocated using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/> 
            on the channel specified by <paramref name="channelName"/>.
            <note>
            You must enable onboard signal processing using <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            and set <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/> using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> to use this method.
            </note></para>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveformName"/> was null.
            <para>- or -</para>
            The value for  <paramref name="waveform"/> was null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for  <paramref name="waveform"/> has no samples.
            <para>- or -</para>
            The value for  <paramref name="waveform"/> has invalid number of samples.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value for  <paramref name="waveform"/> contains invalid samples.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            <para>- or - </para>
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> was not set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,NationalInstruments.ComplexDouble[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:13:54 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,NationalInstruments.ComplexInt16[])">
            <summary>
            Writes complex integer values to the named waveform in onboard memory.
            </summary>
            <param name="channelName">
            The name of the channel to be used for the named waveform.
            </param>
            <param name="waveformName">
            The name of the waveform.
            </param>
            <param name="waveform">
            The array of complex integer values you want to load into the waveform.
            </param>
            <remarks>
            <para>
            The waveform specified by <paramref name="waveformName"/> must be allocated using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/> 
            on the channel specified by <paramref name="channelName"/>.
            </para>
            <note>
            You must enable Onboard Signal Processing using <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            and set OSP Data Processing Mode to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/> using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> to use this method.
            </note>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveformName"/> was null.
            <para>- or -</para>
            The value for  <paramref name="waveform"/> was null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for  <paramref name="waveform"/> has no samples.
            <para>- or -</para>
            The value for  <paramref name="waveform"/> has invalid number of samples.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value for  <paramref name="waveform"/> contains invalid samples.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            <para>- or -</para>
            The onboard signal processing was disabled.
            <para>- or -</para>
            The OSP Data Processing Mode was not set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write(System.String,System.String,NationalInstruments.ComplexInt16[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:14:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write``1(System.String,System.String,NationalInstruments.AnalogWaveform{``0})">
            <summary>
            Writes analog waveform data to the named waveform in onboard memory on devices with onboard signal processing enabled and the data processing mode set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex"/>.
            </summary>
            <typeparam name="TData">
            The underlying type of the data in <paramref name="waveform"/>. 
            </typeparam>
            <param name="channelName">
            The name of the channel to be used for the named waveform.
            </param>
            <param name="waveformName">
            The name of the waveform.
            </param>
            <param name="waveform">
            The analog waveform you want to load into the waveform.
            </param>
            <remarks>
            <para>
            The waveform specified by <paramref name="waveformName"/> must be allocated using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Allocate(System.String,System.String,System.Int32)" crefType="PartiallyQualified"/> 
            on the channel specified by <paramref name="channelName"/>.
            </para>
            <para>
            The samples in <paramref name="waveform"/> are scaled using <see cref="M:NationalInstruments.AnalogWaveform`1.GetScaledData"/>.
            </para>
            <note>
            You must set <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/> 
            using <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> to use this method.
            </note>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveformName"/> was null. <para>- or -</para>
            The value for  <paramref name="waveform"/> was null. 
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for  <paramref name="waveform"/> has no samples.
            <para>- or -</para>
            The value for  <paramref name="waveform"/> has invalid number of samples.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value for  <paramref name="waveform"/> contains invalid samples.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            <para>- or -</para>
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> was not set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform.Write``1(System.String,System.String,NationalInstruments.AnalogWaveform{``0})" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:17:40 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask">
            <summary>
            Provides methods and properties to configure data masks and static values for analog and digital output.
            </summary>
            <remarks>
            This class is used to set analog and digital masks that will be applied to the signal generators output.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.DataMask"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>1/9/2017 12:46:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.GetAnalogDataMask(System.String)">
            <summary>
            Gets the mask to apply to the analog output data. 
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            The mask to apply to the analog output data. 
            </returns>
            <remarks>
            The masked data is replaced with the analog static value.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.GetAnalogDataMask(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:05:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.SetAnalogDataMask(System.String,System.Int32)">
            <summary>
            Sets the mask to apply to the analog output data. 
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="analogDataMask">
            The mask to apply to the analog output data.
            </param>
            <remarks>
            The masked data is replaced with the analog static value.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.SetAnalogDataMask(System.String,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="analogDataMask"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:52:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.GetAnalogStaticValue(System.String)">
            <summary>
            Gets the static value that replaces the data masked by the analog data mask.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            The static value that replaces the data masked by the analog data mask.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.GetAnalogStaticValue(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:08:08 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.SetAnalogStaticValue(System.String,System.Int32)">
            <summary>
            Sets the static value that replaces the data masked by the analog data mask.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="analogStaticValue">
            The static value that replaces the data masked by the analog data mask.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.SetAnalogStaticValue(System.String,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:09:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.GetDigitalDataMask(System.String)">
            <summary>
            Gets the mask to apply to the output on the digital connector. 
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            The mask to apply to the output on the digital connector. 
            </returns>
            <remarks>
            The masked data is replaced with the digital static value.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.GetDigitalDataMask(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:08:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.SetDigitalDataMask(System.String,System.Int32)">
            <summary>
            Sets the mask to apply to the output on the digital connector. 
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="digitalDataMask">
            The mask to apply to the output on the digital connector.
            </param>
            <remarks>
            The masked data is replaced with the digital static value.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.SetDigitalDataMask(System.String,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="digitalDataMask"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:53:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.GetDigitalStaticValue(System.String)">
            <summary>
            Gets the static value that replaces the data masked by the digital data mask.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            The static value that replaces the data masked by the digital data mask.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.GetDigitalStaticValue(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:09:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.SetDigitalStaticValue(System.String,System.Int32)">
            <summary>
            Sets the static value that replaces the data masked by the digital data mask.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="digitalStaticValue">
            The static value that replaces the data masked by the digital data mask.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask.SetDigitalStaticValue(System.String,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:10:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent">
            <summary>
            Provides properties to configure events that indicate that the signal generator is configured and ready to receive a start trigger.
            </summary>
            <remarks>
            Use this class to configure and monitor a ready for start event. A ready for start event occurs while the signal generator is waiting
            for a start trigger to begin generating a signal. To use a ready for start event, set the 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.ActiveLevel"/>
            and the 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.OutputTerminal"/>.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.ReadyForStart"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>1/9/2017 1:28:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.ActiveLevel">
            <summary>
            Gets or sets the output polarity of the ready for start event.
            </summary>
            <value>
            The output polarity of the ready for start event.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.ActiveLevel" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:29:43 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.LiveStatus">
            <summary>
            Gets a value indicating whether the status of the ready for start event is live or ready to receive a start trigger.
            </summary>
            <value>
            Returns <see langword="true"/> if the status of the ready for start event is live, and <see langword="false"/> otherwise.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.LiveStatus" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.LiveStatus" crefType="PartiallyQualified"/>
            cannot be retrieved unless the task is reserved, committed, or running.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 11:00:52 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.OutputTerminal">
            <summary>
            Gets or sets the destination terminal for the ready for start event.
            </summary>
            <value>
            The destination terminal for the ready for start event. For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReadyForStartEvent.OutputTerminal" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The destination terminal to be routed could not be found on the device.
            <para> - or - </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 9:57:03 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter">
            <summary>
            Provides methods and properties to configure filters for the output signal.
            </summary>
            <remarks>
            This class is used to enable and configure digital and analog filters to the signal generators output.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.Filter"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>1/9/2017 1:13:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.GetAnalogFilterEnabled(System.String)">
            <summary>
            Gets a value indicating whether the signal generator applies an analog filter to the output signal. 
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            A value indicating whether the signal generator applies an analog filter to the output signal. 
            <para>
            <see langword="true"/> if the signal generator applies an analog filter to the output signal, and  
            <see langword="false"/> if the signal generator does not apply an analog filter to the output signal. 
            </para>
            <para>
            The default value is <see langword="false"/>.
            </para>
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.GetAnalogFilterEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:53:40 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.SetAnalogFilterEnabled(System.String,System.Boolean)">
            <summary>
            Sets whether the signal generator applies an analog filter to the output signal. 
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="enabled">
            <see langword="true"/> to apply an analog filter, and 
            <see langword="false"/> to not apply an analog filter. 
            </param>
            <remarks>
            Specifies whether the signal generator applies an analog filter to the output signal. 
            This property is valid for 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>, 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>, 
            and <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>. 
            You also can use this property in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/> 
            and <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/> modes for 
            user-defined waveforms.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.GetAnalogFilterEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:57:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.EnableAnalogFilter(System.String,System.Double)">
            <summary>
            Enables the analog filter for the device. 
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="filterCorrectionFrequency">
            The filter correction frequency of the analog filter in hertz.
            </param>
            <remarks>
            <para>
            This setting can be applied in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>, 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>, 
            and <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>. 
            You also can use this setting in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/> 
            and <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/> modes for 
            user-defined waveforms.
            </para>
            <para>
            The default value of filter correction frequency is 0.
            </para>
            <para>
            On the NI 5411 and NI 5431, 
            NI-FGEN adjusts signal amplitude to compensate for the filter attenuation at that frequency. 
            To disable amplitude correction, set <paramref name="filterCorrectionFrequency"/> to 0. 
            If the <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/>
            is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function"/>, 
            filter correction frequency typically should be set to the same value as the frequency of the standard waveform. 
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.EnableAnalogFilter(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:17:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.GetDigitalFilterEnabled(System.String)">
            <summary>
            Gets a  value indicating whether the signal generator applies a digital filter to the output signal. 
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            <see langword="true"/> if the signal generator applies digital filter to the output signal, and 
            <see langword="false"/> if the signal generator will not apply digital filter to the output signal. 
            The default value is <see langword="false"/>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.GetDigitalFilterEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:55:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.SetDigitalFilterEnabled(System.String,System.Boolean)">
            <summary>
            Sets whether signal generator applies a digital filter to the output signal. 
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="enabled">
            <see langword="true"/> to apply a digital filter, and 
            <see langword="false"/> to not apply a digital filter. 
            </param>
            <remarks>
            Controls whether the signal generator applies a digital filter to the output signal. 
            This property is valid for
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>, 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>, 
            and <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>. 
            You also can use this property in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/> 
            and <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/> modes for 
            user-defined waveforms.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.SetDigitalFilterEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:25:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.GetDigitalFilterInterpolationFactor(System.String)">
            <summary>
            Gets the interpolation factor when the digital filter is enabled.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            The interpolation factor when the digital filter is enabled.
            </returns>
            <remarks>
            If you do not set the digital filter interpolation factor directly, 
            NI-FGEN automatically selects the maximum interpolation factor supported by the signal generator for the current sample rate. 
            Valid values are 2, 4, and 8.
            <note type="note">
            You cannot change the digital filter interpolation factor while the device 
            is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.SetDigitalFilterEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:22:07 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.SetDigitalFilterInterpolationFactor(System.String,System.Double)">
            <summary>
            Sets the interpolation factor when the digital filter is enabled.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="interpolationFactor">
            The interpolation factor when the digital filter is enabled.
            </param>
            <remarks>
            If you do not set the digital filter interpolation factor directly, 
            NI-FGEN automatically selects the maximum interpolation factor supported by the signal generator for the current sample rate. 
            Valid values are 2, 4, and 8.
            <note type="note">
            You cannot change the digital filter interpolation factor while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.SetDigitalFilterEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:26:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.GetFlatnessCorrectionEnabled(System.String)">
            <summary>
            Gets a  value indicating whether flatness correction is enabled.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            <see langword="true"/> if flatness correction is enabled, and  
            <see langword="false"/> if flatness correction is disabled. 
            </returns>
            <remarks>
            When flatness correction is enabled, the signal generator applies a flatness correction factor 
            to the generated sine wave to ensure the same output power level at all frequencies.
            <para>
            Enable the flatness correction when performing flatness calibration.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.GetFlatnessCorrectionEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:56:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.SetFlatnessCorrectionEnabled(System.String,System.Boolean)">
            <summary>
            Sets whether flatness correction is enabled.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="enabled">
            <see langword="true"/> to enable flatness correction, and  
            <see langword="false"/> to disable flatness correction. 
            </param>
            <remarks>
            When flatness correction is enabled, the signal generator applies a flatness correction factor 
            to the generated sine wave to ensure the same output power level at all frequencies.
            <para>
            Disable flatness correction when performing flatness calibration.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter.SetFlatnessCorrectionEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 1:26:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock">
            <summary>
            Provides properties and methods to configure the signal generator reference clock source and frequency.
            </summary>
            <remarks>
            Use this class to configure the source and frequency of the reference clock the signal generator will use.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.ReferenceClock"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>1/9/2017 2:43:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.Source">
            <summary>
            Gets or sets the reference clock source used by the signal generator.
            </summary>
            <value>
            The reference clock source used by the signal generator.
            </value>
            <remarks>
            The signal generator derives the frequencies and sample rates that it uses to generate waveforms 
            from the source you specify. For example, when you set this property to <format type="monospace">ClkIn</format>, the signal 
            generator uses the signal it receives at its CLK IN front panel connector as its reference clock.
            <note type="note"> You cannot change the reference clock source while the device is generating a waveform.
             If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
             or wait for the generation to complete.
            </note>
            <para>
            The following are some values that you can use as the reference clock source:
            <list type="table">
            <item>
            <term>
            None (<format type="monospace">None</format>)
            </term>
            <description>
            Specifies that reference clock is not used.
            </description>
            </item>
            <item>
            <term>
            PXI Clock (<format type="monospace">PXI_Clk</format>)
            </term>
            <description>
            Specifies that the PXI Clock is used as the reference clock source.
            </description>
            </item>
            <item>
            <term>
            Clock In (<format type="monospace">ClkIn</format>)
            </term>
            <description>
            Specifies that the CLK IN input signal from the front panel connector is used as the reference clock source.
            </description>
            </item>
            <item>
            <term>
            Onboard reference clock (<format type="monospace">OnboardRefClk</format>)
            </term>
            <description>
            Specifies that the onboard reference clock is used as the reference clock source.
            </description>
            </item>
            <item>
            <term>
            RTSI 7 (<format type="monospace">RTSI7</format>)
            </term>
            <description>
            Specifies that RTSI line 7 is used as the reference clock source.
            </description>
            </item></list>
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.Source" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:00 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.Frequency">
            <summary>
            Gets or sets the reference clock frequency in hertz (Hz). The signal generator uses the reference clock to derive 
            frequencies and sample rates when generating output.
            </summary>
            <value>The reference clock frequency in hertz (Hz).</value>
            <remarks>
            <note type="note"> You cannot change the reference clock frequency while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.Frequency" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.OutputTerminal">
            <summary>
            Gets or sets the terminal at which to export the reference clock.
            </summary>
            <value>
            The terminal at which to export the reference clock.
            </value>
            <remarks>
            <para>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.OutputTerminal" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 9:57:21 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.OnboardOutputTerminal">
            <summary>
            Gets or sets the terminal at which to export the onboard reference clock.
            </summary>
            <value>
            The terminal at which to export the onboard reference clock.
            </value>
            <remarks>
            <para>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.OnboardOutputTerminal" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 9:57:10 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.Configure(System.String,System.Double)">
            <summary>
            Configures the signal generator reference clock source and frequency.
            </summary>
            <param name="source">
            The reference clock source that you want the signal generator to use.
            </param>
            <param name="frequency">
            The reference clock frequency in hertz (Hz).
            </param>
            <remarks>
            <para>
            The signal generator uses the reference clock to tune the sample clock timebase of the signal 
            generator so that the frequency, stability, and accuracy of the sample clock timebase matches that 
            of the reference clock. 
            </para>
            <note type="note"> You cannot change the generator reference clock source while the device is generating a waveform.
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock.Frequency" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set for <paramref name="source"/> is an invalid value.
            <para>
            - or -
            </para>
            The value set for <paramref name="frequency"/> is an invalid value.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            These values were set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:40:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock">
            <summary>
            Provides properties to configure signal generator clocking and data generation speed. 
            </summary>
            <remarks>
            Use this class to configure the signal generator's sample clock. Use 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.Source"/>
            to determine the source of the sample clock.
            For more information, refer to <format type="italics">External Sample Clock</format> on <see href="http://www.ni.com">ni.com</see>.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.SampleClock"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/11/2017 11:10:54 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.AbsoluteDelay">
            <summary>
            Gets or sets the delay in seconds to apply to an external Sample Clock.
            </summary>
            <value>
            The delay in seconds to apply to an external Sample Clock.
            </value>
            <remarks>
            This property is useful when trying to align the output of two devices.
            <note>
            For the NI 5421, absolute delay can only be applied when an external Sample Clock is used.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.AbsoluteDelay" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.Rate">
            <summary>
            Gets or sets the rate, in samples per second, at which the signal generator generates the points in arbitrary waveforms.
            </summary>
            <value>The rate, in samples per second, at which the signal generator generates the points in arbitrary waveforms.
            </value>
            <remarks>
            <para>
            Use this attribute when  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/> is set to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary"/> or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence"/>.
            </para>
            <note type="note">You cannot change this property while the device is generating a waveform. If you want to change the device 
            configuration, call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> method 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.Rate" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is not <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:42:52 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ClockMode">
            <summary>
            Gets or sets the sample clock mode for the signal generator.
            </summary>
            <value>
            The sample clock mode for the signal generator.
            </value>
            <remarks>
            For signal generators that support it, this property allows switching the sample clock to a 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.ClockMode.HighResolution" crefType="PartiallyQualified"/> clocking mode.
            <para>
            When in <see cref="F:NationalInstruments.ModularInstruments.NIFgen.ClockMode.DivideDown" crefType="PartiallyQualified"/> sampling mode, 
            the sample rate can only be set to certain frequencies, based on dividing down the sample clock. However, 
            in <see cref="F:NationalInstruments.ModularInstruments.NIFgen.ClockMode.HighResolution" crefType="PartiallyQualified"/> mode, the sample 
            rate may be set to any value.
            </para>
            <note type="note">
            You cannot change this property while the device is generating a waveform. If you want to change the device 
            configuration, call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> method 
            or wait for the generation to complete.</note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ClockMode" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.Source">
            <summary>
            Gets or sets the sample clock source.
            </summary>
            <value>
            The sample clock source. The default value is "<format type="monospace">OnboardClock</format>".
            </value>
            <remarks>
            <para>
            The following defined values are examples of possible sample clock sources. For a complete list of the sample clock 
            sources available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            <list type="table">
            <item>
            <term><format type="monospace">OnboardClock</format></term>
            <description>Specifies that the onboard clock is used as the sample clock source. </description>
            </item>
            <item>
            <term><format type="monospace">ClkIn</format></term>
            <description>Specifies that the signal at the CLK IN front panel connector is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Star</format></term>
            <description>Specifies that the PXI star trigger line is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Trig0</format></term>
            <description>Specifies that the PXI or RTSI line 0 is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Trig1</format></term>
            <description>Specifies that the PXI or RTSI line 1 is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Trig2</format></term>
            <description>Specifies that the PXI or RTSI line 2 is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Trig3</format></term>
            <description>Specifies that the PXI or RTSI line 3 is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Trig4</format></term>
            <description>Specifies that the PXI or RTSI line 4 is used as the Sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Trig5</format></term>
            <description>Specifies that the PXI or RTSI line 5 is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Trig6</format></term>
            <description>Specifies that the PXI or RTSI line 6 is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">PXI_Trig7</format></term>
            <description>Specifies that the PXI or RTSI line 7 is used as the sample clock source.</description>
            </item>
            <item>
            <term><format type="monospace">DDC_ClkIn</format></term>
            <description>Specifies that the sample clock from the digital data connector is used as the sample clock source.</description>
            </item>
            </list>
            </para>
            <note type="note">
            You cannot change this property while the device is generating a waveform. If you want to change the device 
            configuration, call the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> method
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.Source" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The value for <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.Source" crefType="PartiallyQualified"/> was invalid.
            <para> - or - </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 9:57:45 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ExportedDivisor">
            <summary>
            Gets or sets the factor by which to divide the sample clock, also known as an update clock, before it is exported.
            </summary>
            <value>The factor by which to divide the sample clock before it is exported.
            </value>
            <remarks>
            To export the sample clock, use  
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ExportSignal(NationalInstruments.ModularInstruments.NIFgen.SignalSource,System.String,System.String)" crefType="PartiallyQualified"/>
            or  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.OutputTerminal" crefType="PartiallyQualified"/>.
            <note type="note">
            You cannot change this property while the device is generating a waveform. If you want to change the device configuration, 
            call the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> method 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ExportedDivisor" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:05 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ExternalClockDelayBinaryValue">
            <summary>
            Gets or sets the external clock delay binary value.
            </summary>
            <value>
            The external clock delay binary value.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ExternalClockDelayBinaryValue" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            This property was read when the signal generator was not generating a signal
            <para> - or - </para>
            The property was set when the signal generator was generating a waveform.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ExternalMultiplier">
            <summary>
            Gets or sets a multiplication factor to use to obtain a desired sample rate from an external Sample Clock.
            </summary>
            <value>
            A multiplication factor to use to obtain a desired sample rate from an external Sample Clock.
            </value>
            <remarks>
            The resulting sample rate is equal to this factor multiplied by the external Sample Clock rate. You can use 
            this property to generate samples at a rate higher than your external clock rate. When using this property, 
            you do not need to explicitly set the external clock rate.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ExternalMultiplier" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:44 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.OutputTerminal">
            <summary>
            Gets or sets the terminal to export the sample clock.
            </summary>
            <value>The terminal to export the sample clock.
            </value>
            <remarks>
            If you specify a divisor with  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.ExportedDivisor" crefType="PartiallyQualified"/>, the 
            sample clock exported with  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.OutputTerminal" crefType="PartiallyQualified"/> attribute 
            is the value of the sample clock after it is divided-down. For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            <note type="note">
            You cannot change this property while the device is generating a waveform. If you want to change the device configuration, call 
            the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> method 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.OutputTerminal" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The value for <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.OutputTerminal" crefType="PartiallyQualified"/> 
            was invalid.
            <para> - or - </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 9:57:34 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.OscillatorPhaseDacValue">
            <summary>
            Gets or sets the oscillator phase DAC value.
            </summary>
            <value>
            The oscillator phase DAC value.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.OscillatorPhaseDacValue" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            This property was read when the signal generator was not generating a signal
            <para> - or - </para>
            The property was set when the signal generator was generating a waveform.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:07 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.Ivi#Fgen#IIviFgenSampleClock#OutputEnabled">
            <summary>
            Gets or sets a value indicating whether the sample clock appears at the sample clock output of the generator.
            </summary>
            <exclude/>
            <lastupdated>1/4/2017 3:12:11 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.Ivi#Fgen#IIviFgenSampleClock#Source">
            <summary>
            Gets or sets the clock used for the waveform generation. Note that when using an
            external sample clock, the IIviFgenArbitrary.SampleRate property must be set
            to the corresponding frequency of the external sample clock. [Refer to the instrument
            driver documentation for valid values, which may include one or more of the standard
            values defined in Ivi.Driver.TriggerSource.]
            </summary>
            <exclude/>
            <lastupdated>1/4/2017 3:12:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.AdjustRelativeDelay(Ivi.Driver.PrecisionTimeSpan)">
            <summary>
            Delays (or phase shifts) the sample clock, which delays the output of the module.
            </summary>
            <param name="time">The amount of time by which to adjust the sample clock delay. </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock.OutputTerminal" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="time"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 11:19:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary">
            <summary>
            Provides functionality for configuring arbitrary waveforms and sequences.
            </summary>
            <remarks>
            You can use this class
            to configure the signal generator's sample rate and to configure the gain and offset that can be applied to your waveforms
            or sequences. This class also provides access to other sub-objects that provide onboard signal processing
            or data transfer functionality.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Arbitrary"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/13/2017 10:33:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SampleRate">
            <summary>
            Gets or sets the rate, in samples per second, at which the signal generator generates the points in arbitrary waveforms.
            </summary>
            <value>
            The rate, in samples per second, at which the signal generator generates the points in arbitrary waveforms.
            </value>
            <remarks>
            Use this property when <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/>
            is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> or
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SampleRate" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 2:40:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Sequence">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence" crefType="PartiallyQualified"/> object containing 
            properties and methods used to create and configure arbitrary sequences.
            </summary>
            <value>
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence" crefType="PartiallyQualified"/> object containing properties and methods used to create and configure arbitrary sequences.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Sequence" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 12:48:45 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Waveform">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform"/> object containing 
            properties and methods used to create and configure arbitrary waveforms.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform"/> object containing properties and methods used to create and configure arbitrary waveforms.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Waveform" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 12:48:57 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.DataTransfer">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer"/> object containing 
            properties to configure data transfer settings.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDataTransfer"/> object containing 
            properties that configure data transfer settings.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.DataTransfer" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 12:43:23 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Streaming">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming"/> object containing 
            properties and methods to configure waveform streaming.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming"/> object containing 
            properties and methods to configure waveform streaming.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Streaming" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed. 
            </exception>
            <lastupdated>3/10/2017 12:48:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.OnboardSignalProcessing">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing"/> object containing 
            properties and methods to configure onboard signal processing.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing"/> object containing 
            properties and methods to configure onboard signal processing.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.OnboardSignalProcessing" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 12:48:33 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.NamedWaveform">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform"/> object that creates, configures, and clears named waveforms.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenNamedWaveform"/> object that creates, configures, and clears named waveforms.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.NamedWaveform" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/10/2017 12:48:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Ivi#Fgen#IIviFgenArbitrary#BinaryAlignment">
            <summary>
            Gets whether the arbitrary waveform generator treats binary data provided
            to the IIviFgenArbitraryWaveform methods as left-justified or right-justified.
            This is only relevant if the generator supports bit-depths less than 16, or less
            than 32 if the generator supports bit-depths greater than 16. For a 16-bit or
            a 32-bit generator, this method can return either value.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:40:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Ivi#Fgen#IIviFgenArbitrary#DataMask">
            <summary>
            Gets or sets a mask that determines what bits of the output data are masked out. 
            This is especially useful when combined with Data Markers so that the bits embedded 
            with the data to be used for markers are not actually output by the generator.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:40:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Ivi#Fgen#IIviFgenArbitrary#SampleBitResolution">
            <summary>
            Gets the number of significant bits that the generator supports in an arbitrary waveform.
            Together with the binary alignment, this allows the user to know the range and
            resolution of the integers in the waveform.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:40:26 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Ivi#Fgen#IIviFgenArbitrary#Sequence">
            <summary>
            Gets a reference to the class-compliant IIviFgenArbitrarySequence interface.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:40:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Ivi#Fgen#IIviFgenArbitrary#Waveform">
            <summary>
            Gets a reference to the class-compliant IIviFgenArbitraryWaveform interface.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:40:35 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.ClearMemory">
            <summary>
            Removes all previously created arbitrary waveforms, sequences, and scripts from the signal generator
            memory, and invalidates all waveform handles, sequence handles, and waveform names.
            </summary>
            <remarks>
            The signal generator must not be in the generating state when you call this method.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.ClearMemory" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>  is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>, 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>,
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 2:49:52 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.GetGain(System.String)">
            <summary>
            Gets the factor by which the signal generator scales the arbitrary waveform data.
            </summary>
            <param name="channelName">The name of the output channel.</param>
            <returns>The factor by which the signal generator scales the arbitrary waveform data.</returns>
            <remarks>
            When you create arbitrary waveforms, you must first normalize the data points to the range
            -1.0 to +1.0. Use the gain to scale the arbitrary waveform to other ranges. For example,
            when you set the gain to 2.0, the output signal ranges from -2.0 V to +2.0 V.
            Use this method when <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> or
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.GetGain(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException"> 
            The value for <paramref name="channelName"/> is invalid. <para> - or -</para>The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 2:56:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.GetOffset(System.String)">
            <summary>
            Gets the value the signal generator adds to the arbitrary waveform data.
            </summary>
            <param name="channelName">The name of the output channel.</param>
            <returns>The value the signal generator adds to the arbitrary waveform data.</returns>
            <remarks>
            When you create arbitrary waveforms, you must first normalize the data points to the range -1.0
            to +1.0. Use the offset to shift the arbitrary waveform range. For example, when you set this
            property to 1.0, the output signal ranges from 0.0 V to 2.0 V.
            Use this method when <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> or
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.GetOffset(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para> - or - </para>The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 2:58:23 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SetGain(System.String,System.Double)">
            <summary>
            Sets the factor by which the signal generator scales the arbitrary waveform data.
            </summary>
            <param name="channelName">The name of the output channel.</param>
            <param name="gain">The factor by which the signal generator scales the arbitrary waveform data.</param>
            <remarks>
            When you create arbitrary waveforms, you must first normalize the data points to the range
            -1.0 to +1.0. Use the gain to scale the arbitrary waveform to other ranges. For example,
            when you set the gain to 2.0, the output signal ranges from -2.0 V to +2.0 V.
            Use this method when <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> or
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SetGain(System.String,System.Double)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed. 
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or - </para>The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="gain"/> is invalid. <para> - or - </para>
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>  is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>, 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>,
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 3:05:47 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SetOffset(System.String,System.Double)">
            <summary>
            Sets the value the signal generator adds to the arbitrary waveform data.
            </summary>
            <param name="channelName">The name of the output channel.</param>
            <param name="offset">The value the signal generator adds to the arbitrary waveform data.</param>
            <remarks>
            When you create arbitrary waveforms, you must first normalize the data points to the range -1.0
            to +1.0. Use the offset to shift the arbitrary waveform range. For example, when you set this
            property to 1.0, the output signal ranges from 0.0 V to 2.0 V.
            Use this method when <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> or
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SetOffset(System.String,System.Double)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed. 
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or -</para>The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="offset"/> is invalid.<para>- or -</para>
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>  is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>, 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>,
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/8/2017 3:05:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenScript">
            <summary>
            Provides functionality for creating, configuring, and clearing scripts.
            </summary>
            <remarks>
            Use this class to write and delete scripts. This class is to be used
            when the signal generator's 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/>
            is set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script"/>.
            After creating and writing your scripts to the signal generator. Use
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScript.ScriptToGenerate"/>
            to tell the signal generator which script to generate after
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration"/>
            is called.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Script"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/11/2017 11:22:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenScript.ScriptToGenerate">
            <summary>
            Gets or sets a value indicating the name of the script that the generator produces.
            </summary>
            <value>
            The name of the script that the generator produces.
            </value>
            <remarks>
            <note type="note">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> should be set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/> to call this property.
            </note>
            <note type="note"> You cannot change this property while the device is generating a waveform.
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScript.ScriptToGenerate" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 11:22:45 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenScript.Delete(System.String,System.String)">
            <summary>
            Deletes the specified script from onboard memory.
            </summary>
            <param name="channelName">
            The name of the channel to delete the script from.
            </param>
            <param name="scriptName">
            The name of the script you want to delete.
            </param>
            <remarks>
            <note type="note">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> should be set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/> to call this method.
            </note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            THe value for <paramref name="channelName"/> or <paramref name="scriptName"/> is invalid.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenScript.Delete(System.String,System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 11:24:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenScript.Write(System.String,System.String)">
            <summary>
            Writes a string containing one or more scripts that govern the generation of waveforms.
            </summary>
            <param name="channelName">
            The name of the channel to write script to.
            </param>
            <param name="script">
            The text of the script you want to use for your generation operation. 
            </param>
            <remarks>
            <note type="note">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> should be set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/> to call this method.
            </note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.FormatException">
            The value for <paramref name="script"/> is invalid or formatted incorrectly.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenScript.Write(System.String,System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 1:12:40 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger">
            <summary>
            Provides properties and methods to configure script triggers.
            </summary>
            <remarks>
            Use this class to configure your script triggers. Set the type of
            script trigger you would like to use by calling
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SetTriggerType(System.String,NationalInstruments.ModularInstruments.NIFgen.TriggerType)"/>.
            Depending on what type of script trigger you have selected, use either
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.DigitalEdge"/>,
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.DigitalLevel"/>,
            or
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SoftwareEdge"/>
            sub-objects to further configure your script trigger.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Script"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 1:19:57 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.DigitalEdge">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger"/> object that configures digital edge script triggers.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeScriptTrigger"/> object that configures digital edge script triggers.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.DigitalEdge" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:28:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.DigitalLevel">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger"/> object that configures digital level script triggers.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalLevelScriptTrigger"/> object that configures digital level script triggers.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.DigitalLevel" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:29:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SoftwareEdge">
            <summary>
            Gets the  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger"/> object that configures software edge script triggers.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger"/> object that configures software edge script triggers.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SoftwareEdge" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:29:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.GetOutputTerminal(System.String)">
            <summary>
            Gets the destination terminal for exporting the script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <returns>
            The destination terminal for exporting the script trigger.
            </returns>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The output terminal for script triggers in <paramref name="triggerId"/> was set to different values.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.GetOutputTerminal(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:50 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SetOutputTerminal(System.String,System.String)">
            <summary>
            Sets the destination terminal for exporting the script trigger.
            </summary>
            <param name="triggerId">The script trigger used for triggering.</param>
            <param name="outputTerminal">The destination terminal for exporting the script trigger.</param>
            <remarks>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="outputTerminal"/> was an invalid value.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SetOutputTerminal(System.String,System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 9:58:07 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.GetTriggerType(System.String)">
            <summary>
            Gets the type of script trigger for the specified <paramref name="triggerId"/>.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <returns>
            The type of script trigger for the specified <paramref name="triggerId"/>.
            </returns>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The type of trigger for script triggers in <paramref name="triggerId"/> was set to different values.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.GetTriggerType(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:31:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SetTriggerType(System.String,NationalInstruments.ModularInstruments.NIFgen.TriggerType)">
            <summary>
            Sets the type of script trigger for specified <paramref name="triggerId"/>.
            </summary>
            <param name="triggerId">The script trigger used for triggering.</param>
            <param name="triggerType">The type of script trigger you want to use.</param>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="triggerType"/> was an invalid value.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SetTriggerType(System.String,NationalInstruments.ModularInstruments.NIFgen.TriggerType)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:39:53 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.Disable(System.String)">
            <summary>
            Disables the script trigger.
            </summary>
            <param name="triggerId">The script trigger used for triggering.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.Disable(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The operation cannot be complete in the current output mode. <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            must be set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameRequiredException">
            The value for <paramref name="triggerId"/> is null or empty.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:30:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger">
            <summary>
            Provides methods to configure software edge script triggers.
            </summary>
            <remarks>
            Use this class to configure you script trigger for software edge triggering.
            When you are ready to trigger the script trigger, call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger.Send(System.String)"/>.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger.SoftwareEdge"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/21/2017 2:33:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger.Configure(System.String)">
            <summary>
            Configures the script trigger for software edge triggering. 
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <exception cref="T:Ivi.Driver.SelectorNameRequiredException">
            The value for <paramref name="triggerId"/> is null.
            <para>
            - or -
            </para>
            The value for <paramref name="triggerId"/> is empty.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> was not set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script" crefType="PartiallyQualified"/>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger.Configure(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:10:34 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger.Send(System.String)">
            <summary>
            Sends a command to trigger using the specified script trigger.
            </summary>
            <param name="triggerId">
            The script trigger used for triggering.
            </param>
            <remarks>
            <note type="note">
            This method does not override the external digital edge triggers for the NI 5401/5411/5431.
            </note>
            </remarks>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="triggerId"/> is null.
            <para>
            - or -
            </para>
            The value for <paramref name="triggerId"/> is empty.
            <para>
            - or -
            </para>
            The value for <paramref name="triggerId"/> is unknown.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger.Send(System.String)" crefType="PartiallyQualified"/> 
            was called before <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration" crefType="PartiallyQualified"/> was called.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeScriptTrigger.Send(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:32:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger">
            <summary>
            Provides methods to configure software edge start triggers.
            </summary>
            <remarks>
            Use this class to configure you start trigger for software edge triggering.
            When you are ready to trigger the start trigger, call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger.Send"/>.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.SoftwareEdge"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/21/2017 2:33:09 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger.Configure">
            <summary>
            Configures the start trigger to use software triggering.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger.Configure" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 1:14:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger.Send">
            <summary>
            Sends a command to trigger the signal generator.
            </summary>
            <remarks>
            <note type="note">
            This method does not override the external digital edge triggers for the NI 5401/5411/5431.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger.Send" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger.Send" crefType="PartiallyQualified"/> 
            was called before <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration" crefType="PartiallyQualified"/> was called.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 1:14:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform">
            <summary>
            Provides properties and methods used to configure standard waveforms.
            </summary>
            <remarks>
            Use this class to define a standard waveform or function for the signal generator to output.
            Use <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.Configure(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double,System.Double,System.Double,System.Double)"/>
            to select which <see cref="T:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform"/> you would like to generate,
            as well as the amplitude, DC offset, frequency, and start phase of the waveform.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.StandardWaveform"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>1/10/2017 1:15:08 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.BufferSize">
            <exclude/>
            <summary>
            Gets the number of samples used in the standard waveform buffer.
            </summary>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.MaximumBufferSize">
            <summary>
            Gets or sets the maximum number of samples that can be used in the standard waveform buffer. 
            </summary>
            <value>
            The maximum number of samples that can be used in the standard waveform buffer. Increasing this value may
            increase the quality of the waveform but may also increase the amount of time required to change the waveform while running.
            </value>
            <remarks>
            This property is valid only on devices that implement <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>, and it is read-only
            for all other devices.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.MaximumBufferSize" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value is invalid. <para>
            - or -
            </para><see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> property is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            This property is not supported on the resource in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 11:33:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SyncOutOutputTerminal">
            <summary>
            Gets or sets the terminal at which to export the SYNC OUT signal.
            </summary>
            <value>
            The terminal at which to export the SYNC OUT signal. 
            </value>
            <remarks>
            This property is not
            supported for all devices. For a list of the terminals available on your
            device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SyncOutOutputTerminal" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.<para>
            - or -
            </para>
            The source terminal could not be found on the device.
            </exception>
            <lastupdated>1/10/2017 1:31:08 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.ClearUserStandardWaveform(System.String)">
            <summary>
            Clears the user-defined waveform created using <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.DefineUserStandardWaveform(System.String,System.Double[])" crefType="PartiallyQualified"/>.
            </summary>
            <param name="channelName">The channel used.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.ClearUserStandardWaveform(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
             The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para> The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 1:34:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.Configure(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Configures the properties of the signal generator that affect standard waveform generation.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="waveformFunction">The standard waveform that you want the signal generator to produce.</param>
            <param name="amplitude">The peak-to-peak amplitude of the standard waveform that you want the signal generator to produce.</param>
            <param name="dcOffset">The DC offset of the standard waveform that you want the signal generator to produce.</param>
            <param name="frequency">The frequency of the standard waveform that you want the signal generator to produce.</param>
            <param name="startPhase">
            The horizontal offset, in degrees of one waveform cycle, of the standard waveform that you want the signal generator to produce.
            </param>
            <remarks>
            <para>
            When specifying the <paramref name="startPhase"/>, a start phase of 180 degrees means output generation begins halfway 
            through the waveform cycle. A start phase of 360 degrees offsets the output by an entire waveform cycle and is therefore 
            identical to a start phase of 0 degrees.
            </para>
            <para>
            The value of <paramref name="dcOffset"/> is the offset at the output terminal.
            The value is the offset from ground to the center of the waveform that you specify with <paramref name="waveformFunction"/>. For example, 
            to configure a waveform with a peak-to-peak amplitude of 10.00 V to range from 0.00 V to +10.00 V, set <paramref name="dcOffset"/> to 5.00 V.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.Configure(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double,System.Double,System.Double,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>  is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="waveformFunction"/> is invalid. <para>- or -</para>
            The value for <paramref name="amplitude"/> is invalid.<para>- or -</para>
            The value for <paramref name="dcOffset"/> is invalid.<para>- or -</para>
            The value for <paramref name="frequency"/> is invalid.<para>- or -</para>
            The value for <paramref name="startPhase"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>- or -</para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 1:41:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.DefineUserStandardWaveform(System.String,System.Double[])">
            <summary>
            Defines a user waveform for either <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/> or
             <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/>.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="data">The array of data you want to load into the new waveform.</param>
            <remarks>
            <para>
            To select the waveform, set the <format type="italics">waveformFunction</format> parameter of  
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.Configure(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double,System.Double,System.Double,System.Double)" crefType="PartiallyQualified"/>
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.User" crefType="PartiallyQualified"/>.
            </para>
            <para>
            The waveform data must be scaled between -1.0 and 1.0. Use the <format type="italics">amplitude</format> parameter of 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.Configure(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform,System.Double,System.Double,System.Double,System.Double)" crefType="PartiallyQualified"/>
            to generate different output voltages.
            </para>
            <note type="note">
            You must set  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/> or
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/> before calling this method.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.DefineUserStandardWaveform(System.String,System.Double[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>  is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="data"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The values in <paramref name="data"/> must be between -1.0 and 1.0.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 1:46:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetAmplitude(System.String)">
            <summary>
            Gets the peak-to-peak amplitude of the standard waveform.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <returns>The peak-to-peak amplitude of the standard waveform.</returns>
            <remarks>
            <para>
            This value is the peak-to-peak amplitude at the output terminal, specified in units of volts peak-to-peak.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetAmplitude(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 1:56:18 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetBufferSize(System.String)">
            <summary>
            Gets the number of samples used in the standard waveform buffer.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <returns> The number of samples used in the standard waveform buffer. </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetBufferSize(System.String)" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/>
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>6/14/2019 4:21:00 PM</lastupdated>
            <updatedby>esalley</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetDCOffset(System.String)">
            <summary>
            Gets the DC offset of the standard waveform.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <returns>The DC offset of the standard waveform.</returns>
            <remarks>
            <para>
            This value is the offset at the output terminal and it is the offset from the ground to the center of the waveform.
            </para>
            <para>
            Units are in volts (V).
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetDCOffset(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 1:57:29 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetDutyCycleHigh(System.String)">
            <summary>
            Gets the duty cycle of the square wave in units of percentage of time the waveform is high. 
            </summary>
            <param name="channelName">The channel to be used.</param>
            <returns>The duty cycle of the square wave in units of percentage of time the waveform is high.</returns>
            <remarks>Specify this value as a percentage of the time the square wave is high in a cycle.</remarks>
            <para>
            The default value is 50%.
            </para>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetDutyCycleHigh(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:00:40 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetFrequency(System.String)">
            <summary>
            Gets the frequency, in hertz, of the standard waveform.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <returns>The frequency of the standard waveform.</returns>
            <remarks>
            <para>
            This value does not affect the signal generator behavior when you call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetWaveformFunction(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform)" crefType="PartiallyQualified"/>
            to set the waveform function to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.DC" crefType="PartiallyQualified"/>.
            </para>
            <para>
            For <see cref="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.Sine" crefType="PartiallyQualified"/> waveforms, the range is between 0 MHz and 16 MHz. 
            For all other waveforms, the range is between 0 MHz and 1 MHz.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetFrequency(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:01:40 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetStartPhase(System.String)">
            <summary>
            Gets the horizontal offset, in degrees of one waveform cycle, of the standard waveform.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <returns>The horizontal offset, in degrees of one waveform cycle, offset of the standard waveform.</returns>
            <remarks>
            The start phase is specified in degrees of one waveform cycle. A start phase of 180 degrees means output generation begins
            halfway through the waveform cycle. A start phase of 360 degrees offsets the output by an entire waveform cycle, which is identical
            to a start phase of 0 degrees.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetStartPhase(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:07:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetWaveformFunction(System.String)">
            <summary>
            Gets the standard waveform the signal generator produces.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <returns>The standard waveform the signal generator produces.</returns>
            <remarks>
            Only use this method when <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.GetWaveformFunction(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:08:33 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetAmplitude(System.String,System.Double)">
            <summary>
            Sets the peak-to-peak amplitude of the standard waveform.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="amplitude">The peak-to-peak amplitude to use.</param>
            <remarks>
            <para>
            This value is the peak-to-peak amplitude at the output terminal. For example, to produce a waveform ranging from -5.00 V to +5.00 V,
            set the peak-to-peak amplitude to 10.00 V.
            </para>
            <para>
            The amplitude is specified in units of volts peak-to-peak.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetAmplitude(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:09:47 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetDCOffset(System.String,System.Double)">
            <summary>
            Sets the DC offset of the standard waveform.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="dcOffset">The DC offset of the standard waveform.</param>
            <remarks>
            <para>
            This value is the offset at the output terminal and it is the offset from the ground to the center of the waveform.
            For example, to configure a waveform with a peak-to-peak amplitude of 10.00 V to range from 0.00 V to +10,00 V, set this property
            to 5.00 V.
            </para>
            <para>
            Units are in volts (V).
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetDCOffset(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="dcOffset"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:10:57 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetDutyCycleHigh(System.String,System.Double)">
            <summary>
            Sets the duty cycle of the square wave in units of percentage of time the waveform is high.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="dutyCycleHigh">The duty cycle of the square wave in units of percentage of time the waveform is high.</param>
            <remarks>Specify this value as a percentage of the time the square wave is high in a cycle.</remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetDutyCycleHigh(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>  is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="dutyCycleHigh"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:12:00 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetFrequency(System.String,System.Double)">
            <summary>
            Sets the frequency, in hertz, of the standard waveform.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="frequency">The frequency of the standard waveform.</param>
            <remarks>
            <para>
            This value does not affect the signal generator behavior when you call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetWaveformFunction(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform)" crefType="PartiallyQualified"/>
            to set the waveform function to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.DC" crefType="PartiallyQualified"/>.
            </para>
            <para>
            For <see cref="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.Sine" crefType="PartiallyQualified"/> waveforms, the range is between 0 MHz and 16 MHz. 
            For all other waveforms, the range is between 0 MHz and 1 MHz.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetFrequency(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:13:59 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetStartPhase(System.String,System.Double)">
            <summary>
            Sets the horizontal offset, in degrees of one waveform cycle, of the standard waveform.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="startPhase">The horizontal offset, in degrees of one waveform cycle, of the standard waveform.</param>
            <remarks>
            The start phase is specified in degrees of one waveform cycle. A start phase of 180 degrees means output generation begins
            halfway through the waveform cycle. A start phase of 360 degrees offsets the output by an entire waveform cycle, which is identical
            to a start phase of 0 degrees.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetStartPhase(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="startPhase"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:15:05 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetWaveformFunction(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform)">
            <summary>
            Sets the standard waveform the signal generator produces.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="waveformFunction">The standard waveform the signal generator produces.</param>
            <remarks>
            Only use this method when <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is set
            to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetWaveformFunction(System.String,NationalInstruments.ModularInstruments.NIFgen.StandardWaveform)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> is not set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="waveformFunction"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:16:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.Ivi#Fgen#IIviFgenStandardWaveform#Configure(System.String,Ivi.Fgen.StandardWaveform,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Configures the channel, waveform function, amplitude, DC offset, frequency, and
            start phase for standard waveform generation. When the waveformFunction parameter
            is set to Waveform DC, this method ignores the amplitude, frequency, and start
            phase parameters.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="waveformFunction">
            Specifies the standard waveform function.
            </param>
            <param name="amplitude">
            Specifies the waveform amplitude.
            </param>
            <param name="dcOffset">
            Specifies the waveform's DC offset.
            </param>
            <param name="frequency">
            Specifies the waveform frequency.
            </param>
            <param name="startPhase">
            Specifies the waveform start phase.
            </param>
            <exclude/>
            <lastupdated>1/4/2017 3:12:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.Ivi#Fgen#IIviFgenStandardWaveform#GetWaveformFunction(System.String)">
            <summary>
            Gets the standard waveform function being output by the function generator.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            The standard waveform function being output by the function generator.
            </returns>
            <exclude/>
            <lastupdated>1/4/2017 3:12:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.Ivi#Fgen#IIviFgenStandardWaveform#SetWaveformFunction(System.String,Ivi.Fgen.StandardWaveform)">
            <summary>
            Sets the standard waveform function being output by the function generator.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="waveformFunction">
            The standard waveform function being output by the function generator.
            </param>
            <exclude/>
            <lastupdated>1/4/2017 3:12:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase">
            <summary>
            Provides properties and methods to configure the sample clock timebase for the signal generator.
            </summary>
            <remarks>
            Use this class to configure the rate and source of the sample clock timebase.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.SampleClockTimebase"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>1/10/2017 12:59:20 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.ExportedDivisor">
            <summary>
            Gets or sets the factor by which to divide the device clock (sample clock timebase) before it is exported.
            </summary>
            <value>The factor by which to divide the device clock (sample clock timebase) before it is exported.</value>
            <remarks>
            To export the sample clock timebase, use  
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ExportSignal(NationalInstruments.ModularInstruments.NIFgen.SignalSource,System.String,System.String)" crefType="PartiallyQualified"/>
            or  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.OutputTerminal" crefType="PartiallyQualified"/>.
            <note type="note">
            Not all instruments support a divisor value of 1.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.ExportedDivisor" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:10 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.OutputTerminal">
            <summary>
            Gets or sets the terminal to export the sample clock timebase.
            </summary>
            <value>
            The terminal to export the sample clock timebase.
            </value>
            <remarks>
            <para>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device  or to the <format type="bold">Device Routes</format> tab in MAX.
            </para>
            <para>
            If you specify a divisor with  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.ExportedDivisor" crefType="PartiallyQualified"/>, 
            the sample clock timebase exported with <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.OutputTerminal" crefType="PartiallyQualified"/> 
            is the value of the sample clock timebase after it is divided-down.
            </para>
            <note type="note">
            You cannot change this property while the device is generating a waveform. If you want to change the device configuration, call 
            the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> method 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.OutputTerminal" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The value set is invalid.
            <para> - or - </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 11:21:10 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.Rate">
            <summary>
            Gets or sets the sample clock timebase rate. This property applies only to an external sample clock timebase.
            </summary>
            <value>The sample clock timebase rate.</value>
            <remarks>
            <note type="note">
            You cannot change this property while the device is generating a waveform. If you want to change the device configuration, call 
            the 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> method 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.Rate" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:13 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.Source">
            <summary>
            Gets or sets the sample clock timebase source. 
            </summary>
            <value>
            The sample clock timebase source.
            </value>
            <remarks>
            <para>
            For a complete list of the sample clock timebase sources available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </para>
            <note type="note"> You cannot change this property while the device is generating a waveform.
             If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.Source" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.OperationNotSupportedException">
            Using  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase.Source" crefType="PartiallyQualified"/> property is not supported by the instrument in use.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:55:57 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent">
            <summary>
            Provides properties used to configure and monitor started events.
            </summary>
            <remarks>
            Use this class to configure and monitor your started events. A started event occurs
            when the signal generator has received a start trigger and is generating a waveform.
            The start event signal can be set to either
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Pulse"/>
            or
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Level"/>
            using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.OutputBehavior"/>.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenEvent.Started"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/11/2017 11:40:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.ActiveLevel">
            <summary>
            Gets or sets the output polarity of the started event.
            </summary>
            <value>
            The output polarity of the started event.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.ActiveLevel" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.Delay">
            <summary>
            Gets or sets the amount by which to delay a started event with respect to the beginning of the analog output of the signal generator.
            </summary>
            <value>
            The amount by which to delay a started event with respect to the beginning of the analog output of the signal generator. The default value is 0.
            </value>
            <remarks>
            A positive delay value indicates that the started event occurs after the analog data, while a negative delay value indicates that the
            started event occurs before the analog data. The default value is zero, which aligns the started event with the analog output.
            You can specify the units of the delay value by setting 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.DelayUnits" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.Delay" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The value set is out of the legal range.
            <para>
            - or -
            </para>
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:18:35 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.DelayUnits">
            <summary>
            Gets or sets the units used for <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.Delay" crefType="PartiallyQualified"/>.
            </summary>
            <value>
            The units used for <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.Delay" crefType="PartiallyQualified"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.DelayUnits" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 11:40:48 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.IsLatched">
            <summary>
            Gets a value indicating whether the started event is latched.
            </summary>
            <value>
            <see langword="true"/> if the started event is latched, otherwise <see langword="false"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.IsLatched" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:19:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.OutputBehavior">
            <summary>
            Gets or sets the behavior of the started event signal on the output terminal.
            </summary>
            <value>
            The behavior of the started event signal on the output terminal.
            </value>
            <remarks>
            The valid values for this property are <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Pulse" crefType="PartiallyQualified"/> and
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Level" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.OutputBehavior" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:17 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.OutputTerminal">
            <summary>
            Gets or sets the destination terminal for the started event.
            </summary>
            <value>
            The destination terminal for the started event.
            </value>
            <remarks>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            <note type="note">
            For ranges of objects, specify a number immediately before and after every colon (":") in the input string. If a name is specified after
            the colon, it must be identical to the name specified immediately before the colon. Colons are not allowed within the names of the individual objects.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.OutputTerminal" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.FormatException">
            The syntax for a range of objects in the input string is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:21:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulsePolarity">
            <summary>
            Gets or sets the output polarity of the started event.
            </summary>
            <value>
            The output polarity of the started event.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulsePolarity" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:18 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulseWidth">
            <summary>
            Gets or sets the pulse width value for the started event.
            </summary>
            <value>
            The pulse width value for the started event.
            </value>
            <remarks>
            You can specify the units of the pulse width by setting 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulseWidthUnits" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulseWidth" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:22:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulseWidthUnits">
            <summary>
            Gets or sets the units used for 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulseWidth" crefType="PartiallyQualified"/>.
            </summary>
            <value>
            The units used for <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulseWidth" crefType="PartiallyQualified"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartedEvent.PulseWidthUnits" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:22:39 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming">
            <summary>
            Provides properties and methods to configure waveform streaming.
            </summary>
            <remarks>
            Use this class to configure waveform streaming. 
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Streaming"/>.
            </para></remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/13/2017 10:28:02 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.WriteTimeout">
            <summary>
            Gets or sets the maximum amount of time allowed to complete a streaming write operation.
            </summary>
            <value>
            The maximum amount of time allowed to complete a streaming write operation.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.WriteTimeout" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:43 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.SpaceAvailableInWaveform">
            <summary>
            Gets or sets the space available in the streaming waveform for writing new data.
            </summary>
            <value>
            The space available in the streaming waveform for writing new data.
            </value>
            <remarks>
            This property is used in conjunction with 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.WaveformHandle" crefType="PartiallyQualified"/>
            and 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.WaveformName" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.SpaceAvailableInWaveform" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            You only can access this property while the task is reserved, committed or while the task is running. <para>
            - or - 
            </para>
            The streaming waveform handle was not specified.<para>
            - or - 
            </para>
            The data being written to the streaming waveform cannot keep up with the output. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:29:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.WaveformHandle">
            <summary>
            Gets or sets the waveform handle of the waveform used to continuously stream data during generation.
            </summary>
            <value>The waveform handle of the waveform used to continuously stream data during generation.
            </value>
            <remarks>
            This property is used in conjunction with 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.SpaceAvailableInWaveform" crefType="PartiallyQualified"/>.
            <note type="note"> You cannot change this property while the device is generating a waveform.
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.WaveformHandle" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value was set to an invalid waveform handle.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:43:10 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.WaveformName">
            <summary>
            Gets or sets the waveform handle of the waveform used to continuously stream data during generation.
            </summary>
            <value>The waveform handle of the waveform used to continuously stream data during generation.
            </value>
            <remarks>
            This property is used in conjunction with 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.SpaceAvailableInWaveform" crefType="PartiallyQualified"/>.
            <note type="note"> You cannot change this property while the device is generating a waveform.
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStreaming.WaveformName" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:43:16 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenSubObject">
            <summary>
            Provides members that are common to all <see cref="N:NationalInstruments.ModularInstruments.NIFgen"/> sub-object classes.
            </summary>
            <threadsafety safety="safe"/>
            <remarks>
            This class contains members that are common to all <see cref="N:NationalInstruments.ModularInstruments.NIFgen"/> sub-object classes.
            <note type="tip">Example applications are located in the <format type="monospace"><entity value="lt"/><format type="italics">Public Documents</format><entity value="gt"/>\National Instruments\NI-Fgen\NI-FGEN Examples\DotNET 4.<format type="italics">x</format></format> directory
            or in the <format type="bold">Start</format> menu at <format type="bold">National Instruments<entity value="raquo"/>NI-FGEN<entity value="raquo"/>NI-FGEN Examples</format>.
            </note>
            </remarks>
            <lastupdated>3/13/2017 9:55:08 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform">
            <summary>
            Provides functionality to configure, define, and clear arbitrary waveforms. 
            </summary>
            <remarks>
            This class provides functionality for allocating onboard signal generator memory and writing waveforms
            to this memory. Multiple arbitrary waveforms can be created and generated. Use 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SetHandle(System.String,System.Int32)"/>
            to determine which waveform will be generated.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.Waveform"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2/17/2017 12:59:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.MarkerPosition">
            <summary>
            Gets or sets the position for a marker to be asserted in the arbitrary waveform.
            </summary>
            <value>
            The position for a marker to be asserted in the arbitrary waveform. 
            The default value is -1.
            <remarks>
            Use this property
            when  <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/>
            is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>.
            Use  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ExportSignal(NationalInstruments.ModularInstruments.NIFgen.SignalSource,System.String,System.String)"/>
            method to export the marker signal.
            </remarks>
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.MarkerPosition" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:04:35 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.RepeatCount">
            <summary>
            Gets or sets the number of times to repeat the arbitrary waveform when the trigger mode 
            has been set to to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Single" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Stepped" crefType="PartiallyQualified"/>.
            </summary>
            <value>
            The number of times to repeat the arbitrary waveform when the trigger mode 
            has been set to to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Single" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Stepped" crefType="PartiallyQualified"/>. The default value is 1.
            </value>
            <remarks>
            This property is ignored if <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.SetTriggerMode(System.String,NationalInstruments.ModularInstruments.NIFgen.TriggerMode)" crefType="PartiallyQualified"/> 
            is called setting the trigger mode to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Continuous" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Burst" crefType="PartiallyQualified"/>.
            Use this property when <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> 
            is set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>.
            When used during streaming operations, this property specifies the number of times to repeat the streaming waveform (the onboard memory allocated for
            streaming).
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.RepeatCount" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:37:05 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.NumberWaveformsMax">
            <summary>
            Gets the maximum number of arbitrary waveforms that the signal generator allows. On some signal generators, this value may vary with remaining onboard memory
            </summary>
            <value>
            The maximum number of arbitrary waveforms that the signal generator allows.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.NumberWaveformsMax" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:33:54 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Quantum">
            <summary>
            Gets the quantum value the signal generator allows. The size of each arbitrary waveform must be a multiple of this quantum value.
            </summary>
            <value>
            The quantum value the signal generator allows.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Quantum" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:34:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SizeMax">
            <summary>
            Gets the maximum number of points the signal generator allows in an arbitrary waveform. On some signal generators, this value may vary with remaining onboard memory.
            </summary>
            <value>
            The maximum number of points the signal generator allows in an arbitrary waveform.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SizeMax" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:37:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SizeMin">
            <summary>
            Gets the minimum number of points the signal generator allows in an arbitrary waveform.
            </summary>
            <value>
            The minimum number of points the signal generator allows in an arbitrary waveform.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SizeMin" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:37:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Allocate(System.String,System.Int32)">
            <summary>
            Specifies the size of a waveform and allocates it in onboard memory before loading the associated data. Data can be loaded
            in smaller blocks with the <format type="monospace">FgenArbitraryWaveform.Write</format> methods.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="numberOfSamples">The size of the waveform in samples. This value must be an integer multiple of the waveform quantum.</param>
            <returns>A handle that identifies the waveform.</returns>
            <remarks>
            The signal generator must not be in the generating state when you call this method.
            <note type="note">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> 
            must be set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/> before using
            this method.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Allocate(System.String,System.Int32)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="numberOfSamples"/> must be greater than 0. <para>- or - </para>
            The value for <paramref name="numberOfSamples"/> must be an integer multiple of the 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Quantum"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> 
            must be set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/>
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 1:27:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Clear(System.Int32)">
            <summary>
            Removes a previously created arbitrary waveform from the signal generator memory and invalidates the waveform handle.
            </summary>
            <param name="handle">The handle of the arbitrary waveform to clean. Specify a value of -1 to clear all waveforms.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Clear(System.Int32)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">The value for <paramref name="handle"/> is invalid.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:42:56 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Configure(System.String,System.Int32,System.Double,System.Double)">
            <summary>
            Configures the properties of the signal generator that affect arbitrary waveform generation, selects the arbitrary waveform to produce, and sets the gain and offset.
            </summary>
            <param name="channelName">The channel to be used.</param>
            <param name="handle">The handle of the arbitrary waveform to produce.</param>
            <param name="gain">The factor by which the signal generator scales the arbitrary waveform.</param>
            <param name="offset">The value the signal generator adds to the arbitrary waveform.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Configure(System.String,System.Int32,System.Double,System.Double)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
             The value for <paramref name="handle"/> is invalid. <para>- or -</para> The value for <paramref name="gain"/> is invalid.<para>- or -</para>  The value for <paramref name="offset"/> is invalid. 
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para> The value for <paramref name="channelName"/> is unknown. 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:47:57 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveform(System.String,System.Int16[])">
            <summary>
            Creates an onboard waveform from the <paramref name="waveform"/> parameter for use in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>. 
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="waveform">The array of data you want to use for the new arbitrary waveform.</param>
            <returns>A handle that identifies the waveform.</returns>
            <remarks>
            The handle returned by this method can be used later for setting the active waveform, changing the data in the waveform,
            building sequences of waveforms, or deleting the waveform when it is no longer needed.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveform(System.String,System.Int16[])" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified <paramref name="waveform"/> is invalid. <para>- or -</para>The length of <paramref name="waveform"/> is invalid. 
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="waveform"/> is null.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:55:45 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveform(System.String,NationalInstruments.ComplexDouble[])">
            <summary>
            Creates an onboard waveform from the <paramref name="waveform"/> parameter for use in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="waveform">The array of data you want to use for the new arbitrary waveform.</param>
            <returns>A handle that identifies the waveform.</returns>
            <remarks>
            The handle returned by this method can be used later for setting the active waveform, changing the data in the waveform,
            building sequences of waveforms, or deleting the waveform when it is no longer needed.
            To use this method, OSP must be enabled by calling  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>,  
            and <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/>
             must be set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>
            using  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveform(System.String,NationalInstruments.ComplexDouble[])" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            OSP was not enabled. <para>- or - </para><see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> was not set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified <paramref name="waveform"/> is invalid. <para>- or - </para>The length of <paramref name="waveform"/> is invalid. 
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="waveform"/> is null.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 1:32:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveform(System.String,System.Double[])">
            <summary>
            Creates an onboard waveform from the <paramref name="waveform"/> parameter for use in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="waveform">The array of data you want to use for the new arbitrary waveform.</param>
            <returns>A handle that identifies the waveform.</returns>
            <remarks>
            The handle returned by this method can be used later for setting the active waveform, changing the data in the waveform,
            building sequences of waveforms, or deleting the waveform when it is no longer needed.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveform(System.String,System.Double[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified <paramref name="waveform"/> is invalid. <para>- or -</para>The length of <paramref name="waveform"/> is invalid. 
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="waveform"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">A sample in <paramref name="waveform"/> was out of range.</exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:54:29 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveform``1(System.String,NationalInstruments.AnalogWaveform{``0})">
            <summary>
            Creates an onboard waveform from the <paramref name="waveform"/> parameter for use in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </summary>
            <typeparam name="T">The type of the data in the waveform parameter.</typeparam>
            <param name="channelName">The channel to use.</param>
            <param name="waveform">The waveform you want to use for the new arbitrary waveform.</param>
            <returns>A handle that identifies the waveform.</returns>
            <remarks>
            The handle returned by this method can be used later for setting the active waveform, changing the data in the waveform,
            building sequences of waveforms, or deleting the waveform when it is no longer needed.
            The waveform specified must have a regular sample interval.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveform``1(System.String,NationalInstruments.AnalogWaveform{``0})" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified <paramref name="waveform"/> is invalid. <para>- or - </para>
            The length of <paramref name="waveform"/> is invalid.  <para>- or - </para>
            The sampling rate defined by <paramref name="waveform"/> is invalid.  <para>- or - </para>
            The sample interval defined by <paramref name="waveform"/> is zero.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="waveform"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">A sample in <paramref name="waveform"/> was out of range.</exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode" crefType="PartiallyQualified"/> 
            of the waveform is not set to <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular" crefType="PartiallyQualified"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 1:58:00 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformDoubleFromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)">
            <summary>
            Creates an onboard waveform from the file read from the <paramref name="fileName"/> parameter for use in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="fileName">The full path and name of the file where the waveform data resides.</param>
            <param name="byteOrder">
            The byte order of the data in the file.
            <note>
            Data written by most applications in Windows (including LabWindows™/CVI™) is in Little Endian format. Data 
            written to a file from LabVIEW is in Big Endian format by default on all platforms. (Big Endian and Little Endian 
            refer to the way data is stored in memory, which can differ on different processors.)
            </note>
            </param>
            <returns>
            A handle that identifies the waveform.
            </returns>
            <remarks>
            The floating-point data must be between -1.0 and +1.0.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformDoubleFromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="fileName"/> is invalid. <para>- or -</para> The value for <paramref name="byteOrder"/> is invalid. 
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="fileName"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The values defined in the file read in from <paramref name="fileName"/> must be between -1.0 and +1.0.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:01:14 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformInt16FromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)">
            <summary>
            Creates an onboard waveform from the file read from the <paramref name="fileName"/> parameter for use in 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary" crefType="PartiallyQualified"/> 
            or <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence" crefType="PartiallyQualified"/>.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="fileName">The full path and name of the file where the waveform data resides.</param>
            <param name="byteOrder">
            The byte order of the data in the file.
            <note>
            Data written by most applications in Windows (including LabWindows™/CVI™) is in Little Endian format. Data 
            written to a file from LabVIEW is in Big Endian format by default on all platforms. (Big Endian and Little Endian 
            refer to the way data is stored in memory, which can differ on different processors.)
            </note>
            </param>
            <returns>
            A handle that identifies the waveform.
            </returns>
            <remarks>
            The floating-point data must be between -1.0 and +1.0.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.CreateChannelWaveformInt16FromFile(System.String,System.String,NationalInstruments.ModularInstruments.NIFgen.ByteOrder)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="fileName"/> is invalid. <para>- or -</para> The file specified by <paramref name="fileName"/> cannot be opened. <para>- or -</para> 
            The value for <paramref name="byteOrder"/> is invalid.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value for <paramref name="fileName"/> is null.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:02:40 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Ivi#Fgen#IIviFgenArbitraryWaveform#CreateChannelWaveform``1(System.String,Ivi.Driver.IWaveform{``0})">
            <summary>
            Creates a channel-specific waveform and returns a handle to it. The handle is
            used by the Configure, Clear, and IIviFgenArbitrarySequence.Create methods.
            </summary>
            <typeparam name="T">Specifies the type of the data in the waveform parameter.</typeparam>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="waveform">
            A waveform object that implements IWaveform. The waveform array must have at
            least as many elements as the value in the Size parameter. The waveform's elements
            must be between -1.00 and +1.00 (after scaling, for integers).
            </param>
            <returns>
            Returns the handle that identifies the new arbitrary waveform.
            </returns>
            <exclude/>
            <lastupdated>2/1/2017 2:40:54 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SetNextWritePosition(System.String,System.Int32,NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition,System.Int32)">
            <summary>
            Sets the position in the waveform at which data is written during the next write.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="handle">The handle of the arbitrary waveform to use.</param>
            <param name="relativeTo">The reference position in the waveform.</param>
            <param name="offset">The offset from the <paramref name="relativeTo"/> parameter at which to start loading the data into the waveform.</param>
            <remarks>
            This method allows you to write to arbitrary locations within the waveform. These settings apply only to the
            next waveform specified by <paramref name="handle"/>. Subsequent writes to that waveform begin where the last write left off, unless
            this method is called again.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SetNextWritePosition(System.String,System.Int32,NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">The value for <paramref name="handle"/> is invalid.</exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:05:26 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write(System.String,System.Int32,System.Int16[])">
            <summary>
            Writes binary data to a waveform in onboard memory.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="handle">The handle of the arbitrary waveform to use.</param>
            <param name="waveform">The array of data you want to load into the waveform.</param>
            <remarks>
            If streaming is enabled, you can write more data than the allocated waveform size in onboard memory.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write(System.String,System.Int32,System.Int16[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waveform"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
             The value for <paramref name="handle"/> is invalid. <para>- or -</para> The number of samples in <paramref name="waveform"/> is invalid. 
            </exception>
            <exception cref="T:System.OverflowException">You cannot write data outside of the boundaries of your waveform.</exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:20:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write(System.String,System.Int32,NationalInstruments.ComplexDouble[])">
            <summary>
            Writes complex data to a waveform in onboard memory.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="handle">The handle of the arbitrary waveform to use.</param>
            <param name="waveform">The array of data you want to load into the waveform.</param>
            <remarks>
            If streaming is enabled, you can write more data than the allocated waveform size in onboard memory.
            OSP must be enabled by calling  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>  
            and the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> must be set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>
            using  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> 
            to use this method.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write(System.String,System.Int32,System.Int16[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waveform"/> is null.</exception>
            <exception cref="T:System.ArgumentException"> The value for <paramref name="handle"/> is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">
            OSP was not enabled.<para>- or -</para>
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/> was not set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>. 
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:21:56 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write(System.String,System.Int32,NationalInstruments.ComplexInt16[])">
            <summary>
            Writes complex data to a waveform in onboard memory.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="handle">The handle of the arbitrary waveform to use.</param>
            <param name="waveform">The array of data you want to load into the waveform.</param>
            <remarks>
            If streaming is enabled, you can write more data than the allocated waveform size in onboard memory.
            In order to allocate memory to use this method, you must call <seealso cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Allocate(System.String,System.Int32)" crefType="PartiallyQualified"/>.
            OSP must be enabled by calling  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/>  
            and the  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/>
             must be set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>
            using  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOnboardSignalProcessing.SetDataProcessingMode(System.String,NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode)" crefType="PartiallyQualified"/> 
            to use this method.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write(System.String,System.Int32,System.Int16[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waveform"/> is null.</exception>
            <exception cref="T:System.ArgumentException"> The value for <paramref name="handle"/> is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">
            OSP was not enabled.<para>- or -</para><see cref="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode"/>  was not set to <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex" crefType="PartiallyQualified"/>. 
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:24:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write(System.String,System.Int32,System.Double[])">
            <summary>
            Writes data to a waveform in onboard memory.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="handle">The handle of the arbitrary waveform to use.</param>
            <param name="waveform">The array of data you want to load into the waveform.</param>
            <remarks>
            If streaming is enabled, you can write more data than the allocated waveform size in onboard memory.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write(System.String,System.Int32,System.Int16[])" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waveform"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">A sample in <paramref name="waveform"/> was out of range.</exception>
            <exception cref="T:System.ArgumentException">
             The value for <paramref name="handle"/> is invalid. <para>- or -</para>The number of samples in <paramref name="waveform"/> is invalid. 
            </exception>
            <exception cref="T:System.OverflowException">You cannot write data outside of the boundaries of your waveform.</exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">The value for <paramref name="channelName"/> is unknown.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:25:04 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write``1(System.String,System.Int32,NationalInstruments.AnalogWaveform{``0})">
            <summary>
            Writes data to a waveform in onboard memory.
            </summary>
            <typeparam name="T">The type of the data in the waveform parameter.</typeparam>
            <param name="channelName">The channel to use.</param>
            <param name="handle">The handle of the arbitrary waveform to use.</param>
            <param name="waveform">The waveform you want to use for the new arbitrary waveform.</param>
            <remarks>
            If streaming is enabled, you can write more data than the allocated waveform size in onboard memory.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Write``1(System.String,System.Int32,NationalInstruments.AnalogWaveform{``0})" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:26:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.GetHandle(System.String)">
            <summary>
            Returns the handle representing which arbitrary waveform the signal generator produces.
            </summary>
            <param name="channelName">The channel name of the desired arbitrary waveform handle to return.</param>
            <returns>The handle representing which arbitrary waveform the signal generator produces.</returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.GetHandle(System.String)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
             The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:03:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SetHandle(System.String,System.Int32)">
            <summary>
            Sets which arbitrary waveform the signal generator produces.
            </summary>
            <param name="channelName">The channel to use.</param>
            <param name="handle">The handle representing which arbitrary waveform the signal generator produces.</param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.SetHandle(System.String,System.Int32)" crefType="PartiallyQualified"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is invalid. <para>- or -</para>The value for <paramref name="channelName"/> is unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 2:04:33 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Ivi#Fgen#IIviFgenArbitraryWaveform#CreateChannelWaveform(System.String,System.Int32[])">
            <summary>
            Creates a channel-specific waveform and returns a handle to it. The handle is
            used by the Configure, Clear, and IIviFgenArbitrarySequence.Create methods.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="waveform">
            32-bit binary waveform data. If the arbitrary waveform generator supports formats
            less than 32 bits, call the BinaryAlignment property to determine whether to
            left or right justify the data before passing it to this call.
            </param>
            <returns>
            Returns the handle that identifies the new arbitrary waveform.
            </returns>
            <exclude/>
            <lastupdated>2/1/2017 2:40:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Ivi#Fgen#IIviFgenArbitraryWaveform#GetFrequency(System.String)">
            <summary>
            Gets the rate at which an entire arbitrary waveform is generated. The units are
            in Hertz.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            The rate at which an entire arbitrary waveform is generated. The units are in
            Hertz.
            </returns>
            <exclude/>
            <lastupdated>2/1/2017 2:40:59 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitraryWaveform.Ivi#Fgen#IIviFgenArbitraryWaveform#SetFrequency(System.String,System.Double)">
            <summary>
            Sets the rate at which an entire arbitrary waveform is generated. The units are
            in Hertz.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="frequency">
            The rate at which an entire arbitrary waveform is generated. The units are in
            Hertz.
            </param>
            <exclude/>
            <lastupdated>2/1/2017 2:41:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenTiming">
            <summary>
            Provides properties to configure various clocks.
            </summary>
            <remarks>
            Use this class to access the sub-objects for the various clocks, such as the
            sample clock, sample clock timebase, and reference clock.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Timing"/>.
            </para></remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/13/2017 10:28:31 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.SampleClock">
            <summary>
            Gets  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClock"/> object containing the configuration for a sample clock.
            </summary>
            <value>
            The object containing the configuration for a sample clock.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.SampleClock" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>1/10/2017 2:32:57 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.SampleClockTimebase">
            <summary>
            Gets <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenSampleClockTimebase"/> object containing the configuration for a sample clock timebase.
            </summary>
            <value>
            The object containing the configuration for a sample clock timebase.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.SampleClockTimebase" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>1/10/2017 2:33:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.ReferenceClock">
            <summary>
            Gets <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenReferenceClock"/> object containing the configuration for a reference clock.
            </summary>
            <value>
            The object containing the configuration for a reference lock.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTiming.ReferenceClock" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>1/10/2017 2:32:28 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger">
            <summary>
            Provides properties and methods to create and configure start triggers.
            </summary>
            <remarks>
            Use this class to configure start triggers. First set the type of start trigger
            you would like to use by setting
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.TriggerType"/>.
            Then depending on the type of start trigger configured, use
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.DigitalEdge"/>
            or
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.SoftwareEdge"/>
            sub-objects to further configure you start trigger.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Start"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 1:20:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.DigitalEdge">
            <summary>
            Gets a <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger"/> object containing functionality for configuring digital edge start trigger.
            </summary>
            <value>The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDigitalEdgeStartTrigger"/> object containing functionality for configuring digital edge start trigger.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.DigitalEdge" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>1/10/2017 2:42:56 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.OutputTerminal">
            <summary>
            Gets or sets a value indicating the destination terminal for exporting the start trigger.
            </summary>
            <value>
            The destination terminal for exporting the start trigger.
            </value>
            <remarks>
            For a list of the terminals available on your device, refer to the <format type="italics">Routes</format> topic for your device or to the <format type="italics">Routes</format> topic for your device or to the <format type="bold">Device Routes</format> tab in MAX.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.OutputTerminal" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.SoftwareEdge">
            <summary>
            Gets a <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger"/> object containing functionality for configuring software edge start trigger.
            </summary>
            <value>The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenSoftwareEdgeStartTrigger"/> object containing functionality for configuring software edge start trigger.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.SoftwareEdge" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>1/10/2017 2:43:03 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.TriggerType">
            <summary>
            Gets or sets a value indicating the type of start trigger you want to use.
            </summary>
            <value>
            The type of start trigger you want to use.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.TriggerType" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:47:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Disable">
            <summary>
            Disables the Start trigger.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Disable" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/17/2017 12:11:26 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#Configure(System.String,System.String,Ivi.Fgen.TriggerSlope)">
            <summary>
            Configure the start trigger properties.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="source">
            The source of the start trigger.
            </param>
            <param name="slope">
            The slope of the trigger that starts the generator.
            </param>
            <exclude/>
            <lastupdated>1/4/2017 3:12:48 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#GetBurstCount(System.String)">
            <summary>
            Gets the number of waveform cycles that the function generator produces after
            it receives a trigger.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            The number of waveform cycles that the function generator produces after it receives
            a trigger.
            </returns>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#GetDelay(System.String)">
            <summary>
            Get an additional length of time to delay from the start trigger to the first
            point in the waveform generation.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            An additional length of time to delay from the start trigger to the first point
            in the waveform generation.
            </returns>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#GetSlope(System.String)">
            <summary>
            Get the slope of the trigger that starts the generator.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            The slope of the trigger that starts the generator.
            </returns>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#GetSource(System.String)">
            <summary>
            Get the source of the start trigger. [Refer to the instrument driver documentation
            for valid values, which may include one or more of the standard values defined
            in Ivi.Driver.TriggerSource.]
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            The source of the start trigger.
            </returns>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#GetThreshold(System.String)">
            <summary>
            Get the voltage threshold for the start trigger. The units are volts.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            The voltage threshold for the start trigger. The units are volts.
            </returns>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#SendSoftwareTrigger">
            <summary>
            Sends a software trigger, which will cause the function generator to generate
            output.
            </summary>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#SetBurstCount(System.String,System.Int32)">
            <summary>
            Sets the number of waveform cycles that the function generator produces after
            it receives a trigger.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="burstCount">
            The number of waveform cycles that the function generator produces after it receives
            a trigger.
            </param>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#SetDelay(System.String,Ivi.Driver.PrecisionTimeSpan)">
            <summary>
            Set an additional length of time to delay from the start trigger to the first
            point in the waveform generation.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="delay">
            An additional length of time to delay from the start trigger to the first point
            in the waveform generation.
            </param>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#SetSlope(System.String,Ivi.Fgen.TriggerSlope)">
            <summary>
            Set the slope of the trigger that starts the generator.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="slope">
            The slope of the trigger that starts the generator.
            </param>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#SetSource(System.String,System.String)">
            <summary>
            Set the source of the start trigger. [Refer to the instrument driver documentation
            for valid values, which may include one or more of the standard values defined
            in Ivi.Driver.TriggerSource.]
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="source">
            The source of the start trigger.
            </param>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger.Ivi#Fgen#IIviFgenTriggerStart#SetThreshold(System.String,System.Double)">
            <summary>
            Set the voltage threshold for the start trigger. The units are volts.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="threshold">
            The voltage threshold for the start trigger. The units are volts.
            </param>
            <exclude/>
            <lastupdated>1/4/2017 3:12:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.HardwareState">
            <summary>
            The hardware state of the signal generator.
            </summary>
            <lastupdated>2/21/2017 3:31:36 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.HardwareState.Idle">
            <summary>
            The device is in the Idle state.
            </summary>
            <lastupdated>2/21/2017 3:32:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.HardwareState.WaitingForStartTrigger">
            <summary>
            The device is waiting for the start trigger.
            </summary>
            <lastupdated>2/21/2017 3:33:13 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.HardwareState.Running">
            <summary>
            The device is in the Running state.
            </summary>
            <lastupdated>2/21/2017 3:32:43 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.HardwareState.Done">
            <summary>
            The generation has completed successfully. 
            </summary>
            <lastupdated>2/21/2017 3:32:00 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.HardwareState.HardwareError">
            <summary>
             There is a hardware error.
            </summary>
            <lastupdated>2/21/2017 3:32:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger">
            <summary>
            Provides properties and methods to configure various triggers.
            </summary>
            <remarks>
            Use this class to access sub-objects for the various triggers,
            such as the script and start triggers.
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Trigger"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 1:19:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Script">
            <summary>
            Gets a <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger"/> object that configures script triggers.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenScriptTrigger"/> object that configures script triggers.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Script" crefType="Unqualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:35:29 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Start">
            <summary>
            Gets a <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger"/> object that configures start triggers.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenStartTrigger"/> object that configures start triggers.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Start" crefType="Unqualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:35:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Ivi#Fgen#IIviFgenTrigger#Advance">
            <summary>
            Gets a reference to the IIviFgenTriggerAdvance interface.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:41:11 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Ivi#Fgen#IIviFgenTrigger#Hold">
            <summary>
            Gets a reference to the IIviFgenTriggerHold interface.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:41:17 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Ivi#Fgen#IIviFgenTrigger#InternalRate">
            <summary>
            Gets or sets the rate at which the function generator's internal trigger source produces a
            trigger, in triggers per second.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:41:23 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Ivi#Fgen#IIviFgenTrigger#Resume">
            <summary>
            Gets a reference to the IIviFgenTriggerResume interface.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:41:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Ivi#Fgen#IIviFgenTrigger#Start">
            <summary>
            Gets a reference to the IIviFgenTriggerStart interface.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:41:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.Ivi#Fgen#IIviFgenTrigger#Stop">
            <summary>
            Gets a reference to the IIviFgenTriggerStop interface.
            </summary>
            <exclude/>
            <lastupdated>2/1/2017 2:41:36 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.GetTriggerMode(System.String)">
            <summary>
            Gets the trigger mode for the signal generator.
            </summary>
            <param name="channelName">
            The channel name for which you want to get the trigger mode.
            </param>
            <returns>
            The trigger mode for the signal generator.
            </returns>
            <remarks>
            <para>
            Refer to <see href="javascript:LaunchFgenConcept('fTriggerModes.html');">Trigger Modes</see> 
                 in the
                <format type="italics">NI Signal Generators Help</format> for descriptions of the 
            specific behavior for supported trigger modes.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.GetTriggerMode(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error. 
            </exception>
            <lastupdated>2/21/2017 2:38:42 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.SetTriggerMode(System.String,NationalInstruments.ModularInstruments.NIFgen.TriggerMode)">
            <summary>
            Sets the trigger mode for the signal generator.
            </summary>
            <param name="channelName">
            The channel name for which you want to set the trigger mode.
            </param>
            <param name="triggerMode">
            The trigger mode to set.
            </param>
            <remarks>
            <para>
            Refer to <see href="javascript:LaunchFgenConcept('fTriggerModes.html');">Trigger Modes</see> 
                 in the
                <format type="italics">NI Signal Generators Help</format> for descriptions of the specific behavior 
            for supported trigger modes.
            </para>
            <note type="note">
            The signal generator must not be in the generating state when you change this property. To change the device configuration, 
            call  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="PartiallyQualified"/> or wait 
            for the generation to complete. 
            In <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList" crefType="PartiallyQualified"/> output mode, 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Stepped" crefType="PartiallyQualified"/> trigger mode is the 
            same as <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Burst" crefType="PartiallyQualified"/> trigger mode.  
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger.SetTriggerMode(System.String,NationalInstruments.ModularInstruments.NIFgen.TriggerMode)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            <para>- or -</para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="triggerMode"/>   is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error. 
            </exception>
            <lastupdated>3/11/2017 11:49:04 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenHandle">
            <summary>
            Represents a NIFgen handle
            </summary>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenHandle.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenHandle"/> class.
            </summary>
            <param name="handle">specifies a valid handle.</param>
            <param name="ownsHandle">
            specifies whether the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenHandle"/> owns underlying handle. This determines whether or not the
            handle will be released when this object is disposed.
            </param>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenHandle.IsInvalid">
            <summary>
            Gets a value indicating whether handle is invalid.
            </summary>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenHandle.ReleaseHandle">
            <summary>
            Release the handle and associated resources
            </summary>
            <returns>Value indicating releasing resource was successful.</returns>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenNativeMethods">
            <summary>
            Header: //Measurements/Sources/fgenHeaders/export/19.1/19.1.0f0/includes/fgenHeaders/niFgen.h
            </summary>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId">
            <summary>
            Header: //Measurements/Sources/fgenHeaders/export/19.1/19.1.0f0/includes/fgenHeaders/niFgen.h
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OutputMode">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OUTPUT_MODE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OutputEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OUTPUT_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalGain">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_GAIN
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.AnalogPath">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ANALOG_PATH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.LoadImpedance">
            <summary>
            C Header Attribute: NIFGEN_ATTR_LOAD_IMPEDANCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OutputImpedance">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OUTPUT_IMPEDANCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.TerminalConfiguration">
            <summary>
            C Header Attribute: NIFGEN_ATTR_TERMINAL_CONFIGURATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.CommonModeOffset">
            <summary>
            C Header Attribute: NIFGEN_ATTR_COMMON_MODE_OFFSET
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ChannelDelay">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CHANNEL_DELAY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.AbsoluteDelay">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ABSOLUTE_DELAY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.AnalogFilterEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ANALOG_FILTER_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalFilterEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_FILTER_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalFilterInterpolationFactor">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_FILTER_INTERPOLATION_FACTOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FlatnessCorrectionEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FLATNESS_CORRECTION_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.AnalogDataMask">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ANALOG_DATA_MASK
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.AnalogStaticValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ANALOG_STATIC_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalDataMask">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_DATA_MASK
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalStaticValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_STATIC_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalPatternEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_PATTERN_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.AuxPowerEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_AUX_POWER_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IdleBehavior">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IDLE_BEHAVIOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IdleValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IDLE_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.WaitBehavior">
            <summary>
            C Header Attribute: NIFGEN_ATTR_WAIT_BEHAVIOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.WaitValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_WAIT_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ArbGain">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ARB_GAIN
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ArbOffset">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ARB_OFFSET
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.WaveformQuantum">
            <summary>
            C Header Attribute: NIFGEN_ATTR_WAVEFORM_QUANTUM
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxNumWaveforms">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_NUM_WAVEFORMS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MinWaveformSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MIN_WAVEFORM_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxWaveformSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_WAVEFORM_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ArbWaveformHandle">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ARB_WAVEFORM_HANDLE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ArbMarkerPosition">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ARB_MARKER_POSITION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ArbRepeatCount">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ARB_REPEAT_COUNT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ArbSequenceHandle">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ARB_SEQUENCE_HANDLE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxNumSequences">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_NUM_SEQUENCES
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MinSequenceLength">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MIN_SEQUENCE_LENGTH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxSequenceLength">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_SEQUENCE_LENGTH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxLoopCount">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_LOOP_COUNT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ScriptToGenerate">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SCRIPT_TO_GENERATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FileTransferBlockSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FILE_TRANSFER_BLOCK_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DataTransferBlockSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DATA_TRANSFER_BLOCK_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DataTransferMaximumBandwidth">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DATA_TRANSFER_MAXIMUM_BANDWIDTH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DirectDmaEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIRECT_DMA_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DirectDmaWindowSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIRECT_DMA_WINDOW_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DirectDmaWindowAddress">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIRECT_DMA_WINDOW_ADDRESS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StreamingWaveformName">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STREAMING_WAVEFORM_NAME
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StreamingWaveformHandle">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STREAMING_WAVEFORM_HANDLE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StreamingSpaceAvailableInWaveform">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STREAMING_SPACE_AVAILABLE_IN_WAVEFORM
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StreamingWriteTimeout">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STREAMING_WRITE_TIMEOUT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DataTransferPreferredPacketSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DATA_TRANSFER_PREFERRED_PACKET_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DataTransferMaximumInFlightReads">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DATA_TRANSFER_MAXIMUM_IN_FLIGHT_READS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.PciDmaOptimizationsEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_PCI_DMA_OPTIMIZATIONS_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspIqRate">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_IQ_RATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspDataProcessingMode">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_DATA_PROCESSING_MODE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspMode">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_MODE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspFrequencyShift">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_FREQUENCY_SHIFT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspCarrierEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_CARRIER_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspCarrierFrequency">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_CARRIER_FREQUENCY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspCarrierPhaseI">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_CARRIER_PHASE_I
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspCarrierPhaseQ">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_CARRIER_PHASE_Q
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspCompensateForFilterGroupDelay">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_COMPENSATE_FOR_FILTER_GROUP_DELAY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspFirFilterType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_FIR_FILTER_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspFirFilterEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_FIR_FILTER_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspFirFilterInterpolation">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_FIR_FILTER_INTERPOLATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspCicFilterEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_CIC_FILTER_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspCicFilterInterpolation">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_CIC_FILTER_INTERPOLATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspFirFilterRootRaisedCosineAlpha">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_FIR_FILTER_ROOT_RAISED_COSINE_ALPHA
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspFirFilterRaisedCosineAlpha">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_FIR_FILTER_RAISED_COSINE_ALPHA
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspFirFilterFlatPassband">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_FIR_FILTER_FLAT_PASSBAND
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspFirFilterGaussianBt">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_FIR_FILTER_GAUSSIAN_BT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspCicFilterGain">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_CIC_FILTER_GAIN
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspPreFilterGainI">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_PRE_FILTER_GAIN_I
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspPreFilterGainQ">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_PRE_FILTER_GAIN_Q
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspPreFilterOffsetI">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_PRE_FILTER_OFFSET_I
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspPreFilterOffsetQ">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_PRE_FILTER_OFFSET_Q
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspOverflowErrorReporting">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_OVERFLOW_ERROR_REPORTING
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspOverflowStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_OVERFLOW_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PDestinationChannels">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_DESTINATION_CHANNELS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PEndpointSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_ENDPOINT_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PSpaceAvailableInEndpoint">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_SPACE_AVAILABLE_IN_ENDPOINT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PMostSpaceAvailableInEndpoint">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_MOST_SPACE_AVAILABLE_IN_ENDPOINT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PEndpointCount">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_ENDPOINT_COUNT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PDataTransferPermissionInterval">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_INTERVAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PDataTransferPermissionInitialCredits">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_INITIAL_CREDITS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PManualConfigurationEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PDataTransferPermissionAddress">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_ADDRESS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PDataTransferPermissionAddressType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_ADDRESS_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PEndpointWindowAddress">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_ADDRESS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PEndpointWindowAddressType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_ADDRESS_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PEndpointWindowSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PEndpointFullnessStartTriggerLevel">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_ENDPOINT_FULLNESS_START_TRIGGER_LEVEL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PDoneNotificationAddress">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_DONE_NOTIFICATION_ADDRESS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PDoneNotificationAddressType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_DONE_NOTIFICATION_ADDRESS_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.P2PDoneNotificationValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_P2P_DONE_NOTIFICATION_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FuncWaveform">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FUNC_WAVEFORM
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FuncAmplitude">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FUNC_AMPLITUDE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FuncDcOffset">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FUNC_DC_OFFSET
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FuncStartPhase">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FUNC_START_PHASE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FuncDutyCycleHigh">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FUNC_DUTY_CYCLE_HIGH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SyncDutyCycleHigh">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SYNC_DUTY_CYCLE_HIGH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SyncOutOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SYNC_OUT_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FuncFrequency">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FUNC_FREQUENCY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FuncBufferSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FUNC_BUFFER_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FuncMaxBufferSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FUNC_MAX_BUFFER_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FreqListHandle">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FREQ_LIST_HANDLE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxNumFreqLists">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_NUM_FREQ_LISTS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MinFreqListLength">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MIN_FREQ_LIST_LENGTH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxFreqListLength">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_FREQ_LIST_LENGTH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MinFreqListDuration">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MIN_FREQ_LIST_DURATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxFreqListDuration">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_FREQ_LIST_DURATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FreqListDurationQuantum">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FREQ_LIST_DURATION_QUANTUM
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ReferenceClockSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_REFERENCE_CLOCK_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.RefClockFrequency">
            <summary>
            C Header Attribute: NIFGEN_ATTR_REF_CLOCK_FREQUENCY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedReferenceClockOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_REFERENCE_CLOCK_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedOnboardReferenceClockOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_ONBOARD_REFERENCE_CLOCK_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ArbSampleRate">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ARB_SAMPLE_RATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ClockMode">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CLOCK_MODE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SampleClockSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SAMPLE_CLOCK_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedSampleClockOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedSampleClockDivisor">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_DIVISOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SampleClockTimebaseSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SAMPLE_CLOCK_TIMEBASE_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SampleClockTimebaseRate">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SAMPLE_CLOCK_TIMEBASE_RATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedSampleClockTimebaseOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_TIMEBASE_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedSampleClockTimebaseDivisor">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_TIMEBASE_DIVISOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExternalSampleClockMultiplier">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXTERNAL_SAMPLE_CLOCK_MULTIPLIER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SampleClockAbsoluteDelay">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SAMPLE_CLOCK_ABSOLUTE_DELAY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OscillatorPhaseDacValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSCILLATOR_PHASE_DAC_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExternalClockDelayBinaryValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXTERNAL_CLOCK_DELAY_BINARY_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventOutputBehavior">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_OUTPUT_BEHAVIOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventPulsePolarity">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_PULSE_POLARITY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventPulseWidth">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_PULSE_WIDTH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventPulseWidthUnits">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_PULSE_WIDTH_UNITS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventToggleInitialState">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_TOGGLE_INITIAL_STATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventDelay">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_DELAY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventDelayUnits">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_DELAY_UNITS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.AllMarkerEventsLiveStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ALL_MARKER_EVENTS_LIVE_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventLiveStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_LIVE_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.AllMarkerEventsLatchedStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ALL_MARKER_EVENTS_LATCHED_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventLatchedStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENT_LATCHED_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DataMarkerEventDataBitNumber">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DATA_MARKER_EVENT_DATA_BIT_NUMBER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DataMarkerEventLevelPolarity">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DATA_MARKER_EVENT_LEVEL_POLARITY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DataMarkerEventOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DATA_MARKER_EVENT_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ReadyForStartEventOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_READY_FOR_START_EVENT_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ReadyForStartEventLevelActiveLevel">
            <summary>
            C Header Attribute: NIFGEN_ATTR_READY_FOR_START_EVENT_LEVEL_ACTIVE_LEVEL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ReadyForStartEventLiveStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_READY_FOR_START_EVENT_LIVE_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventOutputBehavior">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_OUTPUT_BEHAVIOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventLevelActiveLevel">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_LEVEL_ACTIVE_LEVEL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventPulsePolarity">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_PULSE_POLARITY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventPulseWidthUnits">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_PULSE_WIDTH_UNITS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventPulseWidth">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_PULSE_WIDTH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventDelay">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_DELAY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventDelayUnits">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_DELAY_UNITS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventLatchedStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_LATCHED_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventOutputBehavior">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_OUTPUT_BEHAVIOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventLevelActiveLevel">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_LEVEL_ACTIVE_LEVEL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventPulsePolarity">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_PULSE_POLARITY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventPulseWidthUnits">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_PULSE_WIDTH_UNITS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventPulseWidth">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_PULSE_WIDTH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventDelay">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_DELAY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventDelayUnits">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_DELAY_UNITS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventLatchedStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_LATCHED_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.TriggerMode">
            <summary>
            C Header Attribute: NIFGEN_ATTR_TRIGGER_MODE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.BurstCount">
            <summary>
            C Header Attribute: NIFGEN_ATTR_BURST_COUNT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartTriggerType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_START_TRIGGER_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalEdgeStartTriggerSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_EDGE_START_TRIGGER_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalEdgeStartTriggerEdge">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_EDGE_START_TRIGGER_EDGE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedStartTriggerOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_START_TRIGGER_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ScriptTriggerType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SCRIPT_TRIGGER_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalEdgeScriptTriggerSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_EDGE_SCRIPT_TRIGGER_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalEdgeScriptTriggerEdge">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_EDGE_SCRIPT_TRIGGER_EDGE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalLevelScriptTriggerSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_LEVEL_SCRIPT_TRIGGER_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalLevelScriptTriggerActiveLevel">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_LEVEL_SCRIPT_TRIGGER_ACTIVE_LEVEL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedScriptTriggerOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_SCRIPT_TRIGGER_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.BusType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_BUS_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MemorySize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MEMORY_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SerialNumber">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SERIAL_NUMBER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MarkerEventsCount">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MARKER_EVENTS_COUNT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DataMarkerEventsCount">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DATA_MARKER_EVENTS_COUNT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ScriptTriggersCount">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SCRIPT_TRIGGERS_COUNT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.VideoWaveformType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_VIDEO_WAVEFORM_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FpgaBitfilePath">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FPGA_BITFILE_PATH
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.FilterCorrectionFrequency">
            <summary>
            C Header Attribute: NIFGEN_ATTR_FILTER_CORRECTION_FREQUENCY
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.TriggerSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_TRIGGER_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.Synchronization">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SYNCHRONIZATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IdQueryResponse">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ID_QUERY_RESPONSE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.GainDacValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_GAIN_DAC_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OffsetDacValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OFFSET_DAC_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OscillatorFreqDacValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSCILLATOR_FREQ_DAC_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.CalAdcInput">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CAL_ADC_INPUT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.PreAmplifierAttenuation">
            <summary>
            C Header Attribute: NIFGEN_ATTR_PRE_AMPLIFIER_ATTENUATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.PostAmplifierAttenuation">
            <summary>
            C Header Attribute: NIFGEN_ATTR_POST_AMPLIFIER_ATTENUATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.Cache">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CACHE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.RangeCheck">
            <summary>
            C Header Attribute: NIFGEN_ATTR_RANGE_CHECK
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.QueryInstrumentStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_QUERY_INSTRUMENT_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.RecordCoercions">
            <summary>
            C Header Attribute: NIFGEN_ATTR_RECORD_COERCIONS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.Simulate">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SIMULATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.InterchangeCheck">
            <summary>
            C Header Attribute: NIFGEN_ATTR_INTERCHANGE_CHECK
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificDriverDescription">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SPECIFIC_DRIVER_DESCRIPTION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificDriverPrefix">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SPECIFIC_DRIVER_PREFIX
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificDriverVendor">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SPECIFIC_DRIVER_VENDOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificDriverRevision">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SPECIFIC_DRIVER_REVISION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificDriverClassSpecMajorVersion">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificDriverClassSpecMinorVersion">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SupportedInstrumentModels">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SUPPORTED_INSTRUMENT_MODELS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.GroupCapabilities">
            <summary>
            C Header Attribute: NIFGEN_ATTR_GROUP_CAPABILITIES
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ChannelCount">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CHANNEL_COUNT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.InstrumentManufacturer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_INSTRUMENT_MANUFACTURER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.InstrumentModel">
            <summary>
            C Header Attribute: NIFGEN_ATTR_INSTRUMENT_MODEL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.InstrumentFirmwareRevision">
            <summary>
            C Header Attribute: NIFGEN_ATTR_INSTRUMENT_FIRMWARE_REVISION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ModuleRevision">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MODULE_REVISION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IoResourceDescriptor">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IO_RESOURCE_DESCRIPTOR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.LogicalName">
            <summary>
            C Header Attribute: NIFGEN_ATTR_LOGICAL_NAME
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DriverSetup">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DRIVER_SETUP
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ProductCode">
            <summary>
            C Header Attribute: NIFGEN_ATTR_PRODUCT_CODE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MemoryAvailableSize">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MEMORY_AVAILABLE_SIZE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IsCalibrationSession">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IS_CALIBRATION_SESSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DeviceGuidPtr">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DEVICE_GUID_PTR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.TempSensorLocation">
            <summary>
            C Header Attribute: NIFGEN_ATTR_TEMP_SENSOR_LOCATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenCommonPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_COMMON_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenArbPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_ARB_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenArbSeqPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_ARB_SEQ_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenStdFuncPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_STD_FUNC_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenFreqListPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_FREQ_LIST_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenTriggerRoutingPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_TRIGGER_ROUTING_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenCalibrationPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_CALIBRATION_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenOspPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_OSP_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenScriptingPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_SCRIPTING_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.BytesPerSample">
            <summary>
            C Header Attribute: NIFGEN_ATTR_BYTES_PER_SAMPLE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SyncDutyCycleHighMeasurement">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SYNC_DUTY_CYCLE_HIGH_MEASUREMENT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SyncComparatorLevelDacValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_SYNC_COMPARATOR_LEVEL_DAC_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DefaultChannelString">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DEFAULT_CHANNEL_STRING
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ChannelString">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CHANNEL_STRING
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenConfigListPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_CONFIG_LIST_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IfgenP2PPointer">
            <summary>
            C Header Attribute: NIFGEN_ATTR_IFGEN_P2P_POINTER
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.RemoteSessionManagerPtr">
            <summary>
            C Header Attribute: NIFGEN_ATTR_REMOTE_SESSION_MANAGER_PTR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.PrivatePluginBase">
            <summary>
            C Header Attribute: NIFGEN_ATTR_PRIVATE_PLUGIN_BASE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DvlSessionPtr">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DVL_SESSION_PTR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.PauseTriggerType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_PAUSE_TRIGGER_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalLevelPauseTriggerSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_LEVEL_PAUSE_TRIGGER_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalLevelPauseTriggerWhen">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_LEVEL_PAUSE_TRIGGER_WHEN
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedPauseTriggerOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_PAUSE_TRIGGER_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DoneEventLiveStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DONE_EVENT_LIVE_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.StartedEventLiveStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_STARTED_EVENT_LIVE_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ReadyForStartEventLatchedStatus">
            <summary>
            C Header Attribute: NIFGEN_ATTR_READY_FOR_START_EVENT_LATCHED_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspIqSwapEnabled">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_IQ_SWAP_ENABLED
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ArbGainSettlingTime">
            <summary>
            C Header Attribute: NIFGEN_ATTR_ARB_GAIN_SETTLING_TIME
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspPhaseOffset">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OSP_PHASE_OFFSET
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OverflowErrorReporting">
            <summary>
            C Header Attribute: NIFGEN_ATTR_OVERFLOW_ERROR_REPORTING
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId._5450OscillatorPhaseDacValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_5450_OSCILLATOR_PHASE_DAC_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ConfigurationTriggerType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CONFIGURATION_TRIGGER_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalEdgeConfigurationTriggerSource">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_EDGE_CONFIGURATION_TRIGGER_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DigitalEdgeConfigurationTriggerEdge">
            <summary>
            C Header Attribute: NIFGEN_ATTR_DIGITAL_EDGE_CONFIGURATION_TRIGGER_EDGE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.MaxReconfigurationTimeInMicroSeconds">
            <summary>
            C Header Attribute: NIFGEN_ATTR_MAX_RECONFIGURATION_TIME_IN_MICRO_SECONDS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ExportedConfigurationTriggerOutputTerminal">
            <summary>
            C Header Attribute: NIFGEN_ATTR_EXPORTED_CONFIGURATION_TRIGGER_OUTPUT_TERMINAL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.CalReport">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CAL_REPORT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.CalOptions">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CAL_OPTIONS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.CalAdcChannel">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CAL_ADC_CHANNEL
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.CalType">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CAL_TYPE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ChannelDelayBinaryValue">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CHANNEL_DELAY_BINARY_VALUE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ConfigListRepeat">
            <summary>
            C Header Attribute: NIFGEN_ATTR_CONFIG_LIST_REPEAT
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.QueryInstrStatus">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_QUERY_INSTR_STATUS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DeferUpdate">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_DEFER_UPDATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ReturnDeferredValues">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_RETURN_DEFERRED_VALUES
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.PrimaryError">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_PRIMARY_ERROR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SecondaryError">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_SECONDARY_ERROR
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ErrorElaboration">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_ERROR_ELABORATION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.NumChannels">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_NUM_CHANNELS
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificPrefix">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_SPECIFIC_PREFIX
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.VisaRmSession">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_VISA_RM_SESSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.IoSession">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_IO_SESSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.EngineMajorVersion">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_ENGINE_MAJOR_VERSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.EngineMinorVersion">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_ENGINE_MINOR_VERSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DriverMajorVersion">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_DRIVER_MAJOR_VERSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificDriverMajorVersion">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.SpecificDriverMinorVersion">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_SPECIFIC_DRIVER_MINOR_VERSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DriverMinorVersion">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_DRIVER_MINOR_VERSION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DriverRevision">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_DRIVER_REVISION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.EngineRevision">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_ENGINE_REVISION
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.UpdateClockSource">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_UPDATE_CLOCK_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.ActualArbSampleRate">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_ACTUAL_ARB_SAMPLE_RATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.DaqmxTask">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_DAQMX_TASK
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OspDataRate">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_OSP_DATA_RATE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.RefClockSource">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_REF_CLOCK_SOURCE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.OperationMode">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_OPERATION_MODE
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Internal.FgenPropertyId.CycleCount">
            <summary>
            Obsolete C Header Attribute: NIFGEN_ATTR_CYCLE_COUNT
            </summary>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.LogicLevel">
            <summary>
            The logic level or state of high or low.
            </summary>
            <lastupdated>3/10/2017 12:33:42 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.LogicLevel.High">
            <summary>
            A logic level of high.
            </summary>
            <lastupdated>3/13/2017 10:40:25 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.LogicLevel.Low">
            <summary>
            A logic level of low.
            </summary>
            <lastupdated>3/13/2017 10:40:28 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode">
            <summary>
            The waveform data type.
            </summary>
            <lastupdated>3/13/2017 10:40:38 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Real">
            <summary>
            The waveform data points are real numbers (I data).
            </summary>
            <lastupdated>2/21/2017 3:35:20 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspDataProcessingMode.Complex">
            <summary>
            The waveform data points are complex numbers (I/Q data).
            </summary>
            <lastupdated>2/21/2017 3:35:14 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType">
            <summary>
            The pulse-shaping filter type for the FIR filter.
            </summary>
            <lastupdated>3/13/2017 10:40:40 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.Flat">
            <summary>
            Applies a flat filter with the pass-band value specified in <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetFlatPassband(System.String,System.Double)"/>.
            </summary>
            <lastupdated>2/21/2017 3:37:23 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.RaisedCosine">
            <summary>
            Applies a raised cosine filter with the alpha value specified 
            in <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.GetRaisedCosineAlpha(System.String)"/>.
            </summary>
            <lastupdated>2/21/2017 3:38:18 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.RootRaisedCosine">
            <summary>
            Applies a root raised cosine filter with the alpha value specified
            in <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetRootRaisedCosineAlpha(System.String,System.Double)"/>.
            </summary>
            <lastupdated>2/21/2017 3:38:44 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.Gaussian">
            <summary>
            Applies a Gaussian filter with the BT value specified in <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.SetGaussianBT(System.String,System.Double)"/>.
            </summary>
            <lastupdated>2/21/2017 3:37:56 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspFirFilterType.Custom">
            <summary>
            Applies a custom filter. If Custom is selected, you must provide 
            a set of FIR filter coefficients with <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenFirFilter.ConfigureCustomCoefficients(System.String,System.Double[])"/>.
            </summary>
            <lastupdated>2/21/2017 3:36:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.OspMode">
            <summary>
            The type of data contained in the output signal.
            </summary>
            <lastupdated>3/10/2017 12:33:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspMode.IntermediateFrequency">
            <summary>
            The OSP block generates intermediate frequency (IF) data.
            </summary>
            <lastupdated>2/21/2017 3:39:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspMode.Baseband">
            <summary>
            The OSP block generates baseband data.
            </summary>
            <lastupdated>2/21/2017 3:39:11 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.OspOverflowErrorReporting">
            <summary>
            The error reporting mode when the OSP block detects an overflow in any of its stages.
            </summary>
            <lastupdated>3/10/2017 12:34:06 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowErrorReporting.Error">
            <summary>
            NI-FGEN returns errors whenever an overflow has occurred in the OSP block.
            </summary>
            <lastupdated>2/21/2017 3:39:56 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowErrorReporting.Disabled">
            <summary>
            NI-FGEN does not return errors when an overflow occurs in the OSP block.
            </summary>
            <lastupdated>2/21/2017 3:39:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus">
            <summary>
            The overflow status in any stage of the OSP block.
            </summary>
            <lastupdated>3/10/2017 12:34:33 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.None">
            <summary>
            No overflow has occurred.
            </summary>
            <lastupdated>3/13/2017 10:41:02 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.PrefilterGainI">
            <summary>
            Overflow occurred in the I stream during the pre filter gain stage.
            </summary>
            <lastupdated>3/13/2017 10:41:04 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.PrefilterGainQ">
            <summary>
            Overflow occurred in the Q stream during the pre filter gain stage.
            </summary>
            <lastupdated>3/13/2017 10:41:06 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.PrefilterOffsetI">
            <summary>
            Overflow occurred in the I stream during the pre filter offset stage.
            </summary>
            <lastupdated>3/13/2017 10:41:08 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.PrefilterOffsetQ">
            <summary>
            Overflow occurred in the Q stream during the pre filter offset stage.
            </summary>
            <lastupdated>3/13/2017 10:41:13 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.FirFilterI">
            <summary>
            Overflow occurred in the I stream during the FIR filter stage.
            </summary>
            <lastupdated>3/13/2017 10:40:57 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.FirFilterQ">
            <summary>
            Overflow occurred in the Q stream during the FIR filter stage.
            </summary>
            <lastupdated>3/13/2017 10:41:00 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.CicFilterI">
            <summary>
            Overflow occurred in the I stream during the CIC filter stage.
            </summary>
            <lastupdated>3/13/2017 10:40:48 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.CicFilterQ">
            <summary>
            Overflow occurred in the Q stream during the CIC filter stage.
            </summary>
            <lastupdated>3/13/2017 10:40:50 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.ComplexData">
            <summary>
            Overflow occurred while using the numerically controller oscillator (NCO).
            </summary>
            <lastupdated>3/13/2017 10:40:52 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.CFirFilterI">
            <summary>
            Overflow occurred in the I stream during the CFIR filter stage.
            </summary>
            <lastupdated>3/13/2017 10:40:45 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.CFirFilterQ">
            <summary>
            Overflow occurred in the Q stream during the CFIR filter stage.
            </summary>
            <lastupdated>3/13/2017 10:40:46 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OspOverflowStatus.Equalizer">
            <summary>
            Overflow occurred while the data was being equalized.
            </summary>
            <lastupdated>3/13/2017 10:40:55 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.Restricted.FgenDriverDebug">
            <exclude/>
            <summary>
            Contains functions for Debug Sessions/Remote Debugging
            </summary>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.Restricted.FgenDriverDebug.RequestPrivilege(NationalInstruments.ModularInstruments.NIFgen.Restricted.PrivilegeLevel)">
            <exclude/>
            <summary>
            Requests privilege level.
            </summary>
            <param name="privilegeLevel">
            Privilege Level
            </param>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.Restricted.FgenDriverDebug.CheckWhetherAttributeWasSetByUser(System.String,System.Int32)">
            <exclude/>
            <summary>
            Check Whether Attribute Was Set By User. It returns true if the attribute was set by the user, and false if the
            attribute was not, or if an error occurs. This means there's no way to check for errors for this function.
            Really, there's no way to check for errors for this function.
            </summary>
            <returns>Whether attribute was set by user</returns>
            <param name="repeatedCapabilityName">
            The name of the repeated capability to check, usually a channel name.
            </param>
            <param name="attributeId">
            attribute id.
            </param>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.Restricted.PrivilegeLevel">
            <exclude/>
            <summary>
            The privilege level for the session
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Restricted.PrivilegeLevel.None">
            <exclude/>
            <summary>
            None internal use only.
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Restricted.PrivilegeLevel.Monitor">
            <exclude/>
            <summary>
            Monitor internal use only.
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Restricted.PrivilegeLevel.RevocableControl">
            <exclude/>
            <summary>
            RevocableControl internal use only.
            </summary>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.Restricted.PrivilegeLevel.NonRevocableControl">
            <exclude/>
            <summary>
            NonRevocableControl internal use only.
            </summary>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.SignalSource">
            <summary>
            The source of the signal to route.
            </summary>
            <lastupdated>3/13/2017 10:41:34 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.MarkerEvent">
            <summary>
            Marker event
            </summary>
            <lastupdated>2/21/2017 3:44:10 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.SyncOut">
            <summary>
            SYNC OUT signal.
            </summary>
            <lastupdated>2/21/2017 3:45:42 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.OnboardReferenceClock">
            <summary>
            The onboard 10 MHz synchronization clock (PCI only).
            </summary>
            <lastupdated>2/21/2017 3:44:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.StartTrigger">
            <summary>
            Start trigger.
            </summary>
            <lastupdated>2/21/2017 3:45:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.SampleClockTimebase">
            <summary>
            The clock from which the Sample Clock is derived.
            </summary>
            <lastupdated>3/13/2017 10:41:37 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.SampleClock">
            <summary>
            Sample clock.
            </summary>
            <lastupdated>2/21/2017 3:45:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.ReferenceClock">
            <summary>
            PLL reference clock.
            </summary>
            <lastupdated>2/21/2017 3:44:47 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.ScriptTrigger">
            <summary>
            Script trigger.
            </summary>
            <lastupdated>2/21/2017 3:45:18 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.ReadyForStartEvent">
            <summary>
            Ready for start event.
            </summary>
            <lastupdated>2/21/2017 3:44:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.StartedEvent">
            <summary>
            Started event.
            </summary>
            <lastupdated>2/21/2017 3:45:23 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.DoneEvent">
            <summary>
            Done event.
            </summary>
            <lastupdated>2/21/2017 3:44:05 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.SignalSource.DataMarkerEvent">
            <summary>
            Data marker event.
            </summary>
            <lastupdated>2/21/2017 3:43:59 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior">
            <summary>
            The output behavior of events.
            </summary>
            <lastupdated>2/21/2017 3:41:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Pulse">
            <summary>
            Triggers a pulse for a specified period of time.
            </summary>
            <lastupdated>3/13/2017 10:41:18 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Level">
            <summary>
            Shifts high or low while the event is active, depending on the active level you specify.
            </summary>
            <lastupdated>3/13/2017 10:41:15 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OutputBehavior.Toggle">
            <summary>
            Changes to high or low while the event is active, depending on the active level you specify.
            </summary>
            <lastupdated>3/13/2017 10:41:21 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.PulseWidthUnits">
            <summary>
            The units of time for a pulse width.
            </summary>
            <lastupdated>3/10/2017 12:34:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.PulseWidthUnits.SampleClockPeriods">
            <summary>
            The pulse width in sample clock periods.
            </summary>
            <lastupdated>2/21/2017 3:43:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.PulseWidthUnits.Seconds">
            <summary>
            The pulse width in seconds.
            </summary>
            <lastupdated>2/21/2017 3:43:35 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.TriggerType">
            <summary>
            The type of script trigger to use.
            </summary>
            <lastupdated>2/21/2017 9:44:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TriggerType.None">
            <summary>
            No trigger is configured. Signal generation starts immediately.
            </summary>
            <lastupdated>3/13/2017 10:42:02 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TriggerType.DigitalEdge">
            <summary>
            Operation begins when a digital edge is detected.
            </summary>
            <lastupdated>3/13/2017 10:41:56 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TriggerType.DigitalLevel">
            <summary>
            Operation begins when a digital level is detected.
            </summary>
            <lastupdated>3/13/2017 10:41:58 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TriggerType.SoftwareEdge">
            <summary>
            Operation begins when a software edge is detected.
            </summary>
            <lastupdated>3/13/2017 10:42:11 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.TriggerMode">
            <summary>
            The trigger mode for the signal generator. 
            </summary>
            <lastupdated>2/21/2017 3:49:12 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Single">
            <summary>
            Single Trigger mode.
            </summary>
            <lastupdated>2/21/2017 3:49:39 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Continuous">
            <summary>
            Continuous Trigger mode.
            </summary>
            <lastupdated>2/21/2017 3:49:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Stepped">
            <summary>
            Stepped Trigger mode.
            </summary>
            <lastupdated>2/21/2017 3:49:47 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Burst">
            <summary>
            Burst Trigger mode.
            </summary>
            <lastupdated>2/21/2017 3:49:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.WaitBehavior">
            <summary>
            The behavior of the output while the device is waiting for 
            a Script trigger or executing a wait instruction.
            </summary>
            <lastupdated>3/10/2017 12:40:39 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.WaitBehavior.HoldLastValue">
            <summary>
            The output signal remains at the last voltage generated prior to entering the Wait state.
            </summary>
            <lastupdated>3/13/2017 10:42:13 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.WaitBehavior.JumpToValue">
            <summary>
            The output signal remains at the value configured in  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetWaitValue(System.String)" crefType="Unqualified"/> attribute.
            </summary>
            <lastupdated>3/13/2017 10:42:15 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.IdleBehavior">
            <summary>
            The behavior of the output signal while in the Idle state.
            </summary>
            <lastupdated>3/10/2017 12:33:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.IdleBehavior.HoldLastValue">
            <summary>
            The output signal remains at the last voltage generated prior to entering the Idle state.
            </summary>
            <lastupdated>3/13/2017 10:40:21 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.IdleBehavior.JumpToValue">
            <summary>
            The output signal remains at the value configured in  <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetIdleValue(System.String)" crefType="Unqualified"/>.
            </summary>
            <lastupdated>2/21/2017 3:34:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen">
            <summary>
            Represents a signal generator session.
            </summary>
            <remarks>
            Use this class to configure and control your signal generator through the various sub-objects
            defined. Once your signal generator is configured, call <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration"/>
            to begin generating your signal(s).
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 1:20:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> class.
            </summary>
            <param name="resourceName">
            The resource name assigned by Measurement <entity value="amp"/> Automation Explorer (MAX) to a signal generator instrument; for example, <format type="monospace">PXI1Slot3</format>, where <format type="monospace">PXI1Slot3</format> is an instrument resource name. The <paramref name="resourceName"/> can also be a logical IVI name.
            </param>
            <param name="idQuery">
            <see langword="true"/> to verify that the instrument you initialize is supported by the NI-FGEN driver software. The NI-FGEN driver performs verification regardless of the value of this parameter.
            </param>
            <param name="reset">
            <see langword="true"/> to reset the signal generator instrument to a known state when the session is initialized.
            </param>
            <exception cref="T:System.ArgumentException">The value for <paramref name="resourceName"/> is invalid.</exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/13/2017 10:40:03 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.#ctor(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> class.
            </summary>
            <param name="resourceName">
            The resource name assigned by Measurement <entity value="amp"/> Automation Explorer (MAX) to a signal generator instrument; for example, <format type="monospace">PXI1Slot3</format>, where <format type="monospace">PXI1Slot3</format> is an instrument resource name. The <paramref name="resourceName"/> can also be a logical IVI name.
            </param>
            <param name="idQuery">
            <see langword="true"/> to verify that the instrument you initialize is supported by the NI-FGEN driver software. The NI-FGEN driver performs verification regardless of the value of this parameter.
            </param>
            <param name="reset">
            <see langword="true"/> to reset the signal generator instrument to a known state when the session is initialized.
            </param>
            <param name="optionString">
            A list of initial values of certain attributes for the session. Pass <format type="monospace">String.Empty</format> for the default behavior. Default Values: "<format type="monospace">Simulate=0,RangeCheck=1,Cache=1</format>".
            <list type="table">
            <listheader>
            <term>Device</term>
            <description>optionString Syntax
            </description>
            </listheader>
            <item>
            <term>
            NI PXI-5404
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5404;BoardType:PXI</format>
            </description>
            </item>
            <item>
            <term>
            NI PCI-5411
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5411;BoardType:PCI;MemorySize:8000000</format>
            </description>
            </item>
            <item>
            <term>
            NI PXIe-5450
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5450;Channels:0-1;BoardType:PXIe;MemorySize:8000000</format>
            </description>
            </item>
            </list>
            </param>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="resourceName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="optionString"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 3:19:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> class.
            </summary>
            <param name="resourceName">
            The resource name assigned by Measurement <entity value="amp"/> Automation Explorer (MAX) to a signal generator instrument; for example, <format type="monospace">PXI1Slot3</format>, where <format type="monospace">PXI1Slot3</format> is an instrument resource name. The <paramref name="resourceName"/> can also be a logical IVI name.
            </param>
            <param name="channelName">
            <see langword="true"/> The Channels used by the session. Default Values: "0"
            </param>
            <param name="reset">
            <see langword="true"/> to reset the signal generator instrument to a known state when the session is initialized.
            </param>
            <param name="optionString">
            A list of initial values of certain attributes for the session. Pass <format type="monospace">String.Empty</format> for the default behavior. Default Values: "<format type="monospace">Simulate=0,RangeCheck=1,Cache=1</format>".
            <list type="table">
            <listheader>
            <term>Device</term>
            <description>optionString Syntax
            </description>
            </listheader>
            <item>
            <term>
            NI PXI-5404
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5404;BoardType:PXI</format>
            </description>
            </item>
            <item>
            <term>
            NI PCI-5411
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5411;BoardType:PCI;MemorySize:8000000</format>
            </description>
            </item>
            <item>
            <term>
            NI PXIe-5450
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5450;Channels:0-1;BoardType:PXIe;MemorySize:8000000</format>
            </description>
            </item>
            </list>
            </param>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="resourceName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="optionString"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>09/04/2018 10:35:12 AM</lastupdated>
            <updatedby>omejia</updatedby>
            <approved>false</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.#ctor(System.String,System.Boolean,System.Boolean,Ivi.Driver.LockType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> class.
            </summary>
            <param name="resourceName">
            The resource name assigned by Measurement <entity value="amp"/> Automation Explorer (MAX) to a signal generator instrument; for example, <format type="monospace">PXI1Slot3</format>, where <format type="monospace">PXI1Slot3</format> is an instrument resource name. The <paramref name="resourceName"/> can also be a logical IVI name.
            </param>
            <param name="idQuery">
            <see langword="true"/> to verify that the instrument you initialize is supported by the NI-FGEN driver software. The NI-FGEN driver performs verification regardless of the value of this parameter.
            </param>
            <param name="reset">
            <see langword="true"/> to reset the signal generator instrument to a known state when the session is initialized.
            </param>
            <param name="lockType">Specifies whether to use .NET AppDomain-wide locking or machine-wide locking.</param>
            <param name="accessKey">A user-selectable access key to identify the lock.  Driver instances
            that are created with the same <paramref name="accessKey"/> are protected from simultaneous access by multiple threads
            within a process or across processes, depending upon the value of <paramref name="lockType"/>. </param>
            <param name="optionString">
            A list of initial values of certain attributes for the session. Pass <format type="monospace">String.Empty</format> for the default behavior. The default values are "<format type="monospace">Simulate=0,RangeCheck=1,Cache=1</format>".
            <list type="table">
            <listheader>
            <term>Device</term>
            <description>optionString Syntax
            </description>
            </listheader>
            <item>
            <term>
            NI PXI-5404
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5404;BoardType:PXI</format>
            </description>
            </item>
            <item>
            <term>
            NI PCI-5411
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5411;BoardType:PCI;MemorySize:8000000</format>
            </description>
            </item>
            <item>
            <term>
            NI PXIe-5450
            </term>
            <description>
            <format type="monospace">DriverSetup=Model:5450;Channels:0-1;BoardType:PXIe;MemorySize:8000000</format>
            </description>
            </item>
            </list>
            </param>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="resourceName"/> is invalid.
            <para>- or -</para>
            The value for <paramref name="optionString"/> is invalid.<para>- or -</para>The value for <paramref name="lockType"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 3:17:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> class. Initializes a signal generator driver session from an existing signal generator handle.
            </summary>
            <param name="instrumentHandle">
            A pointer to an existing signal generator handle.
            </param>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="instrumentHandle"/> is invalid.
            <para>
            - or -
            </para>
            This signal generator handle does not belong to a NIFgen session.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 3:07:43 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.IsDisposed">
            <summary>
            Gets a value indicating whether the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session has been disposed.
            </summary>
            <value>
            <see langword="true"/>, if the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session is disposed;
            <see langword="false"/>, if the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session is not disposed.
            The default value is <see langword="false"/>.
            </value>
            <lastupdated>2/21/2017 2:45:42 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.FrequencyList">
            <summary>
            Gets the
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList"/>
            object containing properties and methods used for configuring frequencies and durations.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrarySequence"/>
            object containing properties and methods used to configuring frequencies and durations.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.FrequencyList" crefType="Unqualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:44:56 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.DriverDebug">
            <exclude/>
            <summary>
            Gets the driver debug. For Internal purpose only.
            </summary>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.IsDone">
            <summary>
            Gets a value indicating whether the current generation is complete.
            </summary>
            <value><see langword="true"/> if generation is complete; <see langword="false"/> if generation is not complete.
            </value>
            <remarks>
            If the session is in the idle or committed states, this property returns <see langword="true"/>.
            <note>
            NI-FGEN only returns <see langword="true"/> after the current generation is complete in <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TriggerMode.Single"/> trigger mode.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.IsDone" crefType="Unqualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:47:50 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Arbitrary">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary"/> object that contains
            properties for configuring arbitrary waveforms and sequences.
            </summary>
            <value>
            An object containing properties and methods for configuring arbitrary waveforms and sequences.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary" crefType="Unqualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:43:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.DriverOperation">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverOperation"/> object containing methods and properties that manage the operation of the driver.
            </summary>
            <value>
            The methods and properties that manage the operation of the driver. This object is generated when you create an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.DriverOperation" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:44:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Identity">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverIdentity"/> object, which contains properties that return information about the
             identity of the NI-FGEN driver software.
            </summary>
            <value>
            The identity of the NI-FGEN driver software. This object is generated when you create an <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Identity" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:45:10 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Utility">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/> object containing utility operations for the NI-FGEN driver software.
            </summary>
            <value>
            The object containing utility operations for the NI-FGEN driver software.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Utility" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:54:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Event">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenEvent"/> object containing
            properties used to configure  NI-FGEN events.
            </summary>
            <value>
            An object containing properties used to configure NI-FGEN events.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Event" crefType="Unqualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:44:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Output">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutput"/> object that configures the output from the signal generator.
            </summary>
            <value>The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutput"/> object that configures the output from the signal generator.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Output" crefType="Unqualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:53:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Script">
            <summary>
            Gets   the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenEvent"/> object that creates, configures, and clears scripts.
            </summary>
            <value>The  <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenEvent"/> object that creates, configures, and clears scripts.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Script" crefType="Unqualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:52:48 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Timing">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenTiming"/> object used to configure   clocks in NI-FGEN driver software.
            </summary>
            <value>
            The object used to configure   clocks in NI-FGEN driver software.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Timing" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:53:58 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Trigger">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenTrigger"/> object that configures triggers.
            </summary>
            <value>
            The object used to configure  triggers.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Trigger" crefType="PartiallyQualified"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:54:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.StandardWaveform">
            <summary>
             Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform"/> object used to configure standard waveforms.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform"/> object used to configure standard waveforms.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.StandardWaveform"/>
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 2:52:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.NationalInstruments#ModularInstruments#ITClockSynchronizableDevice#Handle">
            <summary>
            Gets the handle given to the NI-TClk API for synchronization.
            </summary>
            <value>
            Returns the handle given to the NI-TClk API for synchronization.
            </value>
            <lastupdated>3/13/2017 10:39:57 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Driver#IIviDriver#DriverOperation">
            <summary>
            Gets a reference to the IIviDriverOperation interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:29:36 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Driver#IIviDriver#Identity">
            <summary>
            Gets a reference to the IIviDriverIdentity interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:29:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Driver#IIviDriver#Utility">
            <summary>
            Gets a reference to the IIviDriverUtility interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:29:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#ReferenceClockSource">
            <summary>
            Gets or sets the source of the reference clock. The function generator derives frequencies
            and sample rates that it uses to generate waveforms from the reference clock.</summary>
            <exclude/>
            <lastupdated>2/7/2017 3:30:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#Output">
            <summary>
            Gets a reference to the IIviFgenOutput interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:30:09 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#Trigger">
            <summary>
            Gets a reference to the IIviFgenTrigger interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:30:37 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#StandardWaveform">
            <summary>
            Gets a reference to the IIviFgenStandardWaveform interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:30:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#Arbitrary">
            <summary>
            Gets a reference to the IIviFgenArbitrary interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:29:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#AM">
            <summary>
            Gets a reference to the IIviFgenAM interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:29:50 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#FM">
            <summary>
            Gets a reference to the IIviFgenFM interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:30:04 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#DataMarkers">
            <summary>
            Gets a reference to the IIviFgenDataMarkerCollection interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:30:00 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#SparseMarkers">
            <summary>
            Gets a reference to the IIviFgenSparseMarkerCollection interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:30:26 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#SampleClock">
            <summary>
            Gets a reference to the IIviFgenSampleClock interface.
            </summary>
            <exclude/>
            <lastupdated>2/7/2017 3:30:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.GetInstrumentHandle">
            <summary>
            Gets the <see cref="T:System.Runtime.InteropServices.SafeHandle"/> to the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> instrument session.
            </summary>
            <returns>
            The <see cref="T:System.Runtime.InteropServices.SafeHandle"/> to the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> instrument session.
            </returns>
            <remarks>
            Using the <see cref="T:System.Runtime.InteropServices.SafeHandle"/>, you can get the <see cref="T:System.IntPtr"/> to the session; however, there are risks involved with using the <see cref="T:System.IntPtr"/>.
            It is difficult to know the state of the handle, and the handle could be recycled while you are using it. For more information, refer to
            <see cref="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" crefType="PartiallyQualified"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.GetInstrumentHandle"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 3:04:07 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Commit">
            <summary>
            Causes a transition to the committed state.
            </summary>
            <remarks>
            This method verifies driver attribute values, reserves the device,
            and commits the attribute values to the device.
            If the attribute values are all valid, NI-FGEN sets the device hardware configuration
            to match the session configuration.
            <note type="note">
            This method does not support the NI 5401/5404/5411/5431 signal generators.
            </note>
            <para>
            In the committed state, you can load waveforms, scripts, and sequences into memory.
            If any driver attributes are changed, NI-FGEN implicitly transitions back to the idle state,
            where you can program all session properties before applying them to the device.
            This method has no effect if the device is already in the committed or generating state.
            </para>
            <para>
            Calling this method before the
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration" crefType="undefined"/> method
            is optional but has the following benefits:
            <list type="bullet">
            <item>
            <description>
            Routes are committed, so signals are exported or imported.
            </description>
            </item>
            <item>
            <description>
            Any reference clock and external clock circuits are phase-locked.
            </description>
            </item>
            <item>
            <description>
            A subsequent call to <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration" crefType="undefined"/> can run faster because the device is already configured.
            </description>
            </item>
            </list>
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Commit"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            <para>- or -</para>
            An underlying driver attribute value was invalid.
            </exception>
            <lastupdated>3/11/2017 11:54:47 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ConfigureChannels(System.String)">
            <summary>
            Configures the channels used with the session.
            </summary>
            <param name="channels">The channel(s) that all subsequent channel-based properties in the session configure.</param>
            <remarks>
            If you call this method, you must
            immediately call it after opening the session, and before configuring any properties or
            writing data.
            <para>
            Valid values for <paramref name="channels"/> are non-negative integers. For example, 0 is the only valid value on devices
            with one channel, while devices with two channels support values of 0 and 1. You can specify more than one channel by inserting commas
            between values (for example, "0,1").</para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ConfigureChannels(System.String)"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The channel(s) specified is invalid.
            <para>
            - or -
            </para>
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ConfigureChannels(System.String)" crefType="PartiallyQualified"/> was called after the session
            had been committed or an attribute had been queried.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:58:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ExportSignal(NationalInstruments.ModularInstruments.NIFgen.SignalSource,System.String,System.String)">
            <summary>
            Routes signals (clocks, triggers, and events) to the output terminal you specify.
            </summary>
            <param name="signalSource">
            The source of the signal to route.
            </param>
            <param name="signalIdentifier">
            The instance of the selected signal to export.
            </param>
            <param name="outputTerminal">
            The output terminal to export the signal.
            </param>
            <remarks>
            Any routes created within a session persist after the session closes to prevent signal glitches.
            To reconfigure signal routes created in previous sessions, set reset parameter of
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.#ctor(System.String,System.Boolean,System.Boolean)"/>
            or
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.#ctor(System.String,System.Boolean,System.Boolean,System.String)"/>
            to
            <see langword="true"/> when creating the
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session instance
            or use <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility.ResetDevice"/>.
            If you export a signal with this method and commit the session,
            the signal is routed to the output terminal you specify.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.ExportSignal(NationalInstruments.ModularInstruments.NIFgen.SignalSource,System.String,System.String)"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="signalSource"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="signalIdentifier"/> is invalid or unknown.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 11:56:16 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration">
            <summary>
            Initiates signal generation.
            </summary>
            <remarks>
            If you want to abort signal generation, call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/>.
            After the signal generation is aborted, you can call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration" crefType="undefined"/>
             to cause the signal generator to produce a signal again.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            No waveforms have been created before calling this method.
            <para>- or -</para>
            The size of the streaming waveform is too small.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 3:06:42 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration">
            <summary>
            Aborts any previously initiated signal generation.
            </summary>
            <remarks>
            Call
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration" crefType="undefined"/>
             to cause the signal generator to produce a signal again.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 2:55:44 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.WaitUntilDone(System.TimeSpan)">
            <summary>
            Waits until the device is done generating or until the maximum time has expired.
            </summary>
            <param name="maxTime">
            The timeout value in milliseconds.
            </param>
            <remarks>
            Call this method after calling
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration" crefType="undefined"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.WaitUntilDone(System.TimeSpan)"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.MaxTimeExceededException">
            The operation initiated by
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.InitiateGeneration" crefType="undefined"/>
            did not complete within the time specified by <paramref name="maxTime"/>.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 3:20:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Dispose">
            <summary>
            Disposes the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> session.
            </summary>
            <lastupdated>2/21/2017 2:58:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Close">
            <summary>
            Closes the session with the signal generator instrument.
            </summary>
            <lastupdated>3/13/2017 10:40:00 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">
            An object that specifies the <see cref="T:System.Type"/> of the object.
            </param>
            <returns>
            A service object of type <paramref name="serviceType"/> or <see langword="null"/> if there is no service object of type <paramref name="serviceType"/>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.GetService(System.Type)"/>
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>2/21/2017 3:05:11 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#GetOperationMode(System.String)">
            <summary>
            Gets the mode that determines how the function generator produces waveforms.
            Operation mode determines which extension group's methods and properties are
            used to configure the waveform the function generator produces.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            The mode that determines how the function generator produces waveforms. Operation
            mode determines which extension group's methods and properties are used to configure
            the waveform the function generator produces.
            </returns>
            <exclude/>
            <lastupdated>2/7/2017 3:30:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Ivi#Fgen#IIviFgen#SetOperationMode(System.String,Ivi.Fgen.OperationMode)">
            <summary>
            Sets the mode that determines how the function generator produces waveforms.
            Operation mode determines which extension group's methods and properties are
            used to configure the waveform the function generator produces.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="mode">
            The mode that determines how the function generator produces waveforms. Operation
            mode determines which extension group's methods and properties are used to configure
            the waveform the function generator produces.
            </param>
            <exclude/>
            <lastupdated>2/7/2017 3:30:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutput">
            <summary>
            Provides methods and properties to enable signal generation and configure the analog output, 
            analog and digital filtering, and digital pattern of your signal generator. 
            </summary>
            <remarks>
            Use <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/> to determine what the signal generator will output.
            This class can also be used to determine how the output will be generated including applying filters and data masks to the output using the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter"/> 
            and 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask"/> 
            sub-objects
            <para>
            This class cannot be instantiated directly. It is instantiated when the 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            session object is created. Access this class using
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.NIFgen.Output"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/10/2017 1:20:27 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode">
            <summary>
            Gets or sets the output mode of the signal generator.
            </summary>
            <value>
            The output mode of the signal generator.
            </value>
            <remarks>
            The value that you specify determines what output mode the signal generator is in.
            For example, if the output mode is set to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList"/>, 
            then the signal generator will generate a frequency list created and configured through 
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenFrequencyList"/>. 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value set is not supported by the instrument in use.
            </exception>
            <exception cref="T:System.ArgumentException">
            The mode value set is an invalid value.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:55:46 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.IdleBehavior">
            <summary>
            Gets or sets the behavior of the output signal during the Idle state.
            </summary>
            <value>
            The behavior of the output signal during the Idle state.
            </value>
            <remarks>
            <note type="note">
            You cannot set this property while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/>
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.IdleBehavior" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/10/2017 2:46:50 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.WaitBehavior">
            <summary>
            Gets or sets the behavior of the output while the device is waiting for a Script trigger or executing a wait instruction.
            </summary>
            <value>
            The behavior of the output while the device is waiting for a Script trigger or executing a wait instruction. Script triggers
            can be used when the <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.OutputMode"/> is set to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script"/>.
            </value>
            <remarks>
            <note type="note">
            You cannot set this property while the device is generating a waveform. 
            If you want to change the device configuration, 
            call  
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/>
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.WaitBehavior" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value set is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:37:09 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.Filter">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter"/> object to configure
            filters on the output signal.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutputFilter"/> object to configure
            filters on the output signal.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.WaitBehavior" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/11/2017 10:35:49 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.DataMask">
            <summary>
            Gets the <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask"/> object 
            used to configure data masks and static values for analog and digital output.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenOutputDataMask"/> object 
            used to configure data masks and static values for analog and digital output.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.WaitBehavior" crefType="PartiallyQualified"/> 
            was accessed after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            object was disposed.
            </exception>
            <lastupdated>3/11/2017 10:35:25 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.Ivi#Fgen#IIviFgenOutput#Count">
            <summary>
            Gets the number of output channels supported by the instrument.
            </summary>
            <exclude/>
            <lastupdated>1/6/2017 1:44:45 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.Ivi#Fgen#IIviFgenOutput#OutputMode">
            <summary>
            Gets or sets the mode that determines how the function generator produces waveforms. This
            property determines which extension group's methods and properties are used to
            configure the waveform the function generator produces.
            </summary>
            <exclude/>
            <lastupdated>1/6/2017 1:44:50 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetDigitalGain(System.String)">
            <summary>
            Gets a factor by which the signal generator digitally multiplies generated data 
            before converting it to an analog signal in the digital-to-analog converter.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            A factor by which the signal generator digitally multiplies generated data 
            before converting it to an analog signal in the digital-to-analog converter.
            The default value is 1.0.
            </returns>
            <remarks>
            For a digital gain greater than 1.0, the product of the digital gain times the generated data 
            must be inside the range ±1.0, assuming floating point data. 
            If the product exceeds these limits, the signal generator clips the output signal, and an error results.
            Some signal generators support both digital gain and analog gain, 
            specified with the standard waveform amplitude or arbitrary gain using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetAmplitude(System.String,System.Double)"/>
            and
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SetGain(System.String,System.Double)"/>
            respectively.
            Digital gain can be changed during generation without the 
            glitches that may occur when changing analog gains, due to relay switching. 
            However, the digital-to-analog converter output resolution is a function of analog gain, 
            so only analog gain makes full use of the resolution of the digital-to-analog converter.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetDigitalGain(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 2:54:13 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetDigitalGain(System.String,System.Double)">
            <summary>
            Sets a factor by which the signal generator digitally multiplies generated data 
            before converting it to an analog signal in the digital-to-analog converter.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="digitalGain">
            The digital gain value. 
            </param>
            <remarks>
            For a digital gain greater than 1.0, the product of the digital gain multiplied by the generated data 
            must be inside a range of ±1.0, assuming floating point data. 
            If the product exceeds these limits, the signal generator clips the output signal, and an error results.
            Some signal generators support both digital gain and analog gain, 
            specified with the standard waveform amplitude or arbitrary gain using 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenStandardWaveform.SetAmplitude(System.String,System.Double)"/>
            and
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenArbitrary.SetGain(System.String,System.Double)"/>
            respectively.
            Digital gain can be changed during generation without the 
            glitches that may occur when changing analog gains, due to relay switching. 
            However, the digital-to-analog converter output resolution is a function of analog gain, 
            so only analog gain makes full use of the resolution of the digital-to-analog converter.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetDigitalGain(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="digitalGain"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:46:43 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetAnalogPath(System.String)">
            <summary>
            Gets the analog signal path. 
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            The analog signal path.
            The default value is <see cref="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Main" crefType="PartiallyQualified"/>.
            </returns>
            <remarks>
            The <see cref="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Main" crefType="PartiallyQualified"/> path allows the user to configure gain, offset, analog filter status, 
            output impedance, and output enable. The <see cref="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Direct" crefType="PartiallyQualified"/>  path presents a much smaller gain range, 
            and you cannot adjust offset or the filter status. The <see cref="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Direct" crefType="PartiallyQualified"/>  path provides 
            a smaller output range but lower distortion. The <see cref="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Main" crefType="PartiallyQualified"/>  path has two amplifier options, 
            high and low gain. Setting this value to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Main" crefType="PartiallyQualified"/>
            allows NI-FGEN to choose the amplifier based on the user-specified gain.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetAnalogPath(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            <para>- or - </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%"'.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 1:56:54 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetAnalogPath(System.String,NationalInstruments.ModularInstruments.NIFgen.AnalogPath)">
            <summary>
            Sets the analog signal path. 
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="analogPath">
            The analog signal path.
            </param>
            <remarks>
            The main analog path allows the user to configure gain, offset, analog filter status, 
            output impedance, and output enable. However, the direct analog path presents a much smaller gain range, 
            and you cannot adjust offset or the filter status. 
            <para>
            The direct analog path provides 
            a smaller output range but lower distortion. The main path has two amplifier options: 
            high  gain and low gain. Setting this value to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.AnalogPath.Main" crefType="PartiallyQualified"/>
            allows NI-FGEN to choose the amplifier based on the user-specified gain.</para>
            <para>
            You cannot change this property while the device is generating a waveform. 
            If you want to change the device configuration, call  
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/>
            or wait for the generation to complete.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetAnalogPath(System.String,NationalInstruments.ModularInstruments.NIFgen.AnalogPath)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The <paramref name="analogPath"/> value is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 12:22:39 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetLoadImpedance(System.String)">
            <summary>
            Gets the load impedance connected to the analog output of the channel.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            The load impedance connected to the analog output of the channel.
            </returns>
            <remarks>
            If you set the load impedance to –1.0,
            NI-FGEN assumes that the load impedance matches the value of the output impedance. 
            NI-FGEN compensates to give the desired peak-to-peak voltage amplitude or arbitrary gain (relative to 1 V). 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetLoadImpedance(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 3:21:23 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetLoadImpedance(System.String,System.Double)">
            <summary>
            Sets the load impedance connected to the analog output of the channel.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="impedance">
            The load impedance value to be set to the analog output of the channel.
            </param>
            <remarks>
            If you set the load impedance to –1.0,
            NI-FGEN assumes that the load impedance matches the value of the output impedance. 
            NI-FGEN compensates to give the desired peak-to-peak voltage amplitude or arbitrary gain (relative to 1 V). 
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetLoadImpedance(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The value of <paramref name="impedance"/>  is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:49:17 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetCommonModeOffset(System.String)">
            <summary>
            Gets the value that the signal generator adds to or subtracts from the arbitrary waveform data. 
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            Value the signal generator adds to or subtracts from the arbitrary waveform data. 
            </returns>
            <remarks>
            Common-mode offset is applicable only when you set the terminal configuration to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TerminalConfiguration.Differential" crefType="PartiallyQualified"/>.
            Common-mode offset is applied to the signals generated 
            at each differential output terminal.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetCommonModeOffset(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or - </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%". 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 2:02:51 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetCommonModeOffset(System.String,System.Double)">
            <summary>
            Sets the value the signal generator adds to or subtracts from the arbitrary waveform data. 
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="commonModeOffset">
            The value the signal generator adds to or subtracts from the arbitrary waveform data.
            </param>
            <remarks>
            Common-mode offset is applicable only when you set the terminal configuration to
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.TerminalConfiguration.Differential" crefType="PartiallyQualified"/>.
            Common-mode offset is applied to the signals generated 
            at each differential output terminal.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetCommonModeOffset(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentException">
            The impedance value is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="commonModeOffset"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:45:24 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetChannelDelay(System.String)">
            <summary>
            Gets the delay to apply to the analog output of the channel specified by the channel string.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            The delay to apply to the analog output of the channel specified by the channel string.
            </returns>
            <remarks>
            You can use the output delay to configure the timing relationship between channels on a multichannel device. 
            Values for this property can be zero or positive. A value of zero indicates that the channels are aligned. 
            A positive value delays the analog output by the specified number of seconds.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetChannelDelay(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>- or - </para>The value for <paramref name="channelName"/> has invalid characters, such as '"-" or "%". 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 1:58:31 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetChannelDelay(System.String,System.Double)">
            <summary>
            Sets the delay to apply to the analog output of the channel specified by <paramref name="channelName"/>.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <param name="channelDelay">
            The delay to apply to the analog output of the specified channel.
            </param>
            <remarks>
            You can use the output delay to configure the timing relationship between channels on a multichannel device. 
            Values for this property can be zero or positive. A value of zero indicates that the channels are aligned. 
            A positive value delays the analog output by the specified number of seconds.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetChannelDelay(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The <paramref name="channelDelay"/> value is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 12:25:57 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetChannelName(System.Int32)">
            <summary>
            Get the name of the output channel at the specified index.
            </summary>
            <param name="index">
            The index of the channel.
            </param>
            <returns>
            The output channel name at the specified index. 
            </returns>
            <remarks>
            The channel indexes are 1 based, so the index of the first channel is 1 instead of 0.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetChannelName(System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value for <paramref name="index"/> is less than or equal to 0 or greater than the number of channels supported by the instrument.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 2:00:30 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetEnabled(System.String)">
            <summary>
            Fetches a value indicating whether the output is enabled for a specified channel.
            </summary>
            <param name="channelName">
            The name of the output channel. 
            </param>
            <returns>
            <see langword="true"/> if output at the channel output connector is enabled, and 
            <see langword="false"/> if output at the channel output connector is disabled.
            </returns>
            <remarks>
            If enabled, the signal appears at the output connector for the channel produced by the signal generator.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>3/11/2017 10:40:23 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetEnabled(System.String,System.Boolean)">
            <summary>
            Sets a value indicating whether the output is enabled for a specified channel.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="enabled">
            <see langword="true"/> to enables the output at the channel output connector, and 
            <see langword="false"/> to disable the output at the channel output connector.
            </param>
            <remarks>
            Use this method to configure whether the signal that the signal generator produces appears at the output connector.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:53:22 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetTerminalConfiguration(System.String)">
            <summary>
            Gets the terminal configuration mode for specified channel.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            The terminal configuration mode for specified channel.
            </returns>
            <remarks>
            The terminal configuration mode specifies whether to analyze gain and offset values based on single-ended or differential operation. 
            <para>
            You cannot change the terminal configuration while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetTerminalConfiguration(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            <para>
            - or - 
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 3:36:52 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetTerminalConfiguration(System.String,NationalInstruments.ModularInstruments.NIFgen.TerminalConfiguration)">
            <summary>
            Sets the terminal configuration mode for specified channel.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="configuration">
            The terminal configuration mode.
            </param>
            <remarks>
            The terminal configuration mode specifies whether to analyze gain and offset values based on single-ended or differential operation. 
            <para>
            You cannot change terminal configuration while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetTerminalConfiguration(System.String,NationalInstruments.ModularInstruments.NIFgen.TerminalConfiguration)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="configuration"/> is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 12:43:55 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetImpedance(System.String)">
            <summary>
            Gets the output impedance of the signal generator at the specified channel.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            The output impedance of the signal generator at the specified channel.
            </returns>
            <remarks>
            This method specifies the output impedance of the signal generator at the output connector. 
            NI signal generators have an output impedance of 50 Ω and an optional 75 Ω on select modules.
            <para>
            If the load impedance value matches the output impedance, 
            the voltage at the signal output connector is at the necessary level. 
            The voltage at the signal output connector varies with load output impedance, 
            up to doubling the voltage for a high-impedance load.
            </para>
            <para>
            You cannot change terminal configuration while the device is generating a waveform. 
            If you want to change the device configuration, 
            call  
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetImpedance(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.
            <para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:40:02 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetImpedance(System.String,System.Double)">
            <summary>
            Sets the output impedance of the signal generator at the specified channel.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="impedance">
            The output impedance of the signal generator at the specified channel to configure.
            </param>
            <remarks>
            This method specifies the output impedance of the NI signal generator at the output connector. 
            NI signal generators have an output impedance of 50 Ω and an optional 75 Ω on select modules.
            <para>
            If the load impedance value matches the output impedance, 
            the voltage at the signal output connector is at the necessary level. 
            The voltage at the signal output connector varies with load output impedance, 
            up to doubling the voltage for a high-impedance load.
            </para>
            <para>
            You cannot change terminal configuration while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetImpedance(System.String,System.Double)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The value for <paramref name="impedance"/> is invalid.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/10/2017 2:40:16 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetIdleValue(System.String)">
            <summary>
            Fetches the value to generate in the Idle state. 
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            The value to generate in the Idle state. 
            </returns>
            <remarks>
            You must set  
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.IdleBehavior" crefType="PartiallyQualified"/>
            to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.IdleBehavior.JumpToValue" crefType="PartiallyQualified"/>
            to use this property.
            <note type="note">
            You cannot change this Idle value while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetIdleValue(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.ArgumentException">
            The idle value set using <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetIdleValue(System.String,System.Int32)"/> is invalid.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/6/2017 3:15:20 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetIdleValue(System.String,System.Int32)">
            <summary>
            Sets the value to generate in the Idle state. 
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="idleValue">
            The value to generate in the Idle state.
            </param>
            <remarks>
            You must set  
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.IdleBehavior" crefType="PartiallyQualified"/>
            to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.IdleBehavior.JumpToValue" crefType="PartiallyQualified"/>
            to use this property.
            <note type="note">
            You cannot change this value while the device is generating a waveform. 
            If you want to change the device configuration, 
            call  
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetIdleValue(System.String,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 12:39:14 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetWaitValue(System.String)">
            <summary>
            Gets the value to generate while waiting.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            The value to generate while waiting.
            </returns>
            <remarks>
            You must set  
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.WaitBehavior" crefType="PartiallyQualified"/>
            to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.WaitBehavior.JumpToValue" crefType="PartiallyQualified"/> 
            to use this method.
            <note type="note">
            You cannot change this property while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetWaitValue(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. <para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%". 
            </exception>
            <exception cref="T:System.ArgumentException">
            The wait value is set to an invalid value.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 12:15:26 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetWaitValue(System.String,System.Int32)">
            <summary>
            Sets the value to generate in the waiting state.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="waitValue">
            The value to generate in the waiting state.
            </param>
            <remarks>
            You must set 
            <see cref="P:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.WaitBehavior" crefType="PartiallyQualified"/>
            to 
            <see cref="F:NationalInstruments.ModularInstruments.NIFgen.WaitBehavior.JumpToValue" crefType="PartiallyQualified"/>  
            to use this property.
            <note type="note">
            You cannot change this property while the device is generating a waveform. 
            If you want to change the device configuration, 
            call 
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.NIFgen.AbortGeneration" crefType="undefined"/> 
            or wait for the generation to complete.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetWaitValue(System.String,System.Int32)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value was set while the signal generator was generating a signal.
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 12:44:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetDigitalPatternEnabled(System.String)">
            <summary>
            Fetches a value indicating whether the signal generator generates 
            a digital pattern corresponding to the output signal.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <returns>
            A value indicating whether the signal generator generates 
            a digital pattern corresponding to the output signal.
            <see langword="true"/> if digital pattern output is enabled, and 
            <see langword="false"/> if digital pattern output is disabled.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.GetDigitalPatternEnabled(System.String)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown. 
            <para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%". 
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>2/21/2017 9:54:17 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetDigitalPatternEnabled(System.String,System.Boolean)">
            <summary>
            Sets whether the signal generator generates 
            a digital pattern corresponding to the output signal.
            </summary>
            <param name="channelName">
            The name of the output channel.
            </param>
            <param name="enabled">
            <see langword="true"/> to enable digital pattern output, and 
            <see langword="false"/> to disable digital pattern output.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            <see cref="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.SetDigitalPatternEnabled(System.String,System.Boolean)" crefType="PartiallyQualified"/> 
            was called after the associated
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.NIFgen"/> 
            or
            <see cref="T:NationalInstruments.ModularInstruments.NIFgen.FgenDriverUtility"/>
            object was disposed.
            </exception>
            <exception cref="T:Ivi.Driver.SelectorNameException">
            The value for <paramref name="channelName"/> is unknown.<para>
            - or -
            </para>
            The value for <paramref name="channelName"/> has invalid characters, such as "-" or "%".
            </exception>
            <exception cref="T:Ivi.Driver.IviCDriverException">
            The underlying NI-FGEN driver returned an error.
            </exception>
            <lastupdated>1/9/2017 12:34:32 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.Ivi#Fgen#IIviFgenOutput#GetTerminalConfiguration(System.String)">
            <summary>
            Gets the terminal configuration, which determines whether the generator will
            run in single-ended or differential mode and whether the output gain and offset
            values will be analyzed based on single-ended or differential operation.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <returns>
            The mode in which the generator will run. Choices are single-ended and differential
            operation.
            </returns>
            <exclude/>
            <lastupdated>3/11/2017 10:43:01 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.NIFgen.FgenOutput.Ivi#Fgen#IIviFgenOutput#SetTerminalConfiguration(System.String,Ivi.Fgen.TerminalConfiguration)">
            <summary>
            Sets the terminal configuration, which determines whether the generator will
            run in single-ended or differential mode and whether the output gain and offset
            values will be analyzed based on single-ended or differential operation.
            </summary>
            <param name="channelName">
            A string that uniquely identifies a channel. It may be defined by the driver
            or supplied as a virtual name in the configuration store. For single output instruments,
            the driver may define the empty string as a valid channel name.
            </param>
            <param name="configuration">
            The mode in which the generator will run. Choices are single-ended and differential
            operation.
            </param>
            <exclude/>
            <lastupdated>3/11/2017 10:43:15 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.OutputMode">
            <summary>
            The output mode for the signal generator. 
            </summary>
            <lastupdated>2/21/2017 3:42:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Function">
            <summary>
            Generates standard function waveforms such as sine, square, triangle, etc.
            </summary>
            <lastupdated>2/21/2017 3:42:41 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Arbitrary">
            <summary>
            Generates waveforms from user-created/provided waveform arrays of numeric data.
            </summary>
            <lastupdated>3/13/2017 10:41:23 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Sequence">
            <summary>
            Generates downloaded waveforms in an order your specify.
            </summary>
            <lastupdated>3/13/2017 10:41:31 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.FrequencyList">
            <summary>
            Generates a standard function using a list of frequencies you define.
            </summary>
            <lastupdated>3/13/2017 10:41:26 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.OutputMode.Script">
            <summary>
            Allows you to use scripting to link and loop multiple waveforms in complex combinations.
            </summary>
            <lastupdated>3/13/2017 10:41:29 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform">
            <summary>
            The type of standard waveform.
            </summary>
            <lastupdated>3/10/2017 12:39:10 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.Sine">
            <summary>
            A sinusoid waveform.
            </summary>
            <lastupdated>3/13/2017 10:41:48 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.Square">
            <summary>
            A square waveform.
            </summary>
            <lastupdated>3/13/2017 10:41:50 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.Triangle">
            <summary>
            A triangle waveform.
            </summary>
            <lastupdated>3/13/2017 10:41:52 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.RampUp">
            <summary>
            A positive ramp waveform.
            </summary>
            <lastupdated>3/13/2017 10:41:46 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.RampDown">
            <summary>
            A negative ramp waveform.
            </summary>
            <lastupdated>3/13/2017 10:41:44 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.DC">
            <summary>
            A constant voltage waveform.
            </summary>
            <lastupdated>3/13/2017 10:41:39 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.Noise">
            <summary>
            A white noise waveform.
            </summary>
            <lastupdated>3/13/2017 10:41:42 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.StandardWaveform.User">
            <summary>
            A user defined waveform.
            </summary>
            <lastupdated>3/13/2017 10:41:54 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.TerminalConfiguration">
            <summary>
            The type of operation to use to analyze gain and offset values.
            </summary>
            <lastupdated>3/10/2017 12:40:21 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TerminalConfiguration.SingleEnded">
            <summary>
            Single-ended operation.
            </summary>
            <lastupdated>2/21/2017 3:48:04 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.TerminalConfiguration.Differential">
            <summary>
            Differential operation.
            </summary>
            <lastupdated>2/21/2017 3:47:53 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition">
            <summary>
            The reference position in the waveform.
            </summary>
            <lastupdated>2/21/2017 9:45:19 PM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition.Start">
            <summary>
            The reference position is relative to the start of the waveform.
            </summary>
            <lastupdated>3/13/2017 10:42:19 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.ModularInstruments.NIFgen.WaveformWritePosition.Current">
            <summary>
            The reference position is relative to the current position.
            </summary>
            <lastupdated>3/13/2017 10:42:16 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
    </members>
</doc>
