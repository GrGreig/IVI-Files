FPAttributeValueFile

n  SubType="IVI" 

n  SubVersion="1" 

v attrBusTypeRangeTable DataType="i" 
 NIFGEN_VAL_BUS_INVALID (0)
  "Indicates an invalid bus type."

 NIFGEN_VAL_BUS_AT (1)
  "Indicates the signal generator is the AT bus type."

 NIFGEN_VAL_BUS_PCI (2)
  "Indicates the signal generator is the PCI bus type."

 NIFGEN_VAL_BUS_PXI (3)
  "Indicates the signal generator is the PXI bus type."

 NIFGEN_VAL_BUS_VXI (4)
  "Indicates the signal generator is the VXI bus type."

 NIFGEN_VAL_BUS_PCMCIA (5)
  "Indicates the signal generator is the PCI-CMA bus type."


v attrClockModeRangeTable DataType="i" 
 NIFGEN_VAL_DIVIDE_DOWN (1)
   "Divide down sampling—Sample rates are generated by dividing the source frequency."

 NIFGEN_VAL_HIGH_RESOLUTION (0)
   "High resolution sampling—Sample rate is generated by a high–resolution clock source."

 NIFGEN_VAL_AUTOMATIC (2)
   "Automatic Selection—NI-FGEN selects between the divide–down and high–resolution clocking modes."

v attrCycleCountRangeTable DataType="i" 
 NIFGEN_VAL_GENERATE_CONTINUOUS (-1)
  "The signal generator continuously generates signals after it receives a trigger."


v attrFreqListHandleRangeTable DataType="i" 
 50 (50)
  ""


v attrFuncWaveformRangeTable DataType="i" 
 NIFGEN_VAL_WFM_SINE (1)
  "Sinusoid waveform"

 NIFGEN_VAL_WFM_SQUARE (2)
  "Square waveform"

 NIFGEN_VAL_WFM_TRIANGLE (3)
  "Triange waveform"

 NIFGEN_VAL_WFM_RAMP_UP (4)
  "Positive ramp waveform"

 NIFGEN_VAL_WFM_RAMP_DOWN (5)
  "Negative ramp waveform"

 NIFGEN_VAL_WFM_DC (6)
  "Constant voltage"

 NIFGEN_VAL_WFM_NOISE (101)
  "White noise"

 NIFGEN_VAL_WFM_USER (102)
  "User-defined waveform as defined by the"
  "niFgen_DefineUserStandardWaveform function."

v attrOutputModeRangeTable DataType="i" 
 NIFGEN_VAL_OUTPUT_FUNC (0)
  "Standard Function mode— "
  "Generates standard function waveforms"
  " such as sine, square, triangle, and so on."

 NIFGEN_VAL_OUTPUT_FREQ_LIST (101)
  "Frequency List mode—Generates a "
  "standard function using a list of "
  "frequencies you define."

 NIFGEN_VAL_OUTPUT_ARB (1)
  "Arbitrary waveform mode—Generates "
  "waveforms from user-created/provided "
  "waveform arrays of numeric data."

 NIFGEN_VAL_OUTPUT_SEQ (2)
  "Arbitrary sequence mode — "
  "Generates downloaded waveforms "
  "in an order your specify."



v attrRefClockSourceRangeTable DataType="i" 
 NIFGEN_VAL_REF_CLOCK_INTERNAL (0)
  "Internal Reference clock"

 NIFGEN_VAL_REF_CLOCK_EXTERNAL (1)
  "External Reference clock"

 NIFGEN_VAL_REF_CLOCK_RTSI_CLOCK (101)
  "RTSI clock"

 NIFGEN_VAL_REF_CLOCK_TTL7 (118)
  ""
 
 NIFGEN_VAL_PXI_CLK10 (1201)
  ""
 
 NIFGEN_VAL_REF_IN (1200)
  "REF IN front panel connector"

 NIFGEN_VAL_RTSI_0 (141)
  "RTSI 0"

 NIFGEN_VAL_RTSI_1 (142)
  "RTSI 1"

 NIFGEN_VAL_RTSI_2 (143)
  "RTSI 2"

 NIFGEN_VAL_RTSI_3 (144)
  "RTSI 3"

 NIFGEN_VAL_RTSI_4 (145)
  "RTSI 4"

 NIFGEN_VAL_RTSI_5 (146)
  "RTSI 5"

 NIFGEN_VAL_RTSI_6 (147)
  "RTSI 6"

 NIFGEN_VAL_RTSI_7 (1010)
  "RTSI 7"

 NIFGEN_VAL_CLK_IN (1202)
  "CLK IN front panel connector"

 NIFGEN_VAL_ONBOARD_REFERENCE_CLOCK (1019)
  "Onboard Reference clock"

v attrSynchronizationRangeTable DataType="i" 
 NIFGEN_VAL_NONE (1000)
  "No Synchronization Source"

 NIFGEN_VAL_RTSI_0 (141)
  "RTSI 0"

 NIFGEN_VAL_RTSI_1 (142)
  "RTSI 1"

 NIFGEN_VAL_RTSI_2 (143)
  "RTSI 2"

 NIFGEN_VAL_RTSI_3 (144)
  "RTSI 3"

 NIFGEN_VAL_RTSI_4 (145)
  "RTSI 4"

 NIFGEN_VAL_RTSI_5 (146)
  "RTSI 5"

 NIFGEN_VAL_RTSI_6 (147)
  "RTSI 6"

 NIFGEN_VAL_TTL0 (111)
  "PXI TRIG0 or VXI TTL0"

 NIFGEN_VAL_TTL1 (112)
  "PXI TRIG1 or VXI TTL1"

 NIFGEN_VAL_TTL2 (113)
  "PXI TRIG2 or VXI TTL2"

 NIFGEN_VAL_TTL3 (114)
  "PXI TRIG3 or VXI TTL3"

 NIFGEN_VAL_TTL4 (115)
  "PXI TRIG4 or VXI TTL4"

 NIFGEN_VAL_TTL5 (116)
  "PXI TRIG5 or VXI TTL5"

 NIFGEN_VAL_TTL6 (117)
  "PXI TRIG6 or VXI TTL6"



v attrTriggerModeRangeTable DataType="i" 
 NIFGEN_VAL_SINGLE (1)
  "Single Trigger Mode - The waveform you describe in the sequence list is "
  "generated only once by going through the entire staging list. Only one "
  "trigger is required to start the waveform generation. You can use Single "
  "trigger mode with the output mode in any mode. After a trigger is "
  "received, the waveform generation starts from the first stage and "
  "continues through to the last stage. Then, the last stage generates "
  "repeatedly until you stop the waveform generation."

 NIFGEN_VAL_CONTINUOUS (2)
  "Continuous Trigger Mode - The waveform you describe in the staging list"
  "generates infinitely by repeatedly cycling through the staging list. "
  "After a trigger is received, the waveform generation starts from the "
  "first stage and continues through to the last stage. After the last stage "
  "completes, the waveform generation loops back to the start of the "
  "first stage and continues until it is stopped. Only one trigger is "
  "required to start the waveform generation."

 NIFGEN_VAL_STEPPED (3)
  "Stepped Trigger Mode - After a start trigger is received, the waveform "
  "described by the first stage generates. Then, the device waits for the "
  "next trigger signal. On the next trigger, the waveform described by the "
  "second stage generates, and so on. After the staging list completes, "
  "the waveform generation returns to the first stage and continues in a "
  "cyclic fashion. After any stage has generated completely, the first "
  "eight samples of the next stage are repeated continuously until the next "
  "trigger is received.\n"
  "\n"
  "Note: In Frequency List mode, Stepped trigger mode is the same as Burst "
  "trigger mode."

 NIFGEN_VAL_BURST (4)
  "Burst Trigger Mode - After a start trigger is received, the waveform "
  "described by the first stage generates until another trigger is "
  "received. At the next trigger, the buffer of the previous stage"
  "completes, and then the waveform described by the second stage"
  "generates. After the staging list completes, the waveform generation "
  "returns to the first stage and continues in a cyclic fashion. In "
  "Frequency List mode, the duration instruction is ignored, and the trigger "
  "switches the frequency to the next frequency in the list.\n"
  "\n"
  "Note: In Frequency List mode, Stepped trigger mode is the same as Burst "
  "trigger mode."


v attrTriggerSourceRangeTable DataType="i" 
 NIFGEN_VAL_IMMEDIATE (0)
  "Immediate-The signal generator does not wait for a trigger of any kind."

 NIFGEN_VAL_EXTERNAL (1)
  "External-The signal generator waits for a trigger on the external trigger input"

 NIFGEN_VAL_SOFTWARE_TRIG (2)
  "Software Trigger-The signal generator waits until you call niFgen_SendSWTrigger."

 NIFGEN_VAL_RTSI_0 (141)
  "RTSI line 0"

 NIFGEN_VAL_RTSI_1 (142)
  "RTSI line 1"

 NIFGEN_VAL_RTSI_2 (143)
  "RTSI line 2"

 NIFGEN_VAL_RTSI_3 (144)
  "RTSI line 3"

 NIFGEN_VAL_RTSI_4 (145)
  "RTSI line 4"

 NIFGEN_VAL_RTSI_5 (146)
  "RTSI line 5"

 NIFGEN_VAL_RTSI_6 (147)
  "RTSI line 6"

 NIFGEN_VAL_RTSI_7  (1010)
  "RTSI line 7"

 NIFGEN_VAL_TTL0 (111)
  "PXI TRIG0 or VXI TTL0"

 NIFGEN_VAL_TTL1 (112)
  "PXI TRIG1 or VXI TTL1"

 NIFGEN_VAL_TTL2 (113)
  "PXI TRIG2 or VXI TTL2"

 NIFGEN_VAL_TTL3 (114)
  "PXI TRIG3 or VXI TTL3"

 NIFGEN_VAL_TTL4 (115)
  "PXI TRIG4 or VXI TTL4"

 NIFGEN_VAL_TTL5 (116)
  "PXI TRIG5 or VXI TTL5"

 NIFGEN_VAL_TTL6 (117)
  "PXI TRIG6 or VXI TTL6"

 NIFGEN_VAL_PFI_0 (1011)
  "PFI 0"

 NIFGEN_VAL_PFI_1 (1012)
  "PFI 1"

 NIFGEN_VAL_PFI_2 (1013)
  "PFI 2"

 NIFGEN_VAL_PFI_3 (1014)
  "PFI 3"

 NIFGEN_VAL_PXI_STAR (131)
  "PXI star"

v attrUpdateClockSourceRangeTable DataType="i" 
 NIFGEN_VAL_INTERNAL (0)
  "Internal Update Clock"

 NIFGEN_VAL_EXTERNAL (1)
  "External update clock given on the IO front panel connector"

 NIFGEN_VAL_CLK_IN (1202)
  "CLK IN front panel connector"

 NIFGEN_VAL_DDC_CLK_IN (1203)
  "DDC CLK IN line of the Digital Data & Control front panel connector"

 NIFGEN_VAL_PXI_STAR (131)
  "PXI Star Trigger Line"

 NIFGEN_VAL_RTSI_0 (141)
  "RTSI 0"

 NIFGEN_VAL_RTSI_1 (142)
  "RTSI 1"

 NIFGEN_VAL_RTSI_2 (143)
  "RTSI 2"

 NIFGEN_VAL_RTSI_3 (144)
  "RTSI 3"

 NIFGEN_VAL_RTSI_4 (145)
  "RTSI 4"

 NIFGEN_VAL_RTSI_5 (146)
  "RTSI 5"

 NIFGEN_VAL_RTSI_6 (147)
  "RTSI 6"

 NIFGEN_VAL_RTSI_7  (1010)
  "RTSI 7"

 NIFGEN_VAL_TTL1 (112)
  "TTL1"

 NIFGEN_VAL_TTL2 (113)
  "TTL2"

 NIFGEN_VAL_TTL3 (114)
  "TTL3"

 NIFGEN_VAL_TTL4 (115)
  "TTL4"

 NIFGEN_VAL_TTL5 (116)
  "TTL5"

 NIFGEN_VAL_TTL6 (117)
  "TTL6"

v attrVideoWaveformTypeRangeTable DataType="i" 
 NIFGEN_VAL_PAL_B (0)
  "PAL B Video Type"

 NIFGEN_VAL_PAL_D (1)
  "PAL D Video Type"

 NIFGEN_VAL_PAL_G (2)
  "PAL G Video Type"

 NIFGEN_VAL_PAL_H (3)
  "PAL H Video Type"

 NIFGEN_VAL_PAL_I (4)
  "PAL I Video Type"

 NIFGEN_VAL_PAL_M (5)
  "PAL M Video Type"

 NIFGEN_VAL_PAL_N (6)
  "PAL N Video Type"

 NIFGEN_VAL_NTSC_M (7)
  "NTSC M Video Type"


v Boolean_values DataType="i" 
 VI_TRUE (1)
  "True"

 VI_FALSE (0)
  "False"


v RouteFromRT DataType="i" 
 NIFGEN_VAL_NONE (1000)
  "Route nothing to the RTSI line. Clears the line."

 NIFGEN_VAL_MARKER (1001)
  "The marker as specified by the markers parameter "
  "in the niFgen_CreateAdvancedArbSequence function."

 NIFGEN_VAL_PLL_REF_SOURCE (1003)
  "PLL Reference clock"

 NIFGEN_VAL_UPDATE_CLOCK (1017)
  "Sample clock"

 NIFGEN_VAL_SYNC_OUT (1002)
  "The SYNC signal that normally appears "
  "on the SYNC OUT front panel connector."

 NIFGEN_VAL_OUT_START_TRIGGER (1004)
  "The trigger generated at the start of the sequence. "
  "Call the niFgen_ConfigureTriggerSource function to "
  "receive this trigger."

 NIFGEN_VAL_BOARD_CLOCK (1006)
  "The signal generator board clock, which is "
  "20 MHz for the NI PCI-5401/5411/5431. The "
  "NI PXI-5404 has a 20 MHz board clock, and the "
  "NI PXI-5421 has integer divisors of 100 MHz. "
  "The NI PXI-5401/5411/5431 does not support "
  "routing a Board Clock to RTSI lines or "
  "front panel connectors."

 NIFGEN_VAL_SYNCHRONIZATION (1007)
  "A synchronization strobe used to guarantee "
  "absolute synchronization between two or more "
  "signal generators. Call the niFgen_ConfigureSynchronization"
  " function to receive the strobe."
 
 NIFGEN_VAL_SOFTWARE_TRIG (2)
  "Software trigger"

 NIFGEN_VAL_REF_IN (1200)
  "Reference clock in front panel connector"

 NIFGEN_VAL_PXI_CLK10 (1201)
  "PXI 10 MHz backplane Reference clock"

 NIFGEN_VAL_PXI_STAR (131)
  "PXI star trigger line"

 NIFGEN_VAL_PFI_0 (1011)
  "PFI 0"
 
 NIFGEN_VAL_RTSI_0 (141)
  "RTSI 0 or PXI_Trig 0"

 NIFGEN_VAL_RTSI_1 (142)
  "RTSI 1 or PXI_Trig 1"

 NIFGEN_VAL_RTSI_2 (143)
  "RTSI 2 or PXI_Trig 2"

 NIFGEN_VAL_RTSI_3 (144)
  "RTSI 3 or PXI_Trig 3"

 NIFGEN_VAL_RTSI_4 (145)
  "RTSI 4 or PXI_Trig 4"

 NIFGEN_VAL_RTSI_5 (146)
  "RTSI 5 or PXI_Trig 5"

 NIFGEN_VAL_RTSI_6 (147)
  "RTSI 6 or PXI_Trig 6"

 NIFGEN_VAL_RTSI_7  (1010)
  "RTSI 7 or PXI_Trig 7"

 NIFGEN_VAL_REF_CLOCK_RTSI_CLOCK (101)
  "RTSI clock"

 NIFGEN_VAL_CLOCK_OUT (1009)
  "Clock out"

 NIFGEN_VAL_ONBOARD_REFERENCE_CLOCK (1019)
  "Onboard Reference clock"

v RouteToRT DataType="i" 
 NIFGEN_VAL_RTSI_0 (141)
  "RTSI 0 or PXI_Trig 0"

 NIFGEN_VAL_RTSI_1 (142)
  "RTSI 1 or PXI_Trig 1"

 NIFGEN_VAL_RTSI_2 (143)
  "RTSI 2 or PXI_Trig 2"

 NIFGEN_VAL_RTSI_3 (144)
  "RTSI 3 or PXI_Trig 3"

 NIFGEN_VAL_RTSI_4 (145)
  "RTSI 4 or PXI_Trig 4"

 NIFGEN_VAL_RTSI_5 (146)
  "RTSI 5 or PXI_Trig 5"

 NIFGEN_VAL_RTSI_6 (147)
  "RTSI 6 or PXI_Trig 6"

 NIFGEN_VAL_RTSI_7  (1010)
  "RTSI 7 or PXI_Trig 7"

 NIFGEN_VAL_REF_CLOCK_RTSI_CLOCK (101)
  "RTSI clock"

 NIFGEN_VAL_REF_OUT (1008)
  "Reference clock out front panel connector"

 NIFGEN_VAL_PFI_0 (1011)
  "PFI 0"

 NIFGEN_VAL_PFI_1 (1012)
  "PFI 1"

 NIFGEN_VAL_PFI_4 (1015)
  "PFI 4"

 NIFGEN_VAL_PFI_5 (1016)
  "PFI 5"

 NIFGEN_VAL_PXI_STAR (131)
  "PXI star"

v attrAnalogPathRangeTable DataType="i" 
 NIFGEN_VAL_MAIN_ANALOG_PATH (0)
  "Specifies use of the main path. "
  "NI-FGEN chooses the amplifier based on the user-specified gain."

 NIFGEN_VAL_DIRECT_ANALOG_PATH (1)
  "Specifies use of the direct path."

 NIFGEN_VAL_FIXED_LOW_GAIN_ANALOG_PATH (2)
  "Specifies use of the low-gain amplifier in the main path, no matter "
  "what value the user specifies for gain. This setting limits the output "
  "range."

 NIFGEN_VAL_FIXED_HIGH_GAIN_ANALOG_PATH (3)
  "Specifies use of the high-gain amplifier in the main path."

v attrCalADCInputRangeTable DataType="i" 
 NIFGEN_VAL_ANALOG_OUTPUT (0)
  "Specifies that the ADC measures the analog output."

 NIFGEN_VAL_INTERNAL_VOLTAGE_REFERENCE (1)
  "Specifies that the ADC measures the internal voltage reference."

 NIFGEN_VAL_GROUND (2)
  "Specifies that the ADC measures the ground voltage."

 NIFGEN_VAL_ANALOG_OUTPUT_DIFFERENTIAL (3)
  "Specifies that the ADC measures the differential analog output."

 NIFGEN_VAL_ANALOG_OUTPUT_PLUS (4)
  "Specifies that the ADC measures the positive differential analog output."

 NIFGEN_VAL_ANALOG_OUTPUT_MINUS (5)
  "Specifies that the ADC measures the negative differential analog output."

 NIFGEN_VAL_ANALOG_OUTPUT_IDLE (6)
  "Specifies that the ADC measures the idle analog output."

v attrOperationModeRangeTable DataType="i" 
 NIFGEN_VAL_OPERATE_CONTINUOUS (0)
  "Continuous Operation"

v attrDataProcessingModeRangeTable DataType="i"
 NIFGEN_VAL_OSP_REAL (0)
  "The waveform data points are real numbers (I data)."

 NIFGEN_VAL_OSP_COMPLEX (1)
  "The waveform data points are complex numbers (I/Q data)."

v attrOSPModeRangeTable DataType="i"
 NIFGEN_VAL_OSP_IF (0)
 "The OSP block generates intermediate frequency (IF) data."

 NIFGEN_VAL_OSP_BASEBAND (1)
 "The OSP block generates baseband data."

v attrFIRFilterTypeRangeTable DataType="i"
 NIFGEN_VAL_OSP_FLAT (0)
  "Applies a flat filter to the data with the passband value specified "
  "in the NIFGEN_ATTR_OSP_FIR_FILTER_FLAT_PASSBAND attribute." 

 NIFGEN_VAL_OSP_RAISED_COSINE (1)
  "Applies a raised cosine filter to the data with the alpha value "
  "specified in the NIFGEN_ATTR_OSP_FIR_FILTER_RAISED_COSINE_ALPHA attribute."

 NIFGEN_VAL_OSP_ROOT_RAISED_COSINE (2)
  "Applies a root raised cosine filter to the data with the alpha value "
  "specified in the NIFGEN_ATTR_OSP_FIR_FILTER_ROOT_RAISED_COSINE_ALPHA attribute."

 NIFGEN_VAL_OSP_GAUSSIAN (3)
  "Applies a Gaussian filter to the data with the BT value specified in the "
  "NIFGEN_ATTR_OSP_FIR_FILTER_GAUSSIAN_BT attribute."

 NIFGEN_VAL_OSP_CUSTOM (4)   
  "Applies a custom filter to the data. If NIFGEN_VAL_OSP_CUSTOM is selected, "
  "you must provide a set of FIR filter coefficients with the "
  "niFgen_ConfigureCustomFIRFilterCoefficients function."

v attrOutputImpedanceRangeTable DataType="d" 
 NIFGEN_VAL_50_OHMS (50.0)
  "The signal generator uses 50.0 ohms of output impedance."

 NIFGEN_VAL_75_OHMS (75.0)
  "The signal generator uses 75.0 ohms of output impedance."

v attrOSPErrorReportingRangeTable DataType="i" 
 NIFGEN_VAL_ERROR_REPORTING_ERROR (0)
  "NI-FGEN returns errors whenever an overflow has occurred in the OSP block."

 NIFGEN_VAL_ERROR_REPORTING_DISABLED (2)
  "NI-FGEN does not return errors when an overflow occurs in the OSP block."

v attrOSPOverflowStatusRangeTable DataType="i" 
 NIFGEN_VAL_OSP_OVERFLOW_NONE (0)
  "None - 0x0"

 NIFGEN_VAL_OSP_OVERFLOW_PRE_FILTER_GAIN_I (1)
  "Pre-filter gain I - 0x1"

 NIFGEN_VAL_OSP_OVERFLOW_PRE_FILTER_GAIN_Q (2)
  "Pre-filter gain Q - 0x2"

 NIFGEN_VAL_OSP_OVERFLOW_PRE_FILTER_OFFSET_I (4)
  "Pre-filter offset I - 0x4"

 NIFGEN_VAL_OSP_OVERFLOW_PRE_FILTER_OFFSET_Q (8)
  "Pre-filter offset Q - 0x8"

 NIFGEN_VAL_OSP_OVERFLOW_FIR_FILTER_I (16)
  "FIR Filter I - 0x10"

 NIFGEN_VAL_OSP_OVERFLOW_FIR_FILTER_Q (32)
  "FIR Filter Q - 0x20"

 NIFGEN_VAL_OSP_OVERFLOW_CIC_FILTER_I (64)
  "CIC Filter I - 0x40"

 NIFGEN_VAL_OSP_OVERFLOW_CIC_FILTER_Q (128)
  "CIC Filter Q - 0x80"

 NIFGEN_VAL_OSP_OVERFLOW_COMPLEX_DATA (256)
  "Complex data - 0x100"


v attrScriptTriggerType DataType="i"

 NIFGEN_VAL_TRIG_NONE (101L)
 "No trigger is configured. Signal generation starts immediately."

 NIFGEN_VAL_DIGITAL_EDGE (102L)
 "Trigger is asserted when a digital edge is detected."

 NIFGEN_VAL_DIGITAL_LEVEL (103L)
 "Trigger is asserted when a digital level is detected."

 NIFGEN_VAL_SOFTWARE_EDGE (104L)
 "Trigger is asserted when a software edge is detected."

v attrTriggerTypeEdge DataType="i"

 NIFGEN_VAL_TRIG_NONE (101L)
 "None"

 NIFGEN_VAL_DIGITAL_EDGE (102L)
 "Digital Edge"

 NIFGEN_VAL_SOFTWARE_EDGE (104L)
 "Software Edge"

 NIFGEN_VAL_P2P_ENDPOINT_FULLNESS (106L)
 "P2P Endpoint Fullness"

v attrTriggerDigitalEdge DataType="i"

 NIFGEN_VAL_RISING_EDGE (101L)
 "Rising Edge"

 NIFGEN_VAL_FALLING_EDGE (102L)
 "Falling Edge"

v attrTriggerDigitalLevel DataType="i"

 NIFGEN_VAL_ACTIVE_HIGH (101L)
 "High Level"

 NIFGEN_VAL_ACTIVE_LOW (102L)
 "Low Level"

v attrEventActiveLevel DataType="i"

 NIFGEN_VAL_ACTIVE_HIGH (101L)
 "When the operation is ready to start, the Ready for Start "
 "event level is high."

 NIFGEN_VAL_ACTIVE_LOW (102L)
 "When the operation is ready to start, the Ready for Start "
 "event level is low."

v attrToggleInitialState DataType="i"

 NIFGEN_VAL_HIGH (101L)
 "Sets the initial state of the Marker event to high."

 NIFGEN_VAL_LOW (102L)
 "Sets the initial state of the Marker event to low."

v attrEventOutputBehavior DataType="i"

 NIFGEN_VAL_PULSE (101L)
 "Triggers a pulse for a specified period of time."

 NIFGEN_VAL_LEVEL (102L)
 "Shifts high or low while the event is active, depending "
 "on the active state you specify."

v attrPulseWidthUnits DataType="i"

 NIFGEN_VAL_SAMPLE_CLOCK_PERIODS (101L)
 "Specifies the pulse width in Sample clock periods."

 NIFGEN_VAL_SECONDS (102L)
 "Specifies the pulse width in seconds."

v attrTerminalConfiguration DataType="i"

 NIFGEN_VAL_SINGLE_ENDED (300L)
 "Single-ended operation"

 NIFGEN_VAL_DIFFERENTIAL (301L)
 "Differential operation"

v attrIdleAndWaitBehavior DataType="i"

 NIFGEN_VAL_HOLD_LAST_VALUE (400L)
 "While in an Idle or Wait state, the output signal remains "
 "at the last voltage generated prior to entering the state."

 NIFGEN_VAL_JUMP_TO_VALUE (401L)
 "While in an Idle or Wait state, the output signal remains "
 "at the value configured in the Idle or Wait value attribute."
 
v attrP2PAddressTypeTable DataType="i" 
 NIFGEN_VAL_ADDR_PHYSICAL (0)
  "Physical"
 NIFGEN_VAL_ADDR_VIRTUAL (1)
  "Physical"

0 niFgen_SetAttributeViInt32     3 4 false s  DataType="ViInt32"
0 niFgen_GetAttributeViInt32     3 4 false g  DataType="ViInt32"
0 niFgen_CheckAttributeViInt32   3 4 false s  DataType="ViInt32"
0 niFgen_SetAttributeViInt64     3 4 false s  DataType="ViInt64"
0 niFgen_GetAttributeViInt64     3 4 false g  DataType="ViInt64"
0 niFgen_CheckAttributeViInt64   3 4 false s  DataType="ViInt64"
0 niFgen_SetAttributeViReal64    3 4 false s  DataType="ViReal64"
0 niFgen_GetAttributeViReal64    3 4 false g  DataType="ViReal64"
0 niFgen_CheckAttributeViReal64  3 4 false s  DataType="ViReal64"
0 niFgen_SetAttributeViString    3 4 false s  DataType="ViString"
0 niFgen_GetAttributeViString    3 5 false g  DataType="ViString"
0 niFgen_CheckAttributeViString  3 4 false s  DataType="ViString"
0 niFgen_SetAttributeViBoolean   3 4 false s  DataType="ViBoolean"
0 niFgen_GetAttributeViBoolean   3 4 false g  DataType="ViBoolean"
0 niFgen_CheckAttributeViBoolean 3 4 false s  DataType="ViBoolean"
0 niFgen_SetAttributeViSession   3 4 false s  DataType="ViSession"
0 niFgen_GetAttributeViSession   3 4 false g  DataType="ViSession"
0 niFgen_CheckAttributeViSession 3 4 false s  DataType="ViSession"
0 niFgen_ResetAttribute          3 3 false s


1 all "Output" 
 "Attributes used to control and configure the analog or digital output of the signal generator."

2 all "Output Mode" NIFGEN_ATTR_OUTPUT_MODE ViInt32 gs attrOutputModeRangeTable 
 "Sets which output mode the signal generator will use. The value you specify determines which functions and attributes you use to configure the waveform the signal generator produces.\n"
 "NOTE: The signal generator must not be in the Generating state when you change this attribute. To change the device configuration, call niFgen_AbortGeneration or wait for the generation to complete."

2 all "Output Enabled" NIFGEN_ATTR_OUTPUT_ENABLED ViBoolean gs Boolean_values 
 "This channel-based attribute specifies whether the signal that the signal generator produces appears at the output connector."

2 all "Digital Gain" NIFGEN_ATTR_DIGITAL_GAIN ViReal64 gs 
 "Specifies a factor by which the signal generator digitally multiplies generated data before converting it to an analog signal in the DAC. For a digital gain greater than 1.0, the product of digital gain times the generated data must be inside the range plus or minus 1.0 (assuming floating point data).  If the product exceeds these limits, the signal generator clips the output signal, and an error results.\n\n"
 "Some signal generators support both digital gain and an analog gain (analog gain is specified with the NIFGEN_ATTR_FUNC_AMPLITUDE attribute or the NIFGEN_ATTR_ARB_GAIN attribute). Digital gain can be changed during generation without the glitches that may occur when changing analog gains, due to relay switching. However, the DAC output resolution is a function of analog gain, so only analog gain makes full use of the resolution of the DAC."

2 all "Analog Path" NIFGEN_ATTR_ANALOG_PATH ViInt32 gs attrAnalogPathRangeTable
 "Specifies the analog signal path that should be used. The main path allows you to configure gain, offset, analog filter status, output impedance, and output enable. The main path has two amplifier options, high- and low-gain.\n\n"
 "The direct path presents a much smaller gain range, and you cannot adjust offset or the filter status. The direct path also provides a smaller output range but also lower distortion. NI-FGEN normally chooses the amplifier based on the user-specified gain."

2 all "Load Impedance" NIFGEN_ATTR_LOAD_IMPEDANCE ViReal64 gs
 "This channel-based attribute specifies the load impedance connected to the analog output of the channel. If you set this attribute to NIFGEN_VAL_MATCHED_LOAD_IMPEDANCE (-1.0), NI-FGEN assumes that the load impedance matches the output impedance. NI-FGEN compensates to give the desired peak-to-peak voltage amplitude or arbitrary gain (relative to 1 V)."

2 all "Output Impedance" NIFGEN_ATTR_OUTPUT_IMPEDANCE ViReal64 gs attrOutputImpedanceRangeTable
 "This channel-based attribute specifies the signal generator output impedance at the output connector. NI signal sources modules have an output impedance of 50 ohms and an optional 75 ohms on select modules. If the load impedance matches the output impedance, then the voltage at the signal output connector is at the needed level. The voltage at the signal output connector varies with load output impedance, up to doubling the voltage for a high-impedance load.\n"

2 all "Terminal Configuration" NIFGEN_ATTR_TERMINAL_CONFIGURATION ViInt32 gs attrTerminalConfiguration
 "Specifies whether gain and offset values will be analyzed based on single-ended or differential operation."

2 all "Common Mode Offset" NIFGEN_ATTR_COMMON_MODE_OFFSET ViReal64 gs
 "Specifies, in volts, the value the signal generator adds to or subtracts from the arbitrary waveform data. This attribute applies only when you set the NIFGEN_ATTR_TERMINAL_CONFIGURATION attribute to NIFGEN_VAL_DIFFERENTIAL. Common mode offset is applied to the signals generated at each differential output terminal."

2 all "Channel Delay" NIFGEN_ATTR_CHANNEL_DELAY ViReal64 gs
 "Specifies, in seconds, the delay to apply to the analog output of the channel specified by the channel string. You can use the channel delay to configure the timing relationship between channels on a multichannel device. Values for this attribute can be zero or positive. A value of zero indicates that the channels are aligned. A positive value delays the analog output by the specified number of seconds."

2 all "Absolute Delay" NIFGEN_ATTR_ABSOLUTE_DELAY ViReal64 gs 
 "Specifies the sub-Sample Clock delay, in seconds, to apply to the waveform. Use this attribute to reduce the trigger jitter when synchronizing multiple devices with NI-TClk. This attribute can also help maintain synchronization repeatability by writing the absolute delay value of a previous measurement to the current session.\n\n"
 "To set this attribute, the waveform generator must be in the Idle (Configuration) state.\n\n"
 "NOTE: If this attribute is set, NI-TClk cannot perform any sub-Sample Clock adjustment.\n\n"
 "Units: seconds (s)\n\n"
 "Valid Values: Plus or minus half of one Sample Clock period\n\n"
 "Default Value: 0.0\n\n"
 "Supported Devices: PXIe-5413/5423/5433\n\n"
 
2 all "Filters"
 ""

3 all "Analog Filter Enabled" NIFGEN_ATTR_ANALOG_FILTER_ENABLED ViBoolean gs Boolean_values 
 "Controls whether the signal generator applies to an analog filter to the output signal. This attribute is valid in arbitrary waveform, arbitrary sequence, and script modes. This attribute can also be used in standard function and frequency list modes for user-defined waveforms."

3 all "Digital Filter Enabled" NIFGEN_ATTR_DIGITAL_FILTER_ENABLED ViBoolean gs Boolean_values 
 "Controls whether the signal generator applies a digital filter to the output signal. This attribute is valid in arbitrary waveform, arbitrary sequence, and script modes. This attribute can also be used in standard function and frequency list modes for user-defined waveforms."

3 all "Digital Filter Interpolation Factor" NIFGEN_ATTR_DIGITAL_FILTER_INTERPOLATION_FACTOR ViReal64 gs 
 "This attribute only affects the device when NIFGEN_ATTR_DIGITAL_FILTER_ENABLED is set to VI_TRUE. If you do not set this attribute directly, NI-FGEN automatically selects the maximum interpolation factor allowed for the current sample rate. Valid values are 2, 4, and 8."

3 all "Flatness Correction Enabled" NIFGEN_ATTR_FLATNESS_CORRECTION_ENABLED ViBoolean gs Boolean_values
 "When VI_TRUE, the signal generator applies a flatness correction factor to the generated sine wave in order to ensure the same output power level at all frequencies.\n\n"
 "This attribute should be set to VI_FALSE when performing Flatness Calibration."

2 all "Data Mask" 
 ""

3 all "Analog Data Mask" NIFGEN_ATTR_ANALOG_DATA_MASK ViInt32 gs
 "Specifies the mask to apply to the analog output. The masked data is replaced with the data in NIFGEN_ATTR_ANALOG_STATIC_VALUE."

3 all "Analog Static Value" NIFGEN_ATTR_ANALOG_STATIC_VALUE ViInt32 gs
 "Specifies the static value that replaces data masked by NIFGEN_ATTR_ANALOG_DATA_MASK."

3 all "Digital Data Mask" NIFGEN_ATTR_DIGITAL_DATA_MASK ViInt32 gs
 "Specifies the mask to apply to the output on the digital connector. The masked data is replaced with the data in NIFGEN_ATTR_DIGITAL_STATIC_VALUE."

3 all "Digital Static Value" NIFGEN_ATTR_DIGITAL_STATIC_VALUE ViInt32 gs
 "Specifies the static value that replaces data masked by NIFGEN_ATTR_DIGITAL_DATA_MASK."

2 all "Advanced"
 "Advanced Output attributes"

3 all "Digital Pattern Enabled" NIFGEN_ATTR_DIGITAL_PATTERN_ENABLED ViBoolean gs Boolean_values 
 "Controls whether the signal generator generates a digital pattern of the output signal."

3 all "Aux Power Enabled" NIFGEN_ATTR_AUX_POWER_ENABLED ViBoolean gs Boolean_values
 "Controls the specified auxiliary power pin. Setting this attribute to TRUE energizes the auxiliary power when the session is committed. When this attribute is FALSE, the power pin of the connector outputs no power."

3 all "Idle Behavior" NIFGEN_ATTR_IDLE_BEHAVIOR ViInt32 gs attrIdleAndWaitBehavior
 "Specifies the behavior of the output during the Idle state.  The output can be configured to hold the last generated voltage before entering the Idle state or jump to the Idle Value."

3 all "Idle Value" NIFGEN_ATTR_IDLE_VALUE ViInt32 gs 
 "Specifies the value to generate in the Idle state.  The Idle Behavior must be configured to jump to this value."

3 all "Wait Behavior" NIFGEN_ATTR_WAIT_BEHAVIOR ViInt32 gs attrIdleAndWaitBehavior
 "Specifies the behavior of the output while waiting for a script trigger or during a wait instruction.  The output can be configured to hold the last generated voltage before waiting or jump to the Wait Value."

3 all "Wait Value" NIFGEN_ATTR_WAIT_VALUE ViInt32 gs 
 "Specifies the value to generate while waiting.  The Wait Behavior must be configured to jump to this value."

1 all "Arbitrary Waveform"
 "Controls Arbitrary Waveform Generator attributes.

2 all "Gain" NIFGEN_ATTR_ARB_GAIN ViReal64 gs 
 "Specifies the factor by which the signal generator scales the arbitrary waveform data. When you create arbitrary waveforms, you must first normalize the data points to the range -1.0 to +1.0. Use this attribute to scale the arbitrary waveform to other ranges.\n\n"
 "For example, when you set this attribute to 2.0, the output signal ranges from -2.0 V to +2.0 V.\n\n"
 "Use this attribute when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_ARB or NIFGEN_VAL_OUTPUT_SEQ."

2 all "Offset" NIFGEN_ATTR_ARB_OFFSET ViReal64 gs 
 "Specifies the value that the signal generator adds to the arbitrary waveform data. When you create arbitrary waveforms, you must first normalize the data points to the range -1.0 to +1.0. Use this attribute to shift the arbitrary waveform range.\n\n"
 "For example, when you set this attribute to 1.0, the output signal ranges from 2.0 V to 0.0 V.\n\n"
 "Use this attribute when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_ARB or NIFGEN_VAL_OUTPUT_SEQ.\n\n"
 "Units: Volts"


2 all "Arbitrary Waveform Mode" 
 "Attributes for generating arbitrary waveform output. Use this group of attributes when you set NIFGEN_ATTR_OUTPUT_MODE to NIFGEN_VAL_OUTPUT_ARB. You can use niFgen_ConfigureArbWaveform, niFgen_ConfigureSampleRate, and niFgen_QueryArbWfmCapabilities to configure these attributes." 

3 all "Arbitrary Waveform Handle" NIFGEN_ATTR_ARB_WAVEFORM_HANDLE ViInt32 gs 
 "Selects which arbitrary waveform the signal generator produces. You can create multiple arbitrary waveforms using one of the following niFgen Create Waveform functions: \n"
 "   niFgen_CreateWaveformF64\n"
 "   niFgen_CreateWaveformI16\n"
 "   niFgen_CreateWaveformFromFileI16\n"
 "   niFgen_CreateWaveformFromFileF64\n"
 "   niFgen_CreateWaveformFromFileHWS\n\n"
 "These functions return a handle that you can use to identify the particular waveform. To configure the signal generator to produce a particular waveform, set this attribute to the waveform handle.\n\n"
 "Use this attribute only when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_ARB."

3 all "Marker Position" NIFGEN_ATTR_ARB_MARKER_POSITION ViInt32 gs
 "Specifies the position for a marker to be asserted in the arbitrary waveform. This attribute defaults to -1 when no marker position is specified. Use this attribute when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_ARB.\n\n"
 "Use niFgen_ExportSignal to export the marker signal."

3 all "Repeat Count" NIFGEN_ATTR_ARB_REPEAT_COUNT ViInt32 gs
 "Specifies number of times to repeat the arbitrary waveform when the triggerMode parameter of nifgen_ConfigureTriggerMode is set to NIFGEN_VAL_SINGLE or NIFGEN_VAL_STEPPED. This attribute is ignored if the triggerMode parameter is set to NIFGEN_VAL_CONTINUOUS or NIFGEN_VAL_BURST. Use this attribute when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_ARB.\n"
 "When used during streaming, this attribute specifies the number of times to repeat the streaming waveform (the onboard memory allocated for streaming).  For more information about streaming, refer to the Streaming topic."

2 all "Arbitrary Sequence Mode"
 "Attributes for generating arbitrary sequence output.\n"
 "Use this group of attributes when you set NIFGEN_ATTR_OUTPUT_MODE to NIFGEN_VAL_OUTPUT_SEQ. These attributes are used in addition to the attributes in the Arbitrary Waveform Output group. You can use niFgen_ConfigureArbSequence, niFgen_ConfigureSampleRate, and niFgen_QueryArbSeqCapabilities to configure these attributes."

3 all "Arbitrary Sequence Handle" NIFGEN_ATTR_ARB_SEQUENCE_HANDLE ViInt32 gs 
 "This channel-based attribute identifies which sequence the signal generator produces. You can create multiple sequences using niFgen_CreateArbSequence. niFgen_CreateArbSequence returns a handle that you can use to identify the particular sequence. To configure the signal generator to produce a particular sequence, set this attribute to the sequence handle.\n\n"
 "Use this attribute only when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_SEQ."

3 all "Max Number of Sequences" NIFGEN_ATTR_MAX_NUM_SEQUENCES ViInt32 g 
 "Returns the maximum number of arbitrary sequences that the signal generator allows. Typically, this value is constant for the signal generator."

3 all "Max Sequence Length" NIFGEN_ATTR_MAX_SEQUENCE_LENGTH ViInt32 g 
 "Returns the maximum number of arbitrary waveforms that the signal generator allows in a sequence. Typically, this value is constant for the signal generator."
 
3 all "Min Sequence Length" NIFGEN_ATTR_MIN_SEQUENCE_LENGTH ViInt32 g 
 "Returns the minimum number of arbitrary waveforms that the signal generator allows in a sequence. Typically, this value is constant for the signal generator."

3 all "Max Loop Count" NIFGEN_ATTR_MAX_LOOP_COUNT ViInt32 g 
 "Returns the maximum number of times that the signal generator can repeat a waveform in a sequence. Typically, this value is constant for the signal generator."

2 all "Script Mode" 
 "Attributes for generating script output. Use this group of attributes when you set NIFGEN_ATTR_OUTPUT_MODE to NIFGEN_VAL_OUTPUT_SCRIPT."

3 all "Script to Generate" NIFGEN_ATTR_SCRIPT_TO_GENERATE ViString gs 
 "Specifies which script the generator produces. To configure the generator to run a particular script, set this attribute to the name of the script. Use niFgen_WriteScript to create multiple scripts. Use this attribute when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_SCRIPT.\n\n"
 "NOTE: The signal generator must not be in the Generating state when you change this attribute. To change the device configuration, call niFgen_AbortGeneration or wait for the generation to complete."

2 all "Capabilities"
 ""

3 all "Waveform Quantum" NIFGEN_ATTR_WAVEFORM_QUANTUM ViInt32 g 
 "The size of each arbitrary waveform must be a multiple of a quantum value. This attribute returns the quantum value that the signal generator allows.\n\n"
 "For example, when this attribute returns a value of 8, all waveform sizes must be a multiple of 8. Typically, this value is constant for the signal generator."

3 all "Max Number of Waveforms" NIFGEN_ATTR_MAX_NUM_WAVEFORMS ViInt32 g 
 "Returns the maximum number of arbitrary waveforms that the signal generator allows. Typically, this value is constant for the signal generator."

3 all "Min Waveform Size" NIFGEN_ATTR_MIN_WAVEFORM_SIZE ViInt32 g 
 "Returns the minimum number of points that the signal generator allows in an arbitrary waveform. Typically, this value is constant for the signal generator."

3 all "Max Waveform Size" NIFGEN_ATTR_MAX_WAVEFORM_SIZE ViInt32 g 
 "Returns the size, in samples, of the largest waveform that can be created. This attribute reflects the space currently available, taking into account previously allocated waveforms and instructions."

2 all "Data Transfer"
 "Attributes that influence the movement of data from disk or from memory to the instrument's onboard memory."

3 all "Data Transfer Block Size" NIFGEN_ATTR_DATA_TRANSFER_BLOCK_SIZE ViInt32 gs
 "The number of samples at a time to download to onboard memory. Useful when the total data to be transferred to onboard memory is large."

3 all "File Transfer Block Size" NIFGEN_ATTR_FILE_TRANSFER_BLOCK_SIZE ViInt32 gs
 "The number of samples at a time to read from the file and download to onboard memory. Used in conjunction with the Create From File and Write From File functions."

3 all "Maximum Bandwidth" NIFGEN_ATTR_DATA_TRANSFER_MAXIMUM_BANDWIDTH ViReal64 gs
 "Specifies the maximum amount of bus bandwidth (in bytes per second) to use for data transfers. The signal generator limits data transfer speeds on the PCIe bus to the value you specify for this attribute. Set this attribute to optimize bus bandwidth usage for multi-device streaming applications by preventing the signal generator from consuming all of the available bandwidth on a PCI express link when waveforms are being written" to the onboard memory of the device."

3 all "Direct DMA"
 "Attributes related to data transfer from a disk array or host memory using Direct DMA. Used for high-speed transfer of data to the instrument's onboard memory."

4 all "Direct DMA Enabled" NIFGEN_ATTR_DIRECT_DMA_ENABLED ViBoolean gs Boolean_values
 "Enable the device for Direct DMA writes. When enabled, all Create Waveform and Write Waveform function calls that are given a data address in the Direct DMA Window will download data residing on the Direct DMA device to the instrument's onboard memory."

4 all "Window Address" NIFGEN_ATTR_DIRECT_DMA_WINDOW_ADDRESS ViInt32 gs
 "Specifies the window address (beginning of window) of the waveform data source. This window address is specified by your Direct DMA-compatible data source."

4 all "Window Size" NIFGEN_ATTR_DIRECT_DMA_WINDOW_SIZE ViInt32 gs
 "Specifies the size of the memory window in bytes (not samples) provided by your Direct DMA-compatible data source."

3 all "Streaming"
  "Attributes for streaming data directly from disk or host memory."

4 all "Streaming Waveform Name" NIFGEN_ATTR_STREAMING_WAVEFORM_NAME ViString gs 
  "Specifies the name of the waveform used to continuously stream data during generation. This attribute defaults to /"/" when no streaming waveform is specified.\n\n"
  "Use in conjunction with NIFGEN_ATTR_STREAMING_SPACE_AVAILABLE_IN_WAVEFORM."

4 all "Streaming Waveform Handle" NIFGEN_ATTR_STREAMING_WAVEFORM_HANDLE ViInt32 gs
 "Specifies the waveform handle of the waveform used to continuously stream data during generation. This attribute defaults to -1 when no streaming waveform is specified.\n\n"
 "Used in conjunction with NIFGEN_ATTR_STREAMING_SPACE_AVAILABLE_IN_WAVEFORM."

4 all "Space Available in Streaming Waveform" NIFGEN_ATTR_STREAMING_SPACE_AVAILABLE_IN_WAVEFORM ViInt32 g
 "Indicates the space available (in samples) in the streaming waveform for writing new data. During generation, this available space may be in multiple locations with, for example, part of the available space at the end of the streaming waveform and the rest at the beginning. In this situation, writing a block of waveform data the size of the  total space available in the streaming waveform causes NI-FGEN to return an error, as  NI-FGEN will not wrap the data from the end of the waveform to the beginning and cannot write data past the end of the waveform buffer.\n"
 "To avoid writing data past the end of the waveform, write new data to the waveform in a fixed size that is an integer divisor of the total size of the streaming waveform.\n\n"
 "Used in conjunction with the NIFGEN_ATTR_STREAMING_WAVEFORM_HANDLE or NIFGEN_ATTR_STREAMING_WAVEFORM_NAME attributes."

4 all "Streaming Write Timeout" NIFGEN_ATTR_STREAMING_WRITE_TIMEOUT ViReal64 gs
 "Specifies the maximum amount of time allowed to complete a streaming write operation."

3 all "Advanced"
 "Advanced Data Transfer attributes."

4 all "Maxmimum In-Flight Read Requests" NIFGEN_ATTR_DATA_TRANSFER_MAXIMUM_IN_FLIGHT_READS ViInt32 gs
 "Specifies the maximum number of concurrent PCI Express read requests the signal generator can issue.\n\n"
 "When transferring data from computer memory to device onboard memory across the PCI Express bus, the signal generator can issue multiple memory reads at the same time. In general, the larger the number of read requests, the more efficiently the device uses the bus because the multiple read requests keep the data flowing, even in a PCI Express topology that has high latency due to PCI Express switches in the data path. Most NI devices can issue a large number of read requests (typically 8 or 16). By default, this attribute is set to the highest value the signal generator supports.\n\n"
 "If other devices in your system cannot tolerate long data latencies, it may be helpful to decrease the number of in-flight read requests the NI signal generator issues. This helps to reduce the amount of data the signal generator reads at one time."

4 all "PCI DMA Optimizations Enabled" NIFGEN_ATTR_PCI_DMA_OPTIMIZATIONS_ENABLED ViBoolean gs
 "Controls whether or not NI-FGEN allows performance optimizations for DMA transfers.\n"
 "This attribute is only valid for PCI and PXI SMC-based devices.\n"
 "This attribute is enabled (VI_TRUE) by default, and NI recommends leaving it enabled."

4 all "Preferred Packet Size" NIFGEN_ATTR_DATA_TRANSFER_PREFERRED_PACKET_SIZE ViInt32 gs
 "Specifies the preferred size of the data field in a PCI Express read request packet. In general, the larger the packet size, the more efficiently the device uses the bus. By default, NI signal generators use the largest packet size allowed by the system. However, due to different system implementations, some systems may perform better with smaller packet sizes.\n"
 "Recommended values for this attribute are powers of two between 64 and 512.\n\n"
 "NOTES: \n\n"
 "In some cases, the signal generator generates packets smaller than  the preferred size you set with this attribute.\n"
 "You cannot change this attribute while the device is generating a waveform. If you want to change the device configuration, call the niFgen_AbortGeneration function or wait for the generation to complete."

2 all "Onboard Signal Processing"
 "Attributes for configuring Onboard Signal Processing."

3 all "OSP Enabled" NIFGEN_ATTR_OSP_ENABLED ViBoolean gs
 "Enables or disables the OSP block of the signal generator. When the OSP block is disabled, all OSP-related attributes are disabled and have no effect on the generated signal."

3 all "IQ Rate" NIFGEN_ATTR_OSP_IQ_RATE ViReal64 gs
 "The rate at which the user-provided waveform data is generated when the NIFGEN_ATTR_OSP_ENABLED attribute is set to VI_TRUE.\n\n"
 "NI-FGEN sets the NIFGEN_ATTR_ARB_SAMPLE_RATE attribute of the signal generator to the product of the values of the NIFGEN_ATTR_OSP_IQ_RATE, NIFGEN_ATTR_OSP_FIR_FILTER_INTERPOLATION, and NIFGEN_ATTR_OSP_CIC_FILTER_INTERPOLATION attributes. When the NIFGEN_ATTR_OSP_DATA_PROCESSING_MODE attribute is set to NIFGEN_VAL_OSP_REAL, the NIFGEN_ATTR_OSP_IQ_RATE attribute is the rate at which the signal generator processes real (I) data. When the NIFGEN_ATTR_OSP_DATA_PROCESSING_MODE attribute is set to NIFGEN_VAL_OSP_COMPLEX, the NIFGEN_ATTR_OSP_IQ_RATE is the rate at which the signal generator processes complex (IQ) data." 

3 all "Data Processing Mode" NIFGEN_ATTR_OSP_DATA_PROCESSING_MODE ViInt32 gs attrDataProcessingModeRangeTable
 "The way in which data is processed by the OSP block."

3 all "OSP Mode" NIFGEN_ATTR_OSP_MODE ViInt32 gs attrOSPModeRangeTable
 "Specifies the generation mode of the OSP, which determines the type of data contained in the output signal."

3 all "Carrier Enabled" NIFGEN_ATTR_OSP_CARRIER_ENABLED ViBoolean gs
 "Enables or disables generation of the carrier."

3 all "Carrier Frequency" NIFGEN_ATTR_OSP_CARRIER_FREQUENCY ViReal64 gs
 "The frequency of the generated carrier." 

3 all "Frequency Shift" NIFGEN_ATTR_OSP_FREQUENCY_SHIFT ViReal64 gs
 "Specifies the amount of frequency shift applied to the baseband signal."

3 all "FIR Filter"
 "FIR Filter specific attributes"

4 all "FIR Filter Type" NIFGEN_ATTR_OSP_FIR_FILTER_TYPE ViInt32 gs attrFIRFilterTypeRangeTable
 "Pulse-shaping filter type for the FIR filter."

4 all "Flat"
 "Flat FIR Filter Attribute"

5 all "Flat Passband" NIFGEN_ATTR_OSP_FIR_FILTER_FLAT_PASSBAND ViReal64 gs
 "Passband value to use when calculating the FIR filter coefficients. "
 "The FIR filter is designed to be flat to passband × IQ rate. "
 "This attribute is used only when the NIFGEN_ATTR_OSP_FIR_FILTER_TYPE "
 "attribute is set to NIFGEN_VAL_OSP_FLAT."

4 all "Raised Cosine" 
 "Raised Cosine FIR Filter Attribute"

5 all "Raised Cosine Alpha" NIFGEN_ATTR_OSP_FIR_FILTER_RAISED_COSINE_ALPHA ViReal64 gs
 "Alpha value to use when calculating the pulse shaping FIR filter "
 "coefficients. Only used when the NIFGEN_ATTR_OSP_FIR_FILTER_TYPE "
 "attribute is set to NIFGEN_VAL_OSP_RAISED_COSINE."

4 all "Root Raised Cosine" 
 "Root Raised Cosine FIR Filter Attribute"

5 all "Root Raised Cosine Alpha" NIFGEN_ATTR_OSP_FIR_FILTER_ROOT_RAISED_COSINE_ALPHA ViReal64 gs
 "Alpha value to use when calculating the pulse-shaping FIR filter "
 "coefficients. This attribute is used only when the NIFGEN_ATTR_OSP_FIR_FILTER_TYPE "
 "attribute is set to NIFGEN_VAL_OSP_ROOT_RAISED_COSINE."

4 all "Gaussian" 
 "Gaussian Attribute"

5 all "Gaussian BT" NIFGEN_ATTR_OSP_FIR_FILTER_GAUSSIAN_BT ViReal64 gs
 "BT value to use when calculating the pulse-shaping FIR filter coefficients. "
 "Only used when the NIFGEN_ATTR_OSP_FIR_FILTER_TYPE attribute is set to "
 "NIFGEN_VAL_OSP_GAUSSIAN."

3 all "IQ Signal Adjustments"
 "Apply adjustments to the IQ signals separately."

4 all "Carrier Phase"
 "Carrier Phase"

5 all "Carrier Phase I" NIFGEN_ATTR_OSP_CARRIER_PHASE_I ViReal64 gs
 "I Carrier Phase in degrees at the first point of the generation."

5 all "Carrier Phase Q" NIFGEN_ATTR_OSP_CARRIER_PHASE_Q ViReal64 gs
 "Q Carrier Phase in degrees at the first point of the generation. "
 "This attribute is only used when the NIFGEN_ATTR_OSP_DATA_PROCESSING_MODE "
 "attribute is set to NIFGEN_VAL_OSP_COMPLEX."

4 all "Gain" 
 "Pre-filter Gain Attributes"

5 all "Pre-filter Gain I" NIFGEN_ATTR_OSP_PRE_FILTER_GAIN_I ViReal64 gs
 "Digital gain to apply to the I data stream before any filtering by the OSP block."

5 all "Pre-filter Gain Q" NIFGEN_ATTR_OSP_PRE_FILTER_GAIN_Q ViReal64 gs
 "Digital gain to apply to the Q data stream before any filtering by the OSP block. "
 "This attribute is only used when the NIFGEN_ATTR_OSP_DATA_PROCESSING_MODE attribute "
 "is set to NIFGEN_VAL_OSP_COMPLEX."

4 all "Offset"
 "Offset Attributes"

5 all "Pre-filter Offset I" NIFGEN_ATTR_OSP_PRE_FILTER_OFFSET_I ViReal64 gs
 "Digital offset to apply to the I data stream. This offset is applied after "
 "the Pre-Filter Gain and before any filtering."

5 all "Pre-filter Offset Q" NIFGEN_ATTR_OSP_PRE_FILTER_OFFSET_Q ViReal64 gs
 "Digital offset to apply to the Q data stream. This offset is applied after "
 "the Pre-Filter Gain and before any filtering. This attribute is used only when "
 "the NIFGEN_ATTR_OSP_DATA_PROCESSING_MODE attribute is set to NIFGEN_VAL_OSP_COMPLEX."

3 all "Advanced"
 "Advanced OSP Attributes"

4 all "FIR Filter Enabled" NIFGEN_ATTR_OSP_FIR_FILTER_ENABLED ViBoolean gs
 "Enables or disables the FIR filter.\n\n"
 "Note:\n"
 "The NIFGEN_ATTR_OSP_CIC_FILTER_ENABLED and NIFGEN_ATTR_OSP_FIR_FILTER_ENABLED "
 "attributes must have the same enable/disable setting."

4 all "FIR Filter Interpolation" NIFGEN_ATTR_OSP_FIR_FILTER_INTERPOLATION ViReal64 gs
 "Interpolation factor for the FIR filter. If you do not set this value, "
 "NI-FGEN calculates the appropriate value based on the value of the NIFGEN_ATTR_OSP_IQ_RATE attribute." 

4 all "CIC Filter Enabled" NIFGEN_ATTR_OSP_CIC_FILTER_ENABLED ViBoolean gs
 "Enables or disables the CIC filter.\n\n"
 "Note:\n"
 "The NIFGEN_ATTR_OSP_CIC_FILTER_ENABLED and NIFGEN_ATTR_OSP_FIR_FILTER_ENABLED "
 "attributes must have the same enable/disable setting."

4 all "CIC Filter Gain" NIFGEN_ATTR_OSP_CIC_FILTER_GAIN ViReal64 gs
 "Gain applied at the final stage of the CIC filter. Commonly used to compensate "
 "for attenuation in the FIR filter. For FIR filter types other than Custom, "
 "NI-FGEN calculates the CIC gain in order to achieve unity gain between the FIR "
 "and CIC filters. Setting this attribute overrides the value set by NI-FGEN."

4 all "CIC Interpolation Factor" NIFGEN_ATTR_OSP_CIC_FILTER_INTERPOLATION ViReal64 gs
 "Interpolation factor for the CIC filter. If you do not set this value, NI-FGEN "
 "calculates the appropriate value based on the value of the NIFGEN_ATTR_OSP_IQ_RATE attribute."
 
4 all "Compensate for Filter Group Delay" NIFGEN_ATTR_OSP_COMPENSATE_FOR_FILTER_GROUP_DELAY ViBoolean gs
 "Compensate for OSP Filter Group Delay. If this is enabled, the Event Outputs will be aligned "
 "with the Analog Output. The Analog output will also be aligned between synchronized devices "
 "(using NI-TClk)."
 
4 all "OSP Overflow Error Reporting" NIFGEN_ATTR_OSP_OVERFLOW_ERROR_REPORTING ViInt32 gs attrOSPErrorReportingRangeTable 
 "Configures error reporting when the OSP block detects an overflow in any of its stages. "
 "Overflows lead to clipping of the waveform.\n\n"
 "You can use the NIFGEN_ATTR_OSP_OVERFLOW_STATUS attribute to query for overflow "
 "conditions whether or not the NIFGEN_ATTR_OSP_OVERFLOW_ERROR_REPORTING attribute is "
 "enabled. The device will continue to generate after an overflow whether or not the "
 "NIFGEN_ATTR_OSP_OVERFLOW_ERROR_REPORTING attribute is enabled."

4 all "OSP Overflow Status" NIFGEN_ATTR_OSP_OVERFLOW_STATUS ViInt32 gs attrOSPOverflowStatusRangeTable
 "Returns a bit field of the overflow status in any stage of the OSP block. "
 "This attribute is functional regardless of the value for the "
 "NIFGEN_ATTR_OSP_OVERFLOW_ERROR_REPORTING attribute. \n\n"
 "Write 0 to this attribute to clear the current NIFGEN_ATTR_OSP_OVERFLOW_ERROR_REPORTING value."

2 all "Peer-to-Peer"
 "Peer-to-Peer Attributes"

3 all "P2P Enabled" NIFGEN_ATTR_P2P_ENABLED ViBoolean gs
 "Specifies whether the signal generator reads data from the peer-to-peer endpoint, as opposed to "
 "the typical method of reading it from the onboard memory. This attribute is endpoint based. \n\n"

3 all "Destination Channels" NIFGEN_ATTR_P2P_DESTINATION_CHANNELS ViString gs
 "Specifies which channels will be written to by a peer-to-peer endpoint. If multiple channels are specified, "
 "data is deinterleaved to each channel. The default value is an empty string, which means all configured channels. "
 "Channels are configured using the niFgen_ConfigureChannels function. This attribute is endpoint based. \n\n"

3 all "Endpoint Size" NIFGEN_ATTR_P2P_ENDPOINT_SIZE ViInt32 g
 "Returns the size, in samples per channel, of the peer-to-peer endpoint. This attribute is endpoint based. \n\n"

3 all "Space Available In Endpoint" NIFGEN_ATTR_P2P_SPACE_AVAILABLE_IN_ENDPOINT ViInt32 g
 "Returns the current space available in the endpoint in samples per channel. You can use this attribute when "
 "priming the endpoint with initial data through the niFgen_WriteP2PEndpointI16 function to determine how many "
 "samples you can write. You can also use this attribute to characterize the performance and measure the latency "
 "of the peer-to-peer stream as data moves across the bus. This attribute is endpoint based. \n\n"

3 all "Most Space Available In Endpoint" NIFGEN_ATTR_P2P_MOST_SPACE_AVAILABLE_IN_ENDPOINT ViInt32 g
 "Returns the largest number of samples per channel available in the endpoint since this attribute was last read. "
 "Use this attribute to determine how much endpoint space to use as a buffer against PCI Express bus traffic "
 "latencies by reading the attribute and keeping track of the largest value returned. This attribute is endpoint based.\n\n"
 "If you wish to minimize the latency for data to move through the endpoint and be generated by the signal generator, "
 "use the NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_INITIAL_CREDITS attribute to grant fewer initial credits than the "
 "default of the entire endpoint size.  \n\n"

3 all "Endpoint Count" NIFGEN_ATTR_P2P_ENDPOINT_COUNT ViInt32 g
 "Returns the number of peer-to-peer FIFO endpoints supported by the device. \n\n"

3 all "Data Transfer Permission Interval" NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_INTERVAL ViInt32 gs
 "Specifies the interval, in samples per channel, at which the signal generator issues credits to allow the writer "
 "peer to transfer data over the bus into the configured endpoint. Refer to the Flow Control topic in the NI Signal "
 "Generators Help for more information. This attribute is coerced up by NI-FGEN to the nearest 128 byte boundary. "
 "This attribute is endpoint based.\n\n"
 "Default Value: 1,024 samples per channel \n\n"

3 all "Data Transfer Permission Initial Credits" NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_INITIAL_CREDITS ViInt32 gs
 "Specifies the initial amount of data, in samples per channel, that the writer peer is allowed to transfer over the bus "
 "into the configured endpoint when the peer-to-peer data stream is enabled. If you do not set this property and the endpoint "
 "is empty, credits equal to the full size of the endpoint are issued to the writer peer. If data has been written to the "
 "endpoint using the niFgen_WriteP2PEndpointI16 function prior to enabling the stream, credits equal to the remaining space "
 "available in the endpoint are issued to the writer peer. This attribute is coerced up by NI-FGEN to 8-byte boundaries. \n\n"

3 all "Manual"
 "Manual Configuration Peer-to-Peer Attributes"

4 all "Manual Configuration Enabled" NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED ViBoolean gs
 "Enables/disables manual configuration for a peer-to-peer endpoint. Enabling this attribute disables "
 "automatic NI-P2P stream manager flow control and Done Notifications. \n\n"

4 all "Configuration"
 "Configuration Peer-to-Peer Attributes"

5 all "Data Transfer Permission Address" NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_ADDRESS ViInt64 s
 "Indicates the address in the writer peer to which the signal generator should send data transfer permission credits. "
 "This attribute is endpoint based.\n\n"
 "NOTE: You can only use this attribute when the NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED attribute is set to VI_TRUE. \n\n"

5 all "Data Transfer Permission Address Type" NIFGEN_ATTR_P2P_DATA_TRANSFER_PERMISSION_ADDRESS_TYPE ViInt32 gs attrP2PAddressTypeTable
 "Indicates the address in the writer peer to which the signal generator should send data transfer permission credits. "
 "This attribute is endpoint based.\n\n"
 "NOTE: You can only use this attribute when the NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED attribute is set to VI_TRUE. \n\n"

5 all "Endpoint Window Address" NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_ADDRESS ViInt64 g
 "Specifies the signal generator address where endpoint data is sent by the writer peer. The type of this address is specified "
 "by the NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_ADDRESS_TYPE attribute. This attribute is endpoint based.\n\n"
 "NOTE: You can only use this attribute when the NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED attribute is set to VI_TRUE.\n\n"

5 all "Endpoint Window Address Type" NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_ADDRESS_TYPE ViInt32 gs attrP2PAddressTypeTable
 "Specifies the type of the NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_ADDRESS attribute. This attribute is endpoint based.\n\n"
 "NOTE: You can only use this attribute when the NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED attribute is set to VI_TRUE. \n\n"

5 all "Endpoint Window Size" NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_SIZE ViInt32 g
 "Specifies the type of the NIFGEN_ATTR_P2P_ENDPOINT_WINDOW_ADDRESS attribute. This attribute is endpoint based.\n\n"
 "NOTE: You can only use this attribute when the NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED attribute is set to VI_TRUE. \n\n"

4 all "Notification"
 "Notification Peer-to-Peer Attributes"

5 all "Done Notification Address" NIFGEN_ATTR_P2P_DONE_NOTIFICATION_ADDRESS ViInt64 g
 "Specifies the signal generator address to which the writer peer sends the NIFGEN_ATTR_P2P_DONE_NOTIFICATION_VALUE. "
 "This attribute is endpoint based. Refer to the Stopping a Peer-to-Peer Generation topic in the NI Signal Generators Help "
 "for more information.\n\n"
 "NOTE: You can use this attribute only when the NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED attribute is set to VI_TRUE. \n\n"

5 all "Done Notification Address Type" NIFGEN_ATTR_P2P_DONE_NOTIFICATION_ADDRESS_TYPE ViInt32 gs attrP2PAddressTypeTable
 "Specifies the address type of the NIFGEN_ATTR_P2P_DONE_NOTIFICATION_ADDRESS attribute. This attribute is endpoint based. "
 "Refer to the Stopping a Peer-to-Peer Generation topic in the NI Signal Generators Help for more information.\n\n"
 "NOTE: You can only use this attribute when the NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED attribute is set to VI_TRUE. \n\n"

5 all "Done Notification Value" NIFGEN_ATTR_P2P_DONE_NOTIFICATION_VALUE ViInt32 g
 "Specifies the value the writer peer should write to the address specified by the NIFGEN_ATTR_P2P_DONE_NOTIFICATION_ADDRESS "
 "attribute. This attribute is endpoint based. Refer to the Stopping a Peer-to-Peer Generation topic in the NI Signal Generators Help "
 "for more information.\n\n"
 "NOTE: You can only use this attribute when the NIFGEN_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED attribute is set to VI_TRUE. \n\n"

1 all "Standard Function"
 "Standard Function Attributes"

2 all "Waveform" NIFGEN_ATTR_FUNC_WAVEFORM ViInt32 gs attrFuncWaveformRangeTable 
 "This channel-based attribute specifies which standard waveform the signal generator produces.\n\n"
 "Use this attribute only when NIFGEN_ATTR_OUTPUT_MODE is set to "
 "NIFGEN_VAL_OUTPUT_FUNC.\n\n"
 "   NIFGEN_VAL_WFM_SINE      - Sinusoid waveform\n"
 "   NIFGEN_VAL_WFM_SQUARE    - Square waveform\n"
 "   NIFGEN_VAL_WFM_TRIANGLE  - Triangle waveform\n"
 "   NIFGEN_VAL_WFM_RAMP_UP   - Positive ramp waveform\n"
 "   NIFGEN_VAL_WFM_RAMP_DOWN - Negative ramp waveform\n"
 "   NIFGEN_VAL_WFM_DC        - Constant voltage\n"
 "   NIFGEN_VAL_WFM_NOISE     - White noise\n"
 "   NIFGEN_VAL_WFM_USER      - User-defined waveform as defined with\n"
 "                              niFgen_DefineUserStandardWaveform"

2 all "Amplitude" NIFGEN_ATTR_FUNC_AMPLITUDE ViReal64 gs 
 "Controls the amplitude of the standard waveform that the "
 "signal generator produces. This value is the amplitude at the "
 "output terminal.\n\n"
 "For example, to produce a waveform ranging from -5.00 V to +5.00 V, set "
 "the amplitude to 10.00 V.\n\n"
 "Note: This parameter does not affect signal generator behavior when you "
 "set the Waveform parameter to NIFGEN_VAL_WFM_DC.\n\n" 
 "Units: Vpk-pk"

2 all "DC Offset" NIFGEN_ATTR_FUNC_DC_OFFSET ViReal64 gs 
 "Controls the DC offset of the standard waveform that the "
 "signal generator produces.  This value is the offset at the output "
 "terminal. The value is the offset from ground to the center of the "
 "waveform that you specify with the Waveform parameter.\n\n"
 "For example, to configure a waveform with an amplitude of 10.00 V to "
 "range from 0.00 V to +10.00 V, set DC Offset to 5.00 V.\n\n"
 "Units: volts"

2 all "Start Phase" NIFGEN_ATTR_FUNC_START_PHASE ViReal64 gs 
 "Controls horizontal offset of the standard waveform the "
 "signal generator produces. Specify this attribute in degrees of "
 "one waveform cycle.\n\n"
 "A start phase of 180 degrees means output generation begins halfway "
 "through the waveform. A start phase of 360 degrees offsets the output by "
 "an entire waveform cycle, which is identical to a start phase of 0 "
 "degrees.\n\n"
 "Note: This parameter does not affect signal generator behavior when you "
 "set the Waveform parameter to NIFGEN_VAL_WFM_DC.\n\n"
 "Units: Degrees of one cycle"

2 all "Duty Cycle High" NIFGEN_ATTR_FUNC_DUTY_CYCLE_HIGH ViReal64 gs 
 "Controls the duty cycle of the square wave the signal generator "
 "produces. Specify this attribute as a percentage of "
 "the time the square wave is high in a cycle.\n\n"
 "Note: This parameter only affects signal generator behavior when you "
 "set the Waveform parameter to NIFGEN_VAL_WFM_SQUARE.\n\n"
 "Units: Percentage of time the waveform is high"

2 all "Sync Duty Cycle High" NIFGEN_ATTR_SYNC_DUTY_CYCLE_HIGH ViReal64 gs 
 "Controls the duty cycle of the square wave the signal generator "
 "produces on the SYNC out line.  Specify this attribute as a "
 "percentage of the time the square wave is high in each cycle.\n\n"
 "Units: Percentage of time the waveform is high"

2 all "Sync Out Output Terminal" NIFGEN_ATTR_SYNC_OUT_OUTPUT_TERMINAL ViString gs
 "Specifies the terminal to which to export the SYNC OUT signal. This attribute is not supported for all devices."

2 all "Standard Function Mode" "Attributes for generating standard function waveform output.  "
  "Use this group of attributes when you set NIFGEN_ATTR_OUTPUT_MODE to "
  "NIFGEN_VAL_OUTPUT_FUNC. You can use niFgen_ConfigureStandardWaveform "
  "to set all of these attributes except NIFGEN_ATTR_FUNC_DUTY_CYCLE_HIGH."

3 all "Frequency" NIFGEN_ATTR_FUNC_FREQUENCY ViReal64 gs 
 "Controls the frequency of the standard waveform that the "
 "signal generator produces.\n\n"
 "Units: hertz\n\n"
 "Notes:\n\n"
 "(1) This parameter does not affect signal generator behavior when you "
 "set the Waveform parameter of the niFgen_ConfigureStandardWaveform function "
 "to NIFGEN_VAL_WFM_DC.\n"
 "(2) For NIFGEN_VAL_WFM_SINE, the range is between 0 MHz and 16 MHz, but the "
 "range is between 0 MHz and 1 MHz for all other waveforms.\n\n"

3 all "Buffer Size" NIFGEN_ATTR_FUNC_BUFFER_SIZE ViInt32 g
 "This attribute contains the number of samples used in the standard function waveform "
 "buffer. This attribute is only valid on devices that implement standard function mode "
 "in software, and is read-only for all other devices.\n\n"
 "Note: Refer to the Standard Function Mode topic for more information on the "
 "implementation of Standard Function Mode on your device."
 
3 all "Maximum Buffer Size" NIFGEN_ATTR_FUNC_MAX_BUFFER_SIZE ViInt32 gs
 "This attribute sets the maximum number of samples that can be used in the standard "
 "function waveform buffer. Increasing this value may increase the quality of "
 "the waveform. This attribute is only valid on devices that implement standard "
 "function mode in software, and is read-only for all other devices.\n\n"
 "Note: Refer to the Standard Function Mode topic for more information on the "
 "implementation of Standard Function Mode on your device."

2 all "Frequency List Output" "Attributes for generating frequency list output. "
 "Use this group of attributes when you set NIFGEN_ATTR_OUTPUT_MODE to "
 "NIFGEN_VAL_FREQ_LIST.\n" 

3 all "Frequency List Handle" NIFGEN_ATTR_FREQ_LIST_HANDLE ViInt32 gs 
 "Sets which frequency list the signal generator "
 "produces. Create a frequency list using niFgen_CreateFreqList. "
 "niFgen_CreateFreqList returns a handle that you can "
 "use to identify the list."

3 all "Maximum Number of Frequency Lists" NIFGEN_ATTR_MAX_NUM_FREQ_LISTS ViInt32 g 
 "Returns the maximum number of frequency lists the signal generator allows."
 
3 all "Maximum Frequency List Length" NIFGEN_ATTR_MAX_FREQ_LIST_LENGTH ViInt32 g 
 "Returns the maximum number of steps that can be in a frequency "
 "list."

3 all "Minimum Frequency List Length" NIFGEN_ATTR_MIN_FREQ_LIST_LENGTH ViInt32 g 
 "Returns the minimum number of frequency lists that the signal generator allows."

3 all "Frequency List Duration Quantum" NIFGEN_ATTR_FREQ_LIST_DURATION_QUANTUM ViReal64 gs 
 "Returns the quantum of which all durations must be a multiple in a "
 "frequency list."

3 all "Maximum Frequency List Duration" NIFGEN_ATTR_MAX_FREQ_LIST_DURATION ViReal64 g 
 "Returns the maximum duration of any one step in the frequency "
 "list."

3 all "Minimum Frequency List Duration" NIFGEN_ATTR_MIN_FREQ_LIST_DURATION ViReal64 g 
 "Returns the minimum number of steps that can be in a frequency "
 "list."

1 all "Clocks"
 "Attributes used to configure signal generator clocking. "
 "These attributes can be used to configure Sample clocks, Reference clocks, "
 "the Onboard Reference clock, and the Sample clock timebase."

2 all "Reference Clock"
 "Reference Clock Attributes"

3 all "Frequency" NIFGEN_ATTR_REF_CLOCK_FREQUENCY ViReal64 gs 
 "Sets the frequency of the signal generator reference "
 "clock. The signal generator uses the reference clock to derive "
 "frequencies and sample rates when generating output."

3 all "Source" NIFGEN_ATTR_REFERENCE_CLOCK_SOURCE ViString gs
 "Specifies the reference clock source used by the signal generator.\n\n"
 "The signal generator derives the frequencies and sample rates that it uses "
 "to generate waveforms from the source you specify. "
 "For example, when you set this attribute to ClkIn, the signal "
 "generator uses the signal it receives at the CLK IN front "
 "panel connector as the Reference clock.\n\n"
 "NOTE: The signal generator must not be in the Generating state when you change this attribute."
 "To change the device configuration, call niFgen_AbortGeneration or wait for the generation to complete."

3 all "Exported Output Terminal" NIFGEN_ATTR_EXPORTED_REFERENCE_CLOCK_OUTPUT_TERMINAL ViString gs
 "Specifies the terminal to which to export the Reference Clock."

3 all "Onboard Reference Clock"
 "Onboard Reference Clock Attributes"

4 all "Onboard Reference Clock Output Terminal" NIFGEN_ATTR_EXPORTED_ONBOARD_REFERENCE_CLOCK_OUTPUT_TERMINAL ViString gs
 "Specifies the terminal to which to export the Onboard Reference Clock."

2 all "Sample Clock"
 "Sample Clock Attributes"

3 all "Rate" NIFGEN_ATTR_ARB_SAMPLE_RATE ViReal64 gs 
 "Specifies the rate at which the signal generator outputs the points in arbitrary waveforms. "
 "Use this attribute when NIFGEN_ATTR_OUTPUT_MODE is set "
 "to NIFGEN_VAL_OUTPUT_ARB or NIFGEN_VAL_OUTPUT_SEQ.\n\n"
 "Units: Samples/s"

3 all "Mode" NIFGEN_ATTR_CLOCK_MODE ViInt32 gs attrClockModeRangeTable 
 "Controls which clock mode is used for the signal generator.\n\n"
 "For signal generators that support it, this attribute allows switching the sample "
 "clock to High-Resolution mode. When in Divide-Down "
 "mode, the sample rate can only be set to certain frequences, based on "
 "dividing down the update clock. However, in High-Resolution mode, the "
 "sample rate may be set to any value."

3 all "Source" NIFGEN_ATTR_SAMPLE_CLOCK_SOURCE ViString gs
 "Specifies the Sample clock source. If you specify a divisor with the NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_DIVISOR "
 "attribute, the Sample clock exported with the NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_OUTPUT_TERMINAL attribute is the "
 "value of the Sample clock after it is divided-down. For a list of the terminals available on your device, refer "
 "to the Device Routes tab in MAX.\n\n"
 "NOTE: The signal generator must not be in the Generating state when you change this attribute. "
 "To change the device configuration, call niFgen_AbortGeneration or wait for the generation to complete."

3 all "Exported Output Terminal" NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_OUTPUT_TERMINAL ViString gs
 "Specifies the terminal to which to export the Sample Clock."

3 all "Exported Sample Clock Divisor" NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_DIVISOR ViInt32 gs 
 "Specifies the factor by which to divide the Sample clock, also known as the Update clock, before it is exported. "
 "To export the Sample clock, use the niFgen_ExportSignal function or the "
 "NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_OUTPUT_TERMINAL attribute."

2 all "Sample Clock Timebase"
 "Sample Clock Timebase Attributes"

3 all "Rate" NIFGEN_ATTR_SAMPLE_CLOCK_TIMEBASE_SOURCE ViString gs
 "Specifies the Sample Clock Timebase source.\n\n"
 "NOTE: The signal generator must not be in the Generating state when you change this attribute. "
 "To change the device configuration, call the niFgen_AbortGeneration function or wait for the generation to complete."

3 all "Source" NIFGEN_ATTR_SAMPLE_CLOCK_TIMEBASE_RATE ViReal64 gs
 "Specifies the Sample clock timebase rate. This attribute applies only to external Sample clock timebases.\n\n"
 "NOTE: The signal generator must not be in the Generating state when you change this attribute. "
 "To change the device configuration, call niFgen_AbortGeneration or wait for the generation to complete."

3 all "Exported Output Terminal" NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_TIMEBASE_OUTPUT_TERMINAL ViString gs
 "Specifies the terminal to which to export the Sample clock timebase."
 "If you specify a divisor with the NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_TIMEBASE_DIVISOR attribute, "
 " the Sample clock exported with the NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_TIMEBASE_OUTPUT_TERMINAL "
 "attribute is the value of the Sample clock timebase after it is divided-down. "
 "For a list of the terminals available on your device, refer to the Device Routes tab in MAX.\n"
 "NOTE: The signal generator must not be in the Generating state when you change this attribute."
 "To change the device configuration, call niFgen_AbortGeneration or wait for the generation to complete."

3 all "Exported Sample Clock Timebase Divisor" NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_TIMEBASE_DIVISOR ViInt32 gs 
 "Specifies the factor by which to divide the sample clock timebase (board clock) before it is exported. "
 "To export the Sample clock timebase, use the niFgen_ExportSignal function or the "
 "NIFGEN_ATTR_EXPORTED_SAMPLE_CLOCK_TIMEBASE_OUTPUT_TERMINAL attribute."

2 all "Advanced"
 "Advanced Clock Attributes"

3 all "External Sample Clock Multiplier" NIFGEN_ATTR_EXTERNAL_SAMPLE_CLOCK_MULTIPLIER ViReal64 gs
 "Specifies a multiplication factor to use to obtain a desired sample rate from an external Sample clock. "
 "The resulting sample rate is equal to this factor multiplied by the external Sample clock rate. "
 "You can use this attribute to generate samples at a rate higher than your external clock rate. "
 "When using this attribute, you do not need to explicitly set the external clock rate."

3 all "Sample Clock Absolute Delay" NIFGEN_ATTR_SAMPLE_CLOCK_ABSOLUTE_DELAY ViReal64 gs
 "Specifies the absolute delay adjustment of the sample clock. The "
 "sample clock delay adjustment is expressed in seconds.\n\n"
 "Note: For the NI 5421, absolute delay "
 "can only be applied when an external sample clock is used."

3 all "External Clock Delay Binary Value" NIFGEN_ATTR_EXTERNAL_CLOCK_DELAY_BINARY_VALUE ViInt32 gs
  "Binary value of the external clock delay."

3 all "Oscillator Phase DAC Value" NIFGEN_ATTR_OSCILLATOR_PHASE_DAC_VALUE ViInt32 gs
  "The value of the oscillator phase DAC."

1 all "Events" 
 "Attributes used to configure events on the signal generator.  This class of attributes also "
 "contains attributes used to configure the Sample clock before exporting."

2 all "Marker"
 "Attributes for configuring the marker events."

3 all "Output Terminal" NIFGEN_ATTR_MARKER_EVENT_OUTPUT_TERMINAL ViString gs
 "Specifies the destination terminal for the Marker Event."

3 all "Output Behavior" NIFGEN_ATTR_MARKER_EVENT_OUTPUT_BEHAVIOR ViInt32 gs attrEventOutputBehavior
 "Specifies the output behavior for the Marker Event."

3 all "Pulse" 
 "Attributes for configuring the marker event's pulse behavior."

4 all "Polarity" NIFGEN_ATTR_MARKER_EVENT_PULSE_POLARITY ViInt32 gs attrEventActiveLevel
 "Specifies the output polarity of the Marker Event."

4 all "Width Units" NIFGEN_ATTR_MARKER_EVENT_PULSE_WIDTH_UNITS ViInt32 gs attrPulseWidthUnits
 "Specifies the pulse width units for the Marker Event."

4 all "Width Value" NIFGEN_ATTR_MARKER_EVENT_PULSE_WIDTH ViReal64 gs
 "Specifies the pulse width for the Marker Event."

3 all "Toggle" 
 "Attributes for configuring the marker event's toggle behavior."

4 all "Initial State" NIFGEN_ATTR_MARKER_EVENT_TOGGLE_INITIAL_STATE ViInt32 gs attrToggleInitialState
 "Specifies the output polarity of the Marker Event."

3 all "Advanced"
 "Advanced Marker Event attributes."

4 all "Delay Units" NIFGEN_ATTR_MARKER_EVENT_DELAY_UNITS ViInt32 gs attrPulseWidthUnits
 "Specifies the units applied to the value of the NIFGEN_ATTR_MARKER_EVENT_DELAY"
 "attribute.  Valid units are seconds and sample clock periods."

4 all "Delay Value" NIFGEN_ATTR_MARKER_EVENT_DELAY ViReal64 gs 
 "Specifies the amount of delay applied to a Marker Event with respect to the "
 "analog output of the signal generator. A positive delay value indicates that "
 "the Marker Event will come out after the analog data, while a negative delay "
 "value indicates that the Marker Event will come out before the analog data. "
 "The default value is zero, which will align the Marker Event with the "
 "analog output."
 "You can specify the units of the delay value by setting the"
 "NIFGEN_ATTR_MARKER_EVENT_DELAY attribute."

4 all "Latched Status" NIFGEN_ATTR_MARKER_EVENT_LATCHED_STATUS ViBoolean gs 
 "Specifies the latched status of the specified Marker Event.\n"
 "Write VI_TRUE to this attribute to clear the latched status of the Marker Event."

4 all "All Marker Events Latched Status" NIFGEN_ATTR_ALL_MARKER_EVENTS_LATCHED_STATUS ViInt32 gs 
 "Returns a bit field of the latched status of all Marker Events. "
 "Write 0 to this attribute to clear the latched status of all Marker Events."

4 all "Live Status" NIFGEN_ATTR_MARKER_EVENT_LIVE_STATUS ViBoolean g 
 "Returns the live status of the specified Marker Event."

4 all "All Marker Events Live Status" NIFGEN_ATTR_ALL_MARKER_EVENTS_LIVE_STATUS ViInt32 g 
 "Returns a bit field of the live status of all Marker Events."

2 all "Data Marker"
 "Attributes for configuring the data marker events."

3 all "Output Terminal" NIFGEN_ATTR_DATA_MARKER_EVENT_OUTPUT_TERMINAL ViString gs
 "Specifies the destination terminal for the Data Marker Event."

3 all "Data Bit Number" NIFGEN_ATTR_DATA_MARKER_EVENT_DATA_BIT_NUMBER ViInt32 gs
 "Specifies the bit number to assign to the Data Marker Event."

3 all "Level"
 "Attributes for configuring the data marker event's level behavior."

4 all "Active Level" NIFGEN_ATTR_DATA_MARKER_EVENT_LEVEL_POLARITY ViInt32 gs attrEventActiveLevel
 "Specifies the output polarity of the Data marker event."

2 all "Ready For Start"
 "Attributes for configuring the ready for start event"

3 all "Output Terminal" NIFGEN_ATTR_READY_FOR_START_EVENT_OUTPUT_TERMINAL ViString gs
  "Specifies the destination terminal for the Ready for Start Event.\n"

3 all "Level"

4 all "Active Level" NIFGEN_ATTR_READY_FOR_START_EVENT_LEVEL_ACTIVE_LEVEL ViInt32 gs attrEventActiveLevel
  "Specifies the output polarity of the Ready for Start Event.\n"

3 all "Advanced"
 "Advanced event attributes."

4 all "Live Status" NIFGEN_ATTR_READY_FOR_START_EVENT_LIVE_STATUS ViBoolean g 
  "Returns the live status of the specified Ready For Start Event.\n"

2 all "Started"
 "Attributes for configuring the started event."

3 all "Output Terminal" NIFGEN_ATTR_STARTED_EVENT_OUTPUT_TERMINAL ViString gs
 "Specifies the destination terminal for the Started Event."

3 all "Output Behavior" NIFGEN_ATTR_STARTED_EVENT_OUTPUT_BEHAVIOR ViInt32 gs attrEventOutputBehavior
 "Specifies the output behavior for the Started Event."

3 all "Pulse" 
 "Attributes for configuring the started event's pulse behavior."

4 all "Polarity" NIFGEN_ATTR_STARTED_EVENT_PULSE_POLARITY ViInt32 gs attrEventActiveLevel
 "Specifies the output polarity of the Started Event."

4 all "Width Units" NIFGEN_ATTR_STARTED_EVENT_PULSE_WIDTH_UNITS ViInt32 gs attrPulseWidthUnits
 "Specifies the pulse width units for the Started Event."

4 all "Width Value" NIFGEN_ATTR_STARTED_EVENT_PULSE_WIDTH ViReal64 gs
 "Specifies the pulse width for the Started Event."

3 all "Level"
 "Attributes for configuring the started event's level behavior."

4 all "Active Level" NIFGEN_ATTR_STARTED_EVENT_LEVEL_ACTIVE_LEVEL ViInt32 gs attrEventActiveLevel
  "Specifies the output polarity of the Started Event."

3 all "Advanced"
 "Advanced event attributes."

4 all "Delay Value" NIFGEN_ATTR_STARTED_EVENT_DELAY ViReal64 gs 
 "Specifies the amount of delay applied to a Started Event with respect to the "
 "analog output of the signal generator. A positive delay value specifies that "
 "the Started Event occurs after the analog data, and a negative delay "
 "value specifies that the Started Event occurs before the analog data. "
 "The default value is zero, which will align the Started event with the analog output.\n"
 "You can specify the units of the delay value by setting the"
 "NIFGEN_ATTR_STARTED_EVENT_DELAY attribute.\n"

4 all "Delay Units" NIFGEN_ATTR_STARTED_EVENT_DELAY_UNITS ViInt32 gs attrPulseWidthUnits
 "Specifies the units applied to the value of the NIFGEN_ATTR_STARTED_EVENT_DELAY\n"
 "attribute.  Valid units are seconds and sample clock periods."

4 all "Latched Status" NIFGEN_ATTR_STARTED_EVENT_LATCHED_STATUS ViBoolean g 
 "Specifies the latched status of the Started Event."

2 all "Done"
 "Attributes for configuring the done event."

3 all "Output Terminal" NIFGEN_ATTR_DONE_EVENT_OUTPUT_TERMINAL ViString gs
 "Specifies the destination terminal for the Done Event."

3 all "Output Behavior" NIFGEN_ATTR_DONE_EVENT_OUTPUT_BEHAVIOR ViInt32 gs attrEventOutputBehavior
 "Specifies the output behavior for the Done Event."

3 all "Pulse" 
 "Attributes for configuring the done event's pulse behavior."

4 all "Polarity" NIFGEN_ATTR_DONE_EVENT_PULSE_POLARITY ViInt32 gs attrEventActiveLevel
 "Specifies the output polarity of the Done Event."
  
4 all "Width Units" NIFGEN_ATTR_DONE_EVENT_PULSE_WIDTH_UNITS ViInt32 gs attrPulseWidthUnits
 "Specifies the pulse width units for the Done Event."

4 all "Width Value" NIFGEN_ATTR_DONE_EVENT_PULSE_WIDTH ViReal64 gs
 "Specifies the pulse width for the Done Event."

3 all "Level"
 "Attributes for configuring the done event's level behavior."

4 all "Active Level" NIFGEN_ATTR_DONE_EVENT_LEVEL_ACTIVE_LEVEL ViInt32 gs attrEventActiveLevel
 "Specifies the output polarity of the Done Event."

3 all "Advanced"
 "Advanced event attributes."

4 all "Event Delay" NIFGEN_ATTR_DONE_EVENT_DELAY ViReal64 gs 
 "Specifies the amount of delay applied to a Done Event with respect to the "
 "analog output of the signal generator. A positive delay value indicates that "
 "the Done Event will come out after the analog data, while a negative delay "
 "value indicates that the Done Event will come out before the analog data. "
 "The default value is zero, which will align the Done Event with the analog output. "
 "You can specify the units of the delay value by setting the "
 "NIFGEN_ATTR_DONE_EVENT_DELAY attribute."

4 all "Event Delay Units" NIFGEN_ATTR_DONE_EVENT_DELAY_UNITS ViInt32 gs attrPulseWidthUnits
 "Specifies the units applied to the value of the NIFGEN_ATTR_DONE_EVENT_DELAY"
 "attribute. Valid units are seconds and sample clock periods."

4 all "Latched Status" NIFGEN_ATTR_DONE_EVENT_LATCHED_STATUS ViBoolean g 
 "Returns the latched status of the specified Done Event."

1 all "Triggers"
 "Attributes for setting triggering characteristics."

2 all "Trigger Mode" NIFGEN_ATTR_TRIGGER_MODE ViInt32 gs attrTriggerModeRangeTable 
 "Controls the trigger mode."

2 all "Start"
 "Attributes for configuring the Start trigger."

3 all "Trigger Type" NIFGEN_ATTR_START_TRIGGER_TYPE ViInt32 gs attrTriggerTypeEdge
 "Specifies whether you want the Start trigger to be a Digital Edge, or Software trigger. You can also choose None as the value for this attribute."

3 all "Export Output Terminal" NIFGEN_ATTR_EXPORTED_START_TRIGGER_OUTPUT_TERMINAL ViString gs
 "Specifies the destination terminal for exporting the Start trigger."

3 all "Digital Edge"
 "Attributes for configuring the start trigger for digital edge triggering."

4 all "Source" NIFGEN_ATTR_DIGITAL_EDGE_START_TRIGGER_SOURCE ViString gs
 "Specifies the source terminal for the Start trigger. This attribute is used only when NIFGEN_ATTR_START_TRIGGER_TYPE is set to Digital Edge."

4 all "Edge" NIFGEN_ATTR_DIGITAL_EDGE_START_TRIGGER_EDGE ViInt32 gs attrTriggerDigitalEdge
 "Specifies the active edge for the Start trigger. This attribute is used only when NIFGEN_ATTR_START_TRIGGER_TYPE is set to Digital Edge."

3 all "P2P Endpoint Fullness"
 "Attributes for configuring the Start trigger for P2P Endpoint Fullness triggering."

4 all "Level" NIFGEN_ATTR_P2P_ENDPOINT_FULLNESS_START_TRIGGER_LEVEL ViInt32 gs
 "Specifies the Endpoint threshold for the Start trigger. This attribute is used only when NIFGEN_ATTR_START_TRIGGER_TYPE is set to P2P Endpoint Fullness."

2 all "Script"
 "Attributes for configuring the Script triggers."

3 all "Trigger Type" NIFGEN_ATTR_SCRIPT_TRIGGER_TYPE ViInt32 gs attrScriptTriggerType
 "Specifies the Script trigger type. Depending upon the value of this attribute, additional attributes may need to be configured to fully configure the trigger.\n"

3 all "Export Output Terminal" NIFGEN_ATTR_EXPORTED_SCRIPT_TRIGGER_OUTPUT_TERMINAL ViString gs
 "Specifies the output terminal for the exported Script trigger.\n"
 "Setting this attribute to an empty string means that when you commit the session, the signal is removed from that terminal and, if possible, the terminal is tristated."

3 all "Digital Edge"
 "Attributes for configuring the Script triggers for digital edge triggering."

4 all "Source" NIFGEN_ATTR_DIGITAL_EDGE_SCRIPT_TRIGGER_SOURCE ViString gs
 "Specifies the source terminal for the Script trigger. This attribute is used when NIFGEN_ATTR_SCRIPT_TRIGGER_TYPE is set to Digital Edge.\n"

4 all "Edge" NIFGEN_ATTR_DIGITAL_EDGE_SCRIPT_TRIGGER_EDGE ViInt32 gs attrTriggerDigitalEdge
 "Specifies the active edge for the Script trigger. This attribute is used when NIFGEN_ATTR_SCRIPT_TRIGGER_TYPE is set to Digital Edge."

3 all "Digital Level"
 "Attributes for configuring the Script trigger for digital level triggering."

4 all "Source" NIFGEN_ATTR_DIGITAL_LEVEL_SCRIPT_TRIGGER_SOURCE  ViString gs
 "Specifies the source terminal for the Script trigger. This attribute is used when NIFGEN_ATTR_SCRIPT_TRIGGER_TYPE is set to Digital Level.\n"

4 all "Active Level" NIFGEN_ATTR_DIGITAL_LEVEL_SCRIPT_TRIGGER_ACTIVE_LEVEL ViInt32 gs attrTriggerDigitalLevel
 "Specifies the active level for the Script trigger. This attribute is used when NIFGEN_ATTR_SCRIPT_TRIGGER_TYPE is set to Digital Level.\n"

1 all "Instrument" 
 "Attributes that depend on the instrument in use."

2 all "Bus Type" NIFGEN_ATTR_BUS_TYPE ViInt32 g attrBusTypeRangeTable 
 "The bus type of the signal generator."

2 all "Memory Size" NIFGEN_ATTR_MEMORY_SIZE ViInt32 g
 "The total amount of memory, in bytes, on the signal generator."

2 all "Serial Number" NIFGEN_ATTR_SERIAL_NUMBER ViString g
 "The signal generator's serial number."

2 all "Markers Events Count" NIFGEN_ATTR_MARKER_EVENTS_COUNT ViInt32 g 
  "Returns the number of markers supported by the device. Use this attribute when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_SCRIPT."

2 all "Data Marker Events Count" NIFGEN_ATTR_DATA_MARKER_EVENTS_COUNT ViInt32 g
 "Returns the number of Data Marker Events supported by the device. \n"

2 all "Script Triggers Count" NIFGEN_ATTR_SCRIPT_TRIGGERS_COUNT ViInt32 g 
  "Specifies the number of Script triggers supported by the device. Use this attribute when NIFGEN_ATTR_OUTPUT_MODE is set to NIFGEN_VAL_OUTPUT_SCRIPT."

2 all "FPGA Bitfile Path" NIFGEN_ATTR_FPGA_BITFILE_PATH ViConstString g
 "Gets the absolute file path to the bitfile loaded on the FPGA."

2 all "Calibration"
 "Attributes used to perform a calibration on the signal generator."

3 all "Cal ADC Input" NIFGEN_ATTR_CAL_ADC_INPUT ViInt32 gs attrCalADCInputRangeTable
 "Specifies the input of the calibration ADC. The ADC can take a reading from several inputs: the analog output, a 2.5 V reference, and ground."

3 all "Gain DAC Value" NIFGEN_ATTR_GAIN_DAC_VALUE ViInt32 gs
 "Specifies the value programmed to the gain DAC. The value should be treated as an unsigned, right-justified number."

3 all "Offset DAC Value" NIFGEN_ATTR_OFFSET_DAC_VALUE ViInt32 gs
 "Specifies the value programmed to the offset DAC. The value should be treated as an unsigned, right-justified number."

3 all "Oscillator Frequency DAC Value" NIFGEN_ATTR_OSCILLATOR_FREQ_DAC_VALUE ViInt32 gs
 "Specifies the value programmed to the oscillator frequency DAC. The value should be treated as an unsigned, right-justified number."

3 all "Pre-Amplifier Attenuation"   NIFGEN_ATTR_PRE_AMPLIFIER_ATTENUATION ViReal64 gs
 "Specifies the amount of pre-amplifier attenuation that should be applied to the signal (in dB)."

3 all "Post-Amplifier Attenuation" NIFGEN_ATTR_POST_AMPLIFIER_ATTENUATION ViReal64 gs
 "Specifies the amount of post-amplifier attenuation that should be applied to the signal (in dB)."

2 all "Inherent IVI Attributes" "Attributes common to all IVI instrument drivers."

3 all "Advanced Session Information" 
 "Attributes that contain additional information concerning the NI-FGEN session.  "
 "    "

4 all "Driver Setup" NIFGEN_ATTR_DRIVER_SETUP ViString g 
 "Specifies the driver setup portion of the option string that was passed into the niFgen_InitWithOptions function." 

4 all "Logical Name" NIFGEN_ATTR_LOGICAL_NAME ViString  g
 "A string containing the logical name that you specified when opening the "
 "current IVI session.\n\n"
 "     You may pass a logical name to niFgen_init or "
 "niFgen_InitWithOptions. "
 "The IVI Configuration Utility must contain an entry for the logical name.  "
 "The logical name entry refers to a virtual instrument section in the "
 "IVI Configuration file. The virtual instrument section specifies a physical "
 "device and initial user options.\n"
 "    "

4 all "Resource Descriptor" NIFGEN_ATTR_IO_RESOURCE_DESCRIPTOR ViString  g
 "Indicates the resource descriptor that NI-FGEN"
 "uses to identify the physical device.\n\n"
 "    If you initialize NI-FGEN with a logical name, this "
 "attribute contains the resource descriptor that corresponds "
 "to the entry in the IVI Configuration Utility.\n\n"
 "    If you initialize NI-FGEN with the resource "
 "descriptor, this attribute contains that value.\n"
 "    "

3 all "Driver Capabilities"
 "Attributes that provide information about the capabilities of NI-FGEN.\n"
 "    "

4 all "Channel Count" NIFGEN_ATTR_CHANNEL_COUNT ViInt32 g
 "Returns the number of channels that the specific instrument "
 "driver supports.  \n\n"
 "For each attribute for which IVI_VAL_MULTI_CHANNEL "
 "is set, the IVI Engine maintains a separate cache value for each channel.\n"
 "    "
 

4 all "Class Group Capabilities" NIFGEN_ATTR_GROUP_CAPABILITIES ViString g
 "Returns a string that contains a comma-separated list of class-extention groups that "
 "NI-FGEN implements.\n"
 "    "

4 all "Supported Instrument Models" NIFGEN_ATTR_SUPPORTED_INSTRUMENT_MODELS ViString  g
 "Returns a model code of the device. For NI-FGEN versions that support more than one device, this "
 "attribute contains a comma-separated list of supported device "
 "models.\n"
 "    "

3 all "Driver Identification"
 "Attributes that provide identity and version information about NI-FGEN.\n"
 "    "

4 all "Class Specification Major Version" NIFGEN_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION ViInt32 g
 "Returns the major version number of the class specification with which NI-FGEN is compliant.\n"
 "    "

4 all "Class Specification Minor Version" NIFGEN_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION ViInt32 g
 "Returns the minor version number of the class specification with which NI-FGEN is compliant.\n"
 "    "

4 all "Description" NIFGEN_ATTR_SPECIFIC_DRIVER_DESCRIPTION ViString g
 "Returns a brief description of NI-FGEN.\n"
  "    "

4 all "Driver Prefix" NIFGEN_ATTR_SPECIFIC_DRIVER_PREFIX ViString g  
 "A string that contains the prefix for NI-FGEN. The name of each "
 "user-callable function in NI-FGEN starts with this prefix.\n"
 "    "

4 all "Driver Vendor" NIFGEN_ATTR_SPECIFIC_DRIVER_VENDOR ViString g
 "A string that contains the name of the vendor that supplies NI-FGEN.\n"
 "    "


4 all "Revision" NIFGEN_ATTR_SPECIFIC_DRIVER_REVISION ViString g 
 "A string that contains additional version information about "
 "NI-FGEN.\n"
 "    "
 
4 all "ID Query Response" NIFGEN_ATTR_ID_QUERY_RESPONSE ViString g
 "    "


3 all "Instrument Identification" 
 "Attributes that provide identity information about the device that you are using."
 "    "
 
4 all "Firmware Revision" NIFGEN_ATTR_INSTRUMENT_FIRMWARE_REVISION ViString g
 "A string that contains the firmware revision information "
 "for the device that you are currently using.\n"
 "    "

4 all "Module Revision" NIFGEN_ATTR_MODULE_REVISION ViString g
 "A string that contains the module revision "
 "for the device that you are currently using.\n"
 "    "

4 all "Manufacturer" NIFGEN_ATTR_INSTRUMENT_MANUFACTURER ViString g
 "A string that contains the name of the device manufacturer you are currently "
 "using.\n"
 "    "

4 all "Model" NIFGEN_ATTR_INSTRUMENT_MODEL ViString g
 "A string that contains the model number or name of the device that you "
 "are currently using.\n"
 "    "

3 all "User Options" 
 "Attributes you can set to affect NI-FGEN operation.\n"
 "    "

4 all "Cache" NIFGEN_ATTR_CACHE ViBoolean gs Boolean_values 
 "Specifies whether to cache the value of attributes.  "
 "When caching is enabled, NI-FGEN keeps track of "
 "the current device settings and avoids sending redundant commands to "
 "the device. Thus, you can significantly increase execution speed.\n"
 "    NI-FGEN can choose to always cache or to never cache "
 "particular attributes regardless of the setting of this attribute. "
 "Use niFgen_InitWithOptions to override the default value.\n\n"
 "    "

4 all "Interchange Check" NIFGEN_ATTR_INTERCHANGE_CHECK ViBoolean gs Boolean_values 
 "Specifies whether to perform interchangeability checking and retrieve "
 "interchangeability warnings when you call "
 "niFgen_InitiateGeneration. \n\n"
 "Interchangeability warnings indicate that using your application with a "
 "different device might cause different behavior.  "
 "Call niFgen_GetNextInterchangeWarning to extract interchange warnings.  "
 "Call niFgen_ClearInterchangeWarnings to clear the list "
 "of interchangeability warnings without reading them.\n\n"
 "Interchangeability checking examines the attributes in a "
 "capability group only if you specify a value for at least one "
 "attribute within that group. Interchangeability warnings can "
 "occur when an attribute affects the behavior of the device and you "
 "have not set that attribute, or the attribute has been invalidated since you set it.\n\n"
 "    "
 
4 all "Query Instrument Status" NIFGEN_ATTR_QUERY_INSTRUMENT_STATUS ViBoolean gs Boolean_values 
 "Specifies whether NI-FGEN queries the device status "
 "after each operation. Querying the device status is very useful "
 "for debugging. After you validate your program, you can set this "
 "attribute to VI_FALSE to disable status checking and maximize "
 "performance.\n\n"
 "    NI-FGEN can choose to ignore status checking for "
 "particular attributes regardless of the setting of this attribute.\n\n"
 "Use niFgen_InitWithOptions to override the default value.\n"
 "    "

4 all "Range Check" NIFGEN_ATTR_RANGE_CHECK ViBoolean gs Boolean_values 
 "Specifies whether to validate attribute values and function parameters. "
 "If enabled, NI-FGEN validates the parameter values that "
 "you pass to the functions. Range-checking "
 "parameters is very useful for debugging. After you validate your program, "
 "you can set this attribute to VI_FALSE to disable range checking and "
 "maximize performance.\n\n"
 "Default Value: VI_TRUE\n\n"
 "Use niFgen_InitWithOptions to override the default value.\n"
 "    "

4 all "Record Value Coercions" NIFGEN_ATTR_RECORD_COERCIONS ViBoolean gs Boolean_values       
 "Specifies whether the IVI Engine keeps a list of "
 "the value coercions it makes for ViInt32 and ViReal64 attributes.  "  
 "Call niFgen_GetNextCoercionRecord to extract and delete the oldest "
 "coercion record from the list.\n\n"  
 "    Default Value: VI_FALSE\n\n"
 "Use niFgen_InitWithOptions to override default value.\n"
 "    "

4 all "Simulate" NIFGEN_ATTR_SIMULATE ViBoolean gs Boolean_values 
 "Specifies whether to simulate NI-FGEN I/O "
 "operations. If simulation is enabled, NI-FGEN "
 "functions perform range checking and call Ivi_GetAttribute and "
 "Ivi_SetAttribute, but they do not perform device I/O.  "
 "For output parameters that represent device data, NI-FGEN "
 "functions return calculated values.\n\n"
 "   Default Value: VI_FALSE\n\n"
 "Use niFgen_InitWithOptions to override default value.\n"
 "    "


2 all "5401/5411/5431"
 "Attributes specific for NI-5401/NI-5411/NI-5431"

3 all "Filter Correction Frequency" NIFGEN_ATTR_FILTER_CORRECTION_FREQUENCY ViReal64 gs 
 "Controls the filter correction frequency of the analog filter. This attribute corrects for the ripples in the analog filter frequency response at the frequency specified. For standard waveform output, the filter correction frequency should be set to be the same as the frequency of the standard waveform. To have no filter correction, set this attribute to 0 Hz."

3 all "Trigger Source" NIFGEN_ATTR_TRIGGER_SOURCE ViInt32 gs attrTriggerSourceRangeTable 
 "Controls which trigger source the signal generator uses.\n\n"
 "After you call the niFgen_InitiateGeneration function, the signal generator waits for the trigger that you specify in the triggerSource parameter. After the signal generator receives a trigger, it produces the number of cycles that you specify in the NIFGEN_ATTR_CYCLE_COUNT attribute.\n\n"
 "This attribute is also the source for the trigger in the other trigger modes as specified by the NIFGEN_ATTR_TRIGGER_MODE attribute." 

3 all "Synchronization Source" NIFGEN_ATTR_SYNCHRONIZATION ViInt32 gs attrSynchronizationRangeTable 
 "Specify the source of the synchronization signal that you want to use.\n\n"

3 all "Video Waveform Type" NIFGEN_ATTR_VIDEO_WAVEFORM_TYPE ViInt32 gs attrVideoWaveformTypeRangeTable 
 "Selects which waveform type that the NI 5431 generates. Setting this attribute ensures that the crystal is set to the proper frequency."

2 all "Obsolete" 
 "These attributes are no longer supported."

3 all "Error Elaboration" NIFGEN_ATTR_ERROR_ELABORATION ViString  gs 
 "Specifies an optional string that contains additional information concerning the "
 "primary error condition.\n"
 "    "

3 all "Primary Error" NIFGEN_ATTR_PRIMARY_ERROR ViInt32 gs 
 "Specifies a code that describes the first error that occurred since the last "
 "call to niFgen_GetErrorInfo on the session. The value follows the "
 "VXI plug&play completion code conventions. A negative value describes "
 "an error condition. A positive value describes a warning condition "
 "and indicates that no error occurred. A zero indicates that no error "
 "or warning occurred. The error and warning values can be status codes "
 "defined by IVI, VISA, class drivers, or specific drivers.\n"
 "    "

3 all "Secondary Error" NIFGEN_ATTR_SECONDARY_ERROR ViInt32   gs 
 "Specifies an optional code that provides additional information concerning the "
 "primary error condition. The error and warning values can be status codes "
 "defined by IVI, VISA, class drivers, or specific drivers.  A value of zero indicates "
 "no additional information.\n"
 "    "

3 all "Operation Mode" NIFGEN_ATTR_OPERATION_MODE ViInt32 gs attrOperationModeRangeTable
 "Specifies how the signal generator produces waveforms. "
 "Currently only continuous mode is valid for NI signal generators. "
 "To control trigger mode, use NIFGEN_ATTR_TRIGGER_MODE instead.\n"
 "      "


3 all "Reference Clock Source" NIFGEN_ATTR_REF_CLOCK_SOURCE ViInt32 gs attrRefClockSourceRangeTable 
 "Controls the reference clock source that the signal generator"
 "uses.  \n"
 "\n"
 "The signal generator derives the frequencies and sample rates that it "
 "uses to generate waveforms from the source you specify."
 "For example, when you set this parameter to NIFGEN_VAL_EXTERNAL, the signal generator uses"
 "the signal it receives at its external clock connector as its reference "
 "clock.\n"
 "\n"
 "Note: All of the signal generator channels use the clock source that you "
 "specify.\n\n"
 " "

3 all "Update Clock Source" NIFGEN_ATTR_UPDATE_CLOCK_SOURCE ViInt32 gs attrUpdateClockSourceRangeTable 
 "Controls the update clock source.\n\n"
 " "

3 all "Cycle Count" NIFGEN_ATTR_CYCLE_COUNT ViInt32 gs
  "Specifies the number of cycles that you want the signal generator to produce after it receives a trigger./n"
  "For standard and arbitrary waveforms, a cycle is one period of the waveform./n"
  "An arbitrary sequence consists of multiple arbitrary waveforms in a sequence. Each waveform can be" 
  "repeated a discrete number of times before the next waveform is produced. For arbitrary sequences," 
  "a cycle is one complete progression through the generation of all iterations of all waveforms in the sequence./n/n"
  "Note: The NI 5411/5421 arbitrary waveform generators support only continuous generation./n"

 
3 all "Instrument I/O Session" NIFGEN_ATTR_IO_SESSION ViSession g  
 "Specifies the I/O session that NI-FGEN uses "
 "to communicate with the instrument.\n"
 "    "

3 all "Number of Channels" NIFGEN_ATTR_NUM_CHANNELS ViInt32 g
 "Indicates the number of channels that the specific instrument "
 "driver supports.  \n\n"
 "For each attribute for which IVI_VAL_MULTI_CHANNEL"
 "is set, the IVI Engine maintains a separate cache value for each channel.\n"
 "    "

3 all "Burst Count" NIFGEN_ATTR_BURST_COUNT ViInt32 gs
 "The number of times to repeat each waveform in burst trigger mode."

3 all "Actual Arb Sample Rate" NIFGEN_ATTR_ACTUAL_ARB_SAMPLE_RATE ViReal64 g 
 "The actual sample rate value of the signal generator.  "

3 all "DAQmx Task" NIFGEN_ATTR_DAQMX_TASK ViInt32 g 
  "The NI-DAQmx task that NI-FGEN uses for the NI 5421.  For internal use only."
